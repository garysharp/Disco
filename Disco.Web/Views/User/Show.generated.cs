#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Views.User
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 2 "..\..\Views\User\Show.cshtml"
    using Disco.Services.Users.UserFlags;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/User/Show.cshtml")]
    public partial class Show : Disco.Services.Web.WebViewPage<Disco.Web.Models.User.ShowModel>
    {
        public Show()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\User\Show.cshtml"
  
    Authorization.Require(Claims.User.Show);

    ViewBag.Title = Html.ToBreadcrumb("Users", MVC.User.Index(), string.Format("User: {0} ({1})", Model.User.DisplayName, Model.User.FriendlyId()));

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"User_Show\"");

WriteLiteral(">\r\n");

            
            #line 9 "..\..\Views\User\Show.cshtml"
    
            
            #line default
            #line hidden
            
            #line 9 "..\..\Views\User\Show.cshtml"
     if (Authorization.Has(Claims.User.ShowFlagAssignments))
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" id=\"User_Show_Flags\"");

WriteLiteral(">\r\n");

            
            #line 12 "..\..\Views\User\Show.cshtml"
            
            
            #line default
            #line hidden
            
            #line 12 "..\..\Views\User\Show.cshtml"
             foreach (var flag in Model.User.UserFlagAssignments.Where(f => !f.RemovedDate.HasValue).Select(f => Tuple.Create(f, UserFlagService.GetUserFlag(f.UserFlagId))))
            {

            
            #line default
            #line hidden
WriteLiteral("                <i");

WriteAttribute("class", Tuple.Create(" class=\"", 620), Tuple.Create("\"", 696)
, Tuple.Create(Tuple.Create("", 628), Tuple.Create("flag", 628), true)
, Tuple.Create(Tuple.Create(" ", 632), Tuple.Create("fa", 633), true)
, Tuple.Create(Tuple.Create(" ", 635), Tuple.Create("fa-", 636), true)
            
            #line 14 "..\..\Views\User\Show.cshtml"
, Tuple.Create(Tuple.Create("", 639), Tuple.Create<System.Object, System.Int32>(flag.Item2.Icon
            
            #line default
            #line hidden
, 639), false)
, Tuple.Create(Tuple.Create(" ", 657), Tuple.Create("fa-fw", 658), true)
, Tuple.Create(Tuple.Create(" ", 663), Tuple.Create("fa-lg", 664), true)
, Tuple.Create(Tuple.Create(" ", 669), Tuple.Create("d-", 670), true)
            
            #line 14 "..\..\Views\User\Show.cshtml"
, Tuple.Create(Tuple.Create("", 672), Tuple.Create<System.Object, System.Int32>(flag.Item2.IconColour
            
            #line default
            #line hidden
, 672), false)
);

WriteLiteral(">\r\n                    <span");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                        <span");

WriteLiteral(" class=\"name\"");

WriteLiteral(">");

            
            #line 16 "..\..\Views\User\Show.cshtml"
                                      Write(flag.Item2.Name);

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 16 "..\..\Views\User\Show.cshtml"
                                                                   if (flag.Item1.Comments != null)
                        {
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"comments\"");

WriteLiteral(">");

            
            #line 17 "..\..\Views\User\Show.cshtml"
                                           Write(flag.Item1.Comments.ToHtmlComment());

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 17 "..\..\Views\User\Show.cshtml"
                                                                                           }
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"added\"");

WriteLiteral(">");

            
            #line 17 "..\..\Views\User\Show.cshtml"
                                                                                                           Write(CommonHelpers.FriendlyDateAndUser(flag.Item1.AddedDate, flag.Item1.AddedUser));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                    </span>\r\n                </i>\r\n");

            
            #line 20 "..\..\Views\User\Show.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </div>\r\n");

WriteLiteral("        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
            $(function () {
                $('#User_Show_Flags')
                    .appendTo('#layout_PageHeading')
                    .tooltip({
                        items: 'i.flag',
                        content: function () {
                            var $this = $(this);
                            return $this.children('.details').html();
                        },
                        tooltipClass: 'FlagAssignment_Tooltip',
                        position: {
                            my: ""right top"",
                            at: ""right bottom"",
                            collision: ""flipfit flip""
                        },
                        hade: {
                            effect: ''
                        },
                        close: function (e, ui) {
                            ui.tooltip.hover(
                                function () {
                                    $(this).stop(true).fadeTo(100, 1);
                                },
                                function () {
                                    $(this).fadeOut(100, function () { $(this).remove(); });
                                });
                        }
                    });
            });
        </script>
");

            
            #line 53 "..\..\Views\User\Show.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    ");

            
            #line 54 "..\..\Views\User\Show.cshtml"
Write(Html.Partial(MVC.User.Views.UserParts._Subject, Model));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        $(function () {\r\n            var $tabs = $(\'#UserDetailTabs\');\r\n      " +
"      if ($tabs.children().length > 1) {\r\n                $tabs.tabs({\r\n        " +
"            activate: function (event, ui) {\r\n                        window.set" +
"Timeout(function () {\r\n                            var $window = $(window);\r\n   " +
"                         var tabHeight = $tabs.height();\r\n                      " +
"      var tabOffset = $tabs.offset();\r\n                            var windowScr" +
"ollTop = $window.scrollTop();\r\n                            var windowHeight = $w" +
"indow.height();\r\n\r\n                            var tabTopNotShown = windowScroll" +
"Top - tabOffset.top;\r\n                            if (tabTopNotShown > 0) {\r\n   " +
"                             $(\'html\').animate({ scrollTop: tabOffset.top }, 125" +
");\r\n                            } else {\r\n                                var ta" +
"bBottomNotShown = ((windowScrollTop + windowHeight) - (tabHeight + tabOffset.top" +
")) * -1;\r\n                                if (tabBottomNotShown > 0) {\r\n        " +
"                            if (tabHeight > windowHeight)\r\n                     " +
"                   $(\'html\').animate({ scrollTop: tabOffset.top }, 125);\r\n      " +
"                              else\r\n                                        $(\'h" +
"tml\').animate({ scrollTop: windowScrollTop + tabBottomNotShown }, 125);\r\n       " +
"                         }\r\n                            }\r\n                     " +
"   }, 1);\r\n                    }\r\n                });\r\n            } else {\r\n   " +
"             $tabs.hide();\r\n            }\r\n        });\r\n    </script>\r\n    <div");

WriteLiteral(" id=\"UserDetailTabs\"");

WriteLiteral(">\r\n        <ul");

WriteLiteral(" id=\"UserDetailTabItems\"");

WriteLiteral("></ul>\r\n");

            
            #line 90 "..\..\Views\User\Show.cshtml"
        
            
            #line default
            #line hidden
            
            #line 90 "..\..\Views\User\Show.cshtml"
         if (Authorization.Has(Claims.User.ShowJobs))
        {
            
            
            #line default
            #line hidden
            
            #line 92 "..\..\Views\User\Show.cshtml"
       Write(Html.Partial(MVC.User.Views.UserParts._Jobs, Model));

            
            #line default
            #line hidden
            
            #line 92 "..\..\Views\User\Show.cshtml"
                                                                
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 94 "..\..\Views\User\Show.cshtml"
         if (Authorization.Has(Claims.User.ShowAssignmentHistory))
        {
            
            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\User\Show.cshtml"
       Write(Html.Partial(MVC.User.Views.UserParts._AssignmentHistory, Model));

            
            #line default
            #line hidden
            
            #line 96 "..\..\Views\User\Show.cshtml"
                                                                             
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 98 "..\..\Views\User\Show.cshtml"
         if (Authorization.Has(Claims.User.ShowAttachments))
        {
            
            
            #line default
            #line hidden
            
            #line 100 "..\..\Views\User\Show.cshtml"
       Write(Html.Partial(MVC.User.Views.UserParts._Resources, Model));

            
            #line default
            #line hidden
            
            #line 100 "..\..\Views\User\Show.cshtml"
                                                                     
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 102 "..\..\Views\User\Show.cshtml"
         if (Authorization.Has(Claims.User.ShowFlagAssignments))
        {
            
            
            #line default
            #line hidden
            
            #line 104 "..\..\Views\User\Show.cshtml"
       Write(Html.Partial(MVC.User.Views.UserParts._Flags, Model));

            
            #line default
            #line hidden
            
            #line 104 "..\..\Views\User\Show.cshtml"
                                                                 
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 106 "..\..\Views\User\Show.cshtml"
         if (Authorization.Has(Claims.User.ShowAuthorization))
        {
            
            
            #line default
            #line hidden
            
            #line 108 "..\..\Views\User\Show.cshtml"
       Write(Html.Partial(MVC.User.Views.UserParts._Authorization, Model));

            
            #line default
            #line hidden
            
            #line 108 "..\..\Views\User\Show.cshtml"
                                                                         
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
