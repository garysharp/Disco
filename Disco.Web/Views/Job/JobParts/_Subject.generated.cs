#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Views.Job.JobParts
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    
    #line 2 "..\..\Views\Job\JobParts\_Subject.cshtml"
    using Disco.Models.Services.Jobs;
    
    #line default
    #line hidden
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 4 "..\..\Views\Job\JobParts\_Subject.cshtml"
    using Disco.Services.Devices.DeviceFlags;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Job\JobParts\_Subject.cshtml"
    using Disco.Services.Users.UserFlags;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Job/JobParts/_Subject.cshtml")]
    public partial class _Subject : Disco.Services.Web.WebViewPage<Disco.Web.Models.Job.ShowModel>
    {
        public _Subject()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Views\Job\JobParts\_Subject.cshtml"
  
    Authorization.Require(Claims.Job.Show);

            
            #line default
            #line hidden
WriteLiteral("\r\n<table");

WriteLiteral(" id=\"Job_Show_Subjects\"");

WriteLiteral(">\r\n    <tr>\r\n        <td");

WriteLiteral(" id=\"Job_Show_Job\"");

WriteLiteral(">\r\n            <div>\r\n                <div");

WriteLiteral(" id=\"Job_Show_Job_Dates\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>\r\n              " +
"                  Opened:\r\n                            </td>\r\n                  " +
"          <td><span");

WriteLiteral(" id=\"Job_Show_Job_Dates_Opened\"");

WriteLiteral(">");

            
            #line 18 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.OpenedDate, Model.Job.OpenedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                        </tr>\r\n");

            
            #line 20 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 20 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (!Model.Job.ClosedDate.HasValue || Model.Job.ExpectedClosedDate.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <td>\r\n         " +
"                           <span");

WriteLiteral(" title=\"Expected to Close\"");

WriteLiteral(">Expected:</span>\r\n                                </td>\r\n                       " +
"         <td>\r\n");

            
            #line 27 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 27 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     if (Authorization.Has(Claims.Job.Properties.ExpectedClosedDate))
                                    {
                                        
            
            #line default
            #line hidden
            
            #line 29 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(Html.TextBoxFor(m => m.Job.ExpectedClosedDate, "{0:yyyy/MM/dd HH:mm}", new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 29 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                   
            
            #line default
            #line hidden
            
            #line 29 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                              Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 29 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                           
            
            #line default
            #line hidden
            
            #line 29 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                      Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 29 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                    

            
            #line default
            #line hidden
WriteLiteral("                                        <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                            $(function () {
                                                var dateField = $('#Job_ExpectedClosedDate');
                                                document.DiscoFunctions.DateChangeHelper(
                                                dateField,
                                                'Unknown',
                                                '");

            
            #line 36 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                             Write(Url.Action(MVC.API.Job.UpdateExpectedClosedDate(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                                \'ExpectedClosedDate\',\r\n      " +
"                                          \'");

            
            #line 38 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                             Write(Model.Job.OpenedDate.ToString("o"));

            
            #line default
            #line hidden
WriteLiteral("\'\r\n                                                );\r\n                          " +
"                  });\r\n                                        </script>\r\n");

            
            #line 42 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }
                                    else
                                    {
                                        
            
            #line default
            #line hidden
            
            #line 45 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(CommonHelpers.FriendlyDate(Model.Job.ExpectedClosedDate));

            
            #line default
            #line hidden
            
            #line 45 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                 
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </td>\r\n                            </tr>\r\n");

            
            #line 49 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        ");

            
            #line 50 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         if (Model.Job.ClosedDate.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <td>\r\n         " +
"                           Closed:\r\n                                </td>\r\n     " +
"                           <td><span");

WriteLiteral(" id=\"Job_Show_Job_Dates_Closed\"");

WriteLiteral(">");

            
            #line 56 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                    Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.ClosedDate, Model.Job.ClosedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                            </tr>\r\n");

            
            #line 58 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </table>\r\n                </div>\r\n                <div");

WriteLiteral(" id=\"Job_Show_Job_Type\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                    <h2");

WriteAttribute("title", Tuple.Create(" title=\"", 3292), Tuple.Create("\"", 3321)
            
            #line 62 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 3300), Tuple.Create<System.Object, System.Int32>(Model.Job.JobType.Id
            
            #line default
            #line hidden
, 3300), false)
);

WriteLiteral(">");

            
            #line 62 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                 Write(Model.Job.JobType.Description);

            
            #line default
            #line hidden
WriteLiteral("</h2>\r\n                    <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                        <tr>\r\n");

            
            #line 65 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 65 "..\..\Views\Job\JobParts\_Subject.cshtml"
                              
                                var jobSubTypeFirst = (int)Math.Ceiling((double)(Model.Job.JobSubTypes.Count + 1) / 2);
                            
            
            #line default
            #line hidden
WriteLiteral("\r\n                            <td>\r\n                                <ul");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_1\"");

WriteLiteral(">\r\n");

            
            #line 70 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 70 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     foreach (var jobSubType in Model.Job.JobSubTypes.Take(jobSubTypeFirst))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <li");

WriteAttribute("title", Tuple.Create(" title=\"", 3909), Tuple.Create("\"", 3931)
            
            #line 72 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 3917), Tuple.Create<System.Object, System.Int32>(jobSubType.Id
            
            #line default
            #line hidden
, 3917), false)
);

WriteLiteral(">");

            
            #line 72 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                              Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 73 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </ul>\r\n                            </td>\r\n       " +
"                     <td>\r\n                                <ul");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_2\"");

WriteLiteral(">\r\n");

            
            #line 78 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 78 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     foreach (var jobSubType in Model.Job.JobSubTypes.Skip(jobSubTypeFirst))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <li");

WriteAttribute("title", Tuple.Create(" title=\"", 4369), Tuple.Create("\"", 4391)
            
            #line 80 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 4377), Tuple.Create<System.Object, System.Int32>(jobSubType.Id
            
            #line default
            #line hidden
, 4377), false)
);

WriteLiteral(">");

            
            #line 80 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                              Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 81 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </ul>\r\n");

            
            #line 83 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 83 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Authorization.Has(Claims.Job.Actions.UpdateSubTypes) && !Model.Job.ClosedDate.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_Update\"");

WriteLiteral(">Update Sub Types</a>\r\n");

            
            #line 86 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"     </table>\r\n");

            
            #line 90 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 90 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Authorization.Has(Claims.Job.Actions.UpdateSubTypes))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_Job_SubTypes_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Update Job Types\"");

WriteLiteral(">\r\n                            <div>\r\n                                <h2>\r\n");

WriteLiteral("                                    ");

            
            #line 95 "..\..\Views\Job\JobParts\_Subject.cshtml"
                               Write(Model.Job.JobType.Description);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </h2>\r\n");

            
            #line 97 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 97 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 using (Html.BeginForm(MVC.API.Job.UpdateSubTypes(Model.Job.Id, redirect: true), FormMethod.Post, new { id = "formUpdateJobTypes" }))
                                {
                                    
            
            #line default
            #line hidden
            
            #line 99 "..\..\Views\Job\JobParts\_Subject.cshtml"
                               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 99 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                            
                                    
            
            #line default
            #line hidden
            
            #line 100 "..\..\Views\Job\JobParts\_Subject.cshtml"
                               Write(CommonHelpers.CheckBoxList("SubTypes", Model.UpdatableJobSubTypes.ToSelectListItems(Model.Job.JobSubTypes.ToList()), 3));

            
            #line default
            #line hidden
            
            #line 100 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                            

            
            #line default
            #line hidden
WriteLiteral("                                    <hr />\r\n");

WriteLiteral("                                    <div>\r\n                                      " +
"  <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" id=\"UpdateJobTypesAddComponents\"");

WriteLiteral(" name=\"AddComponents\"");

WriteLiteral("\r\n                                               checked=\"checked\"");

WriteLiteral(" /><label");

WriteLiteral(" for=\"UpdateJobTypesAddComponents\"");

WriteLiteral(">Add Components for newly added Sub Types</label>\r\n                              " +
"      </div>\r\n");

            
            #line 106 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n");

WriteLiteral("                        <script>\r\n                            $(function () {\r\n  " +
"                              var $Job_Show_Job_SubTypes_Update_Dialog = null;\r\n" +
"\r\n                                $(\'#Job_Show_Job_SubTypes_Update\').click(funct" +
"ion () {\r\n                                    if (!$Job_Show_Job_SubTypes_Update" +
"_Dialog) {\r\n                                        $Job_Show_Job_SubTypes_Updat" +
"e_Dialog = $(\'#Job_Show_Job_SubTypes_Update_Dialog\');\r\n                         " +
"               $Job_Show_Job_SubTypes_Update_Dialog.dialog({\r\n                  " +
"                          resizable: false,\r\n                                   " +
"         modal: true,\r\n                                            autoOpen: fal" +
"se,\r\n                                            width: 700,\r\n                  " +
"                          buttons: {\r\n                                          " +
"      \"Save\": function () {\r\n                                                   " +
" $(\'#formUpdateJobTypes\').submit();\r\n                                           " +
"         $Job_Show_Job_SubTypes_Update_Dialog.dialog(\"disable\");\r\n              " +
"                                  },\r\n                                          " +
"      Cancel: function () {\r\n                                                   " +
" $(this).dialog(\"close\");\r\n                                                }\r\n  " +
"                                          }\r\n                                   " +
"     });\r\n                                    }\r\n\r\n                             " +
"       $Job_Show_Job_SubTypes_Update_Dialog.dialog(\'open\');\r\n                   " +
"                 return false;\r\n                                });\r\n           " +
"                 });\r\n                        </script>\r\n");

            
            #line 138 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

            
            #line 140 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 140 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Authorization.Has(Claims.Job.Actions.GenerateDocuments))
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_GenerateDocument_Container\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 143 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.Partial(MVC.Shared.Views._GenerateDocumentControl, Model.GenerateDocumentControlModel));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </div>\r\n");

            
            #line 145 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n        </td>\r\n");

            
            #line 148 "..\..\Views\Job\JobParts\_Subject.cshtml"
        
            
            #line default
            #line hidden
            
            #line 148 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.Device != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_Device\"");

WriteLiteral(">\r\n                <div>\r\n                    <h2");

WriteLiteral(" id=\"Job_Show_Device_SerialNumber\"");

WriteLiteral(" title=\"Serial Number\"");

WriteLiteral(">\r\n                        <span data-clipboard>\r\n");

            
            #line 154 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 154 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (Authorization.Has(Claims.Device.Show))
                            {
            
            #line default
            #line hidden
            
            #line 155 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        Write(Html.ActionLink(Model.Job.DeviceSerialNumber, MVC.Device.Show(Model.Job.DeviceSerialNumber)));

            
            #line default
            #line hidden
            
            #line 155 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                          }
                        else
                        {
            
            #line default
            #line hidden
            
            #line 157 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    Write(Model.Job.DeviceSerialNumber);

            
            #line default
            #line hidden
            
            #line 157 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                      }

            
            #line default
            #line hidden
WriteLiteral("                        </span>\r\n                    </h2>\r\n                    <" +
"div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"Job_Show_Device_Details\"");

WriteLiteral(">\r\n                            <img");

WriteLiteral(" id=\"Job_Show_Device_Model_Image\"");

WriteLiteral(" alt=\"Model Image\"");

WriteAttribute("src", Tuple.Create(" src=\"", 9177), Tuple.Create("\"", 9295)
            
            #line 162 "..\..\Views\Job\JobParts\_Subject.cshtml"
         , Tuple.Create(Tuple.Create("", 9183), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.DeviceModel.Image(Model.Job.Device.DeviceModelId, Model.Job.Device.DeviceModel.ImageHash()))
            
            #line default
            #line hidden
, 9183), false)
);

WriteLiteral(" />\r\n                            <div");

WriteLiteral(" id=\"Job_Show_Device_ComputerName\"");

WriteLiteral(" title=\"Computer Name\"");

WriteLiteral("><span data-clipboard>");

            
            #line 163 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                         Write(Model.Job.Device.ComputerName);

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n                            <div");

WriteLiteral(" id=\"Job_Show_Device_Model\"");

WriteLiteral(" title=\"Model\"");

WriteLiteral(">");

            
            #line 164 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                     Write(Html.ActionLink(Model.Job.Device.DeviceModel.ToString(), MVC.Config.DeviceModel.Index(Model.Job.Device.DeviceModelId)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 165 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 165 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (Model.Job.Device.DeviceBatch != null)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" id=\"Job_Show_Device_Batch\"");

WriteLiteral(" title=\"Batch\"");

WriteLiteral(">");

            
            #line 167 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                         Write(Html.ActionLink(Model.Job.Device.DeviceBatch.Name, MVC.Config.DeviceBatch.Index(Model.Job.Device.DeviceBatchId)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");

            
            #line 168 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 169 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (Model.Job.Device.DeviceBatch != null)
                            {
                                if (Model.Job.JobTypeId == JobType.JobTypeIds.HWar)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar\"");

WriteLiteral(">\r\n                                        <div>DEVICE WARRANTY</div>\r\n          " +
"                              <div>Until: <span");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_ValidUntil\"");

WriteLiteral(" data-livestamp=\"");

            
            #line 175 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                  Write(Model.Job.Device.DeviceBatch.WarrantyValidUntil.ToUnixEpoc());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 175 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                 Write(Model.Job.Device.DeviceBatch.WarrantyValidUntil.ToFullDateTime("Unknown"));

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 176 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 176 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                         if (!string.IsNullOrWhiteSpace(Model.Job.Device.DeviceBatch.WarrantyDetails))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <a");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_Details_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Details</a>\r\n");

WriteLiteral("                                            <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HWar_Details_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteAttribute("title", Tuple.Create(" title=\"", 11027), Tuple.Create("\"", 11092)
, Tuple.Create(Tuple.Create("", 11035), Tuple.Create("Warranty", 11035), true)
, Tuple.Create(Tuple.Create(" ", 11043), Tuple.Create("Details", 11044), true)
, Tuple.Create(Tuple.Create(" ", 11051), Tuple.Create("for", 11052), true)
            
            #line 179 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                            , Tuple.Create(Tuple.Create(" ", 11055), Tuple.Create<System.Object, System.Int32>(Model.Job.Device.DeviceBatch.Name
            
            #line default
            #line hidden
, 11056), false)
);

WriteLiteral(">\r\n                                                <div>");

            
            #line 180 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                 Write(new HtmlString(Model.Job.Device.DeviceBatch.WarrantyDetails));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                            </div>\r\n");

WriteLiteral("                                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                                $(function () {
                                                    var d;
                                                    $('#Job_Show_Device_Details_HWar_Details_Button').click(function () {
                                                        if (!d)
                                                            d = $('#Job_Show_Device_Details_HWar_Details_Dialog').dialog({
                                                                width: 570,
                                                                modal: true
                                                            });
                                                        else
                                                            d.dialog('open');
                                                        return false;
                                                    });
                                                });
                                            </script>
");

            
            #line 197 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </div>\r\n");

            
            #line 199 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }
                                if (Model.Job.JobTypeId == JobType.JobTypeIds.HNWar)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar\"");

WriteLiteral(">\r\n                                        <div>INSURANCE</div>\r\n                " +
"                        <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_InsuranceSupplier\"");

WriteLiteral(">");

            
            #line 204 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                             Write(Model.Job.Device.DeviceBatch.InsuranceSupplier);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                        <div>Until: <span");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_ValidUntil\"");

WriteLiteral(" data-livestamp=\"");

            
            #line 205 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                   Write(Model.Job.Device.DeviceBatch.InsuredUntil.ToUnixEpoc());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 205 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                            Write(Model.Job.Device.DeviceBatch.InsuredUntil.ToFullDateTime("Unknown"));

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 206 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 206 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                         if (!string.IsNullOrWhiteSpace(Model.Job.Device.DeviceBatch.InsuranceDetails))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <a");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_Details_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Details</a>\r\n");

WriteLiteral("                                            <div");

WriteLiteral(" id=\"Job_Show_Device_Details_HNWar_Details_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteAttribute("title", Tuple.Create(" title=\"", 13579), Tuple.Create("\"", 13645)
, Tuple.Create(Tuple.Create("", 13587), Tuple.Create("Insurance", 13587), true)
, Tuple.Create(Tuple.Create(" ", 13596), Tuple.Create("Details", 13597), true)
, Tuple.Create(Tuple.Create(" ", 13604), Tuple.Create("for", 13605), true)
            
            #line 209 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                              , Tuple.Create(Tuple.Create(" ", 13608), Tuple.Create<System.Object, System.Int32>(Model.Job.Device.DeviceBatch.Name
            
            #line default
            #line hidden
, 13609), false)
);

WriteLiteral(">\r\n                                                <div>");

            
            #line 210 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                 Write(new HtmlString(Model.Job.Device.DeviceBatch.InsuranceDetails));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                                            </div>\r\n");

WriteLiteral("                                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                                $(function () {
                                                    var d;
                                                    $('#Job_Show_Device_Details_HNWar_Details_Button').click(function () {
                                                        if (!d)
                                                            d = $('#Job_Show_Device_Details_HNWar_Details_Dialog').dialog({
                                                                width: 570,
                                                                modal: true
                                                            });
                                                        else
                                                            d.dialog('open');
                                                        return false;
                                                    });
                                                });
                                            </script>
");

            
            #line 227 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </div>\r\n");

            
            #line 229 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }
                            }

            
            #line default
            #line hidden
WriteLiteral("                            ");

            
            #line 231 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (Model.Job.Device.DeviceFlagAssignments.CanShowAny())
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" id=\"Job_Show_Device_Flags\"");

WriteLiteral(">\r\n");

            
            #line 234 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 234 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     foreach (var flag in Model.Job.Device.DeviceFlagAssignments.Where(f => !f.RemovedDate.HasValue).Select(f => Tuple.Create(f, DeviceFlagService.GetDeviceFlag(f.DeviceFlagId))))
                                    {
                                        if (flag.Item2.permission.CanShow())
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <i");

WriteAttribute("class", Tuple.Create(" class=\"", 15694), Tuple.Create("\"", 15774)
, Tuple.Create(Tuple.Create("", 15702), Tuple.Create("flag", 15702), true)
, Tuple.Create(Tuple.Create(" ", 15706), Tuple.Create("fa", 15707), true)
, Tuple.Create(Tuple.Create(" ", 15709), Tuple.Create("fa-", 15710), true)
            
            #line 238 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 15713), Tuple.Create<System.Object, System.Int32>(flag.Item2.flag.Icon
            
            #line default
            #line hidden
, 15713), false)
, Tuple.Create(Tuple.Create(" ", 15736), Tuple.Create("fa-fw", 15737), true)
, Tuple.Create(Tuple.Create(" ", 15742), Tuple.Create("d-", 15743), true)
            
            #line 238 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 , Tuple.Create(Tuple.Create("", 15745), Tuple.Create<System.Object, System.Int32>(flag.Item2.flag.IconColour
            
            #line default
            #line hidden
, 15745), false)
);

WriteLiteral(">\r\n                                                <span");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                                                    <span");

WriteLiteral(" class=\"name\"");

WriteLiteral(">");

            
            #line 240 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                  Write(flag.Item2.flag.Name);

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 240 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                    if (flag.Item1.Comments != null)
                                                    {
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"comments\"");

WriteLiteral(">");

            
            #line 241 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                       Write(flag.Item1.Comments.ToHtmlComment());

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 241 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                       }
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"added\"");

WriteLiteral(">");

            
            #line 241 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                       Write(CommonHelpers.FriendlyDateAndUser(flag.Item1.AddedDate, flag.Item1.AddedUserId));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                                                </span>\r\n               " +
"                             </i>\r\n");

            
            #line 244 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        }
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                        $(function () {\r\n                     " +
"                       $(\'#Job_Show_Device_Flags\')\r\n                            " +
"                    .tooltip({\r\n                                                " +
"    items: \'i.flag\',\r\n                                                    conten" +
"t: function () {\r\n                                                        var $t" +
"his = $(this);\r\n                                                        return $" +
"this.children(\'.details\').html();\r\n                                             " +
"       },\r\n                                                    tooltipClass: \'Fl" +
"agAssignment_Tooltip\',\r\n                                                    posi" +
"tion: {\r\n                                                        my: \"right top\"" +
",\r\n                                                        at: \"right bottom\",\r\n" +
"                                                        collision: \"flipfit flip" +
"\"\r\n                                                    },\r\n                     " +
"                               hade: {\r\n                                        " +
"                effect: \'\'\r\n                                                    " +
"},\r\n                                                    close: function (e, ui) " +
"{\r\n                                                        ui.tooltip.hover(\r\n  " +
"                                                          function () {\r\n       " +
"                                                         $(this).stop(true).fade" +
"To(100, 1);\r\n                                                            },\r\n   " +
"                                                         function () {\r\n        " +
"                                                        $(this).fadeOut(100, fun" +
"ction () { $(this).remove(); });\r\n                                              " +
"              });\r\n                                                    }\r\n      " +
"                                          });\r\n                                 " +
"       });\r\n                                    </script>\r\n                     " +
"           </div>\r\n");

            
            #line 277 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n                    </div>\r\n");

            
            #line 280 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 280 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.Job.DeviceHeld.HasValue)
                    {
                        var canEditLocation = Authorization.Has(Claims.Job.Properties.DeviceHeldLocation);

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                            <table");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n                                <tr>\r\n                                    <td>" +
"Location:</td>\r\n                                    <td>\r\n                      " +
"                  <span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_Location\"");

WriteLiteral(" data-locationsurl=\"");

            
            #line 288 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                     Write(Url.Action(MVC.API.Job.DeviceHeldLocations()));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-updateurl=\"");

            
            #line 288 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                     Write(Url.Action(MVC.API.Job.UpdateDeviceHeldLocation(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n");

            
            #line 289 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                            
            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                             if (canEditLocation)
                                            {
                                                switch (Model.LocationMode)
                                                {
                                                    case LocationModes.Unrestricted:
                                                    case LocationModes.OptionalList:
                                                        
            
            #line default
            #line hidden
            
            #line 295 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                   Write(Html.TextBoxFor(m => m.Job.DeviceHeldLocation, new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 295 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                          
                                                        break;
                                                    case LocationModes.RestrictedList:
                                                        List<SelectListItem> listOptions = new List<SelectListItem>() { new SelectListItem() { Value = "", Text = "<Unknown>" } };
                                                        if (!string.IsNullOrWhiteSpace(Model.Job.DeviceHeldLocation) && !Model.LocationOptions.Any(l => l.Location.Equals(Model.Job.DeviceHeldLocation)))
                                                        {
                                                            listOptions.Add(new SelectListItem() { Value = Model.Job.DeviceHeldLocation, Text = string.Format("Custom: {0}", Model.Job.DeviceHeldLocation) });
                                                        }
                                                        listOptions.AddRange(Model.LocationOptions.Select(l => new SelectListItem() { Value = l.Location, Text = (l.References.Count == 0 ? l.Location : (l.References.Count == 1 ? string.Format("{0} [Job {1}]", l.Location, l.References[0].JobId) : string.Format("{0} [{1} jobs]", l.Location, l.References.Count))) }));
                                                        
            
            #line default
            #line hidden
            
            #line 304 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                   Write(Html.DropDownListFor(m => m.Job.DeviceHeldLocation, listOptions, new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 304 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                            ;
                                                        break;
                                                }
                                                
            
            #line default
            #line hidden
            
            #line 307 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                           Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 307 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                        
            
            #line default
            #line hidden
            
            #line 307 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                   Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 307 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                 
                                            }
                                            else if (string.IsNullOrEmpty(Model.Job.DeviceHeldLocation))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None/Unknown&gt;</span>\r\n");

            
            #line 312 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                            }
                                            else
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 315 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                           Write(Model.Job.DeviceHeldLocation);

            
            #line default
            #line hidden
            
            #line 315 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                             
                                            }

            
            #line default
            #line hidden
WriteLiteral(@"                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Held Since:</td>
                                    <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceHeld\"");

WriteLiteral(">");

            
            #line 322 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                    Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceHeld, Model.Job.DeviceHeldTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                </tr>\r\n");

            
            #line 324 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 324 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Model.Job.DeviceReadyForReturn.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>Ready:</td>\r\n                                        <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceReadyForReturn\"");

WriteLiteral(">");

            
            #line 328 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                  Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceReadyForReturn, Model.Job.DeviceReadyForReturnTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                    </tr>\r\n");

            
            #line 330 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 331 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 if (Model.Job.DeviceReturnedDate.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <tr>\r\n                                       " +
" <td>Returned:</td>\r\n                                        <td><span");

WriteLiteral(" id=\"Job_Show_Device_DeviceHeld_DeviceReturnedDate\"");

WriteLiteral(">");

            
            #line 335 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                Write(CommonHelpers.FriendlyDateAndTitleUser(Model.Job.DeviceReturnedDate, Model.Job.DeviceReturnedTechUser));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                                    </tr>\r\n");

            
            #line 337 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </table>\r\n");

            
            #line 339 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 339 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (canEditLocation)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                    $(function () {\r\n");

            
            #line 343 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 343 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                         switch (Model.LocationMode)
                                        {
                                            case LocationModes.Unrestricted:
                                            case LocationModes.OptionalList:

            
            #line default
            #line hidden
WriteLiteral("                                                ");

WriteLiteral("\r\n                                        const $deviceHeldLocationContainer = $(" +
"\'#Job_Show_Device_DeviceHeld_Location\');\r\n                                      " +
"  const $deviceHeldLocation = $(\'#Job_DeviceHeldLocation\');\r\n                   " +
"                     const $ajaxSave = $deviceHeldLocation.next(\'.ajaxSave\');\r\n " +
"                                       let autocompleteLoaded = false;\r\n\r\n      " +
"                                  $deviceHeldLocation\r\n                         " +
"                   .watermark(\'Unknown\')\r\n                                      " +
"      .focus(function () {\r\n                                                $dev" +
"iceHeldLocation.select();\r\n\r\n                                                // " +
"Load AutoComplete\r\n                                                if (!autocomp" +
"leteLoaded) {\r\n\r\n                                                    const body " +
"= new FormData();\r\n                                                    body.appe" +
"nd(\'__RequestVerificationToken\', document.body.dataset.antiforgery);\r\n          " +
"                                          fetch($deviceHeldLocationContainer.att" +
"r(\'data-locationsurl\'), {\r\n                                                     " +
"   method: \'POST\',\r\n                                                        body" +
": body\r\n                                                    }).then(r => {\r\n    " +
"                                                    if (r.ok) {\r\n               " +
"                                             r.json().then(d => {\r\n             " +
"                                                   $.each(d, function () {\r\n    " +
"                                                                this.value = thi" +
"s.Location;\r\n                                                                   " +
" this.label = this.Location;\r\n                                                  " +
"              });\r\n\r\n                                                           " +
"     $deviceHeldLocation.autocomplete({\r\n                                       " +
"                             source: d,\r\n                                       " +
"                             minLength: 0,\r\n                                    " +
"                                focus: function (e, ui) {\r\n                     " +
"                                                   return false;\r\n              " +
"                                                      },\r\n                      " +
"                                              select: function (e, ui) {\r\n      " +
"                                                                  $deviceHeldLoc" +
"ation.val(ui.item.Location).blur().change();\r\n                                  " +
"                                      return false;\r\n                           " +
"                                         }\r\n                                    " +
"                            }).data(\'ui-autocomplete\')._renderItem = function (u" +
"l, item) {\r\n                                                                    " +
"var anchor = $(\'<a>\').append($(\'<strong>\').text(item.Location));\r\n              " +
"                                                      if (item.References) {\r\n  " +
"                                                                      anchor.app" +
"end(document.createTextNode(\' [\' + item.References + \']\'));\r\n                   " +
"                                                 }\r\n                            " +
"                                        var item = $(\"<li></li>\")\r\n             " +
"                                                           .data(\"item.autocompl" +
"ete\", item)\r\n                                                                   " +
"     .append(anchor);\r\n                                                         " +
"           return item.appendTo(ul);\r\n                                          " +
"                      };\r\n\r\n                                                    " +
"            $deviceHeldLocation.autocomplete(\'search\', \'\');\r\n                   " +
"                                         })\r\n                                   " +
"                     }\r\n                                                    })\r\n" +
"                                                    autocompleteLoaded = true;\r\n" +
"                                                }else{\r\n                        " +
"                            $deviceHeldLocation.autocomplete(\'search\', \'\');\r\n   " +
"                                             }\r\n                                " +
"            })\r\n                                            .keydown(function (e" +
") {\r\n                                                $ajaxSave.show();\r\n        " +
"                                        if (e.which == 13) {\r\n                  " +
"                                  $(this).blur();\r\n                             " +
"                   }\r\n                                            }).blur(functi" +
"on () {\r\n                                                $ajaxSave.hide();\r\n    " +
"                                        })\r\n                                    " +
"        .change(function () {\r\n                                                $" +
"ajaxSave.hide();\r\n                                                $ajaxLoading =" +
" $ajaxSave.next(\'.ajaxLoading\').show();\r\n\r\n                                     " +
"           const body = new FormData();\r\n                                       " +
"         body.append(\'__RequestVerificationToken\', document.body.dataset.antifor" +
"gery);\r\n                                                body.append(\'DeviceHeldL" +
"ocation\', $deviceHeldLocation.val());\r\n                                         " +
"       fetch($deviceHeldLocationContainer.attr(\'data-updateurl\'), {\r\n           " +
"                                         method: \'POST\',\r\n                      " +
"                              body: body\r\n                                      " +
"          }).then(r => {\r\n                                                    if" +
" (r.ok) {\r\n                                                        $ajaxLoading." +
"hide().next(\'.ajaxOk\').show().delay(\'fast\').fadeOut(\'slow\');\r\n                  " +
"                                  } else {\r\n                                    " +
"                    $ajaxLoading.hide();\r\n                                      " +
"                  alert(\'Unable to update device held location: \' + r.statusText" +
");\r\n                                                    }\r\n                     " +
"                           }).catch(e => {\r\n                                    " +
"                alert(\'Unable to update device held location: \' + e.textStatus);" +
"\r\n                                                    $ajaxLoading.hide();\r\n    " +
"                                            });\r\n                               " +
"             });\r\n                                        ");

WriteLiteral("\r\n");

            
            #line 435 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                break;
                                            case LocationModes.RestrictedList:

            
            #line default
            #line hidden
WriteLiteral("                                                        ");

WriteLiteral(@"
                                        document.DiscoFunctions.PropertyChangeHelper(
                                            $('#Job_DeviceHeldLocation'),
                                            null,
                                            '");

            
            #line 441 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                        Write(Url.Action(MVC.API.Job.UpdateDeviceHeldLocation(Model.Job.Id, null)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                            \'DeviceHeldLocation\');\r\n         " +
"                               ");

WriteLiteral("\r\n");

            
            #line 444 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                break;
                                        }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n                                    });\r\n                                </sc" +
"ript>\r\n");

            
            #line 450 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

            
            #line 452 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n");

            
            #line 455 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 456 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.User != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_User\"");

WriteLiteral(">\r\n                <div>\r\n");

            
            #line 460 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 460 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.HasUserPhoto)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_Photo_Container\"");

WriteLiteral(">\r\n                            <img");

WriteLiteral(" id=\"Job_Show_User_Photo\"");

WriteAttribute("src", Tuple.Create(" src=\"", 32118), Tuple.Create("\"", 32173)
            
            #line 463 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 32124), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.User.Photo(Model.Job.UserId))
            
            #line default
            #line hidden
, 32124), false)
);

WriteLiteral(" />\r\n                        </div>\r\n");

            
            #line 465 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <h2");

WriteLiteral(" id=\"Job_Show_User_DisplayName\"");

WriteLiteral(" title=\"Display Name\"");

WriteLiteral(">\r\n                        <span data-clipboard>\r\n");

            
            #line 468 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 468 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             if (Authorization.Has(Claims.User.Show))
                            {
            
            #line default
            #line hidden
            
            #line 469 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        Write(Html.ActionLink(Model.Job.User.DisplayName, MVC.User.Show(Model.Job.UserId)));

            
            #line default
            #line hidden
            
            #line 469 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                          }
                        else
                        {
            
            #line default
            #line hidden
            
            #line 471 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    Write(Model.Job.User.DisplayName);

            
            #line default
            #line hidden
            
            #line 471 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                    }

            
            #line default
            #line hidden
WriteLiteral("                        </span>\r\n                    </h2>\r\n                    <" +
"div");

WriteLiteral(" id=\"Job_Show_User_Id\"");

WriteLiteral(" title=\"Id\"");

WriteLiteral("><span data-clipboard>");

            
            #line 474 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                          Write(Model.Job.User.FriendlyId());

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 475 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 475 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Authorization.Has(Claims.User.ShowDetails))
                    {
                        if (!string.IsNullOrWhiteSpace(Model.Job.User.PhoneNumber))
                        {
            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" id=\"Job_Show_User_PhoneNumber\"");

WriteLiteral(" title=\"Phone Number\"");

WriteLiteral(">Phone: <a");

WriteAttribute("href", Tuple.Create(" href=\"", 33075), Tuple.Create("\"", 33113)
, Tuple.Create(Tuple.Create("", 33082), Tuple.Create("tel:", 33082), true)
            
            #line 478 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     , Tuple.Create(Tuple.Create("", 33086), Tuple.Create<System.Object, System.Int32>(Model.Job.User.PhoneNumber
            
            #line default
            #line hidden
, 33086), false)
);

WriteLiteral(" data-clipboard>");

            
            #line 478 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                             Write(Model.Job.User.PhoneNumber);

            
            #line default
            #line hidden
WriteLiteral("</a></div>");

            
            #line 478 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                       }
                    if (!string.IsNullOrWhiteSpace(Model.Job.User.EmailAddress))
                    {
            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" id=\"Job_Show_User_EmailAddress\"");

WriteLiteral(" title=\"Email Address\"");

WriteLiteral(">Email: <a");

WriteAttribute("href", Tuple.Create(" href=\"", 33341), Tuple.Create("\"", 33385)
, Tuple.Create(Tuple.Create("", 33348), Tuple.Create("mailto:", 33348), true)
            
            #line 480 "..\..\Views\Job\JobParts\_Subject.cshtml"
                       , Tuple.Create(Tuple.Create("", 33355), Tuple.Create<System.Object, System.Int32>(Model.Job.User.EmailAddress
            
            #line default
            #line hidden
, 33355), false)
);

WriteLiteral(" data-clipboard=\"");

            
            #line 480 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                  Write(Model.Job.User.DisplayName);

            
            #line default
            #line hidden
WriteLiteral(" &lt;");

            
            #line 480 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                  Write(Model.Job.User.EmailAddress);

            
            #line default
            #line hidden
WriteLiteral("&gt;\"");

WriteLiteral(">");

            
            #line 480 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                                    Write(Model.Job.User.EmailAddress);

            
            #line default
            #line hidden
WriteLiteral("</a></div>");

            
            #line 480 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                                                                               }
            }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 482 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.Job.User.UserFlagAssignments.CanShowAny())
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_Flags\"");

WriteLiteral(">\r\n");

            
            #line 485 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 485 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             foreach (var flag in Model.Job.User.UserFlagAssignments.Where(f => !f.RemovedDate.HasValue).Select(f => Tuple.Create(f, UserFlagService.GetUserFlag(f.UserFlagId))))
                            {
                                if (flag.Item2.permission.CanShow())
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <i");

WriteAttribute("class", Tuple.Create(" class=\"", 34048), Tuple.Create("\"", 34128)
, Tuple.Create(Tuple.Create("", 34056), Tuple.Create("flag", 34056), true)
, Tuple.Create(Tuple.Create(" ", 34060), Tuple.Create("fa", 34061), true)
, Tuple.Create(Tuple.Create(" ", 34063), Tuple.Create("fa-", 34064), true)
            
            #line 489 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 34067), Tuple.Create<System.Object, System.Int32>(flag.Item2.flag.Icon
            
            #line default
            #line hidden
, 34067), false)
, Tuple.Create(Tuple.Create(" ", 34090), Tuple.Create("fa-fw", 34091), true)
, Tuple.Create(Tuple.Create(" ", 34096), Tuple.Create("d-", 34097), true)
            
            #line 489 "..\..\Views\Job\JobParts\_Subject.cshtml"
         , Tuple.Create(Tuple.Create("", 34099), Tuple.Create<System.Object, System.Int32>(flag.Item2.flag.IconColour
            
            #line default
            #line hidden
, 34099), false)
);

WriteLiteral(">\r\n                                        <span");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                                            <span");

WriteLiteral(" class=\"name\"");

WriteLiteral(">");

            
            #line 491 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                          Write(flag.Item2.flag.Name);

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 491 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                            if (flag.Item1.Comments != null)
                                            {
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"comments\"");

WriteLiteral(">");

            
            #line 492 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                               Write(flag.Item1.Comments.ToHtmlComment());

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 492 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                               }
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"added\"");

WriteLiteral(">");

            
            #line 492 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                               Write(CommonHelpers.FriendlyDateAndUser(flag.Item1.AddedDate, flag.Item1.AddedUserId));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                                        </span>\r\n                       " +
"             </i>\r\n");

            
            #line 495 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                $(function () {\r\n                             " +
"       $(\'#Job_Show_User_Flags\')\r\n                                        .toolt" +
"ip({\r\n                                            items: \'i.flag\',\r\n            " +
"                                content: function () {\r\n                        " +
"                        var $this = $(this);\r\n                                  " +
"              return $this.children(\'.details\').html();\r\n                       " +
"                     },\r\n                                            tooltipClas" +
"s: \'FlagAssignment_Tooltip\',\r\n                                            positi" +
"on: {\r\n                                                my: \"right top\",\r\n       " +
"                                         at: \"right bottom\",\r\n                  " +
"                              collision: \"flipfit flip\"\r\n                       " +
"                     },\r\n                                            hade: {\r\n  " +
"                                              effect: \'\'\r\n                      " +
"                      },\r\n                                            close: fun" +
"ction (e, ui) {\r\n                                                ui.tooltip.hove" +
"r(\r\n                                                    function () {\r\n         " +
"                                               $(this).stop(true).fadeTo(100, 1)" +
";\r\n                                                    },\r\n                     " +
"                               function () {\r\n                                  " +
"                      $(this).fadeOut(100, function () { $(this).remove(); });\r\n" +
"                                                    });\r\n                       " +
"                     }\r\n                                        });\r\n           " +
"                     });\r\n                            </script>\r\n               " +
"         </div>\r\n");

            
            #line 528 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 529 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.Job.WaitingForUserAction.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_WaitingForUserAction\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                            <h4>Awaiting Action</h4>\r\n                        " +
"    Since: <span");

WriteLiteral(" data-livestamp=\"");

            
            #line 533 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                    Write(Model.Job.WaitingForUserAction.ToUnixEpoc());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 533 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                  Write(Model.Job.WaitingForUserAction.ToFullDateTime());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                        </div>\r\n");

            
            #line 535 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 536 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     if (Model.UserDetails != null && Model.UserDetails.Count(d => !d.Key.EndsWith("&")) > 0)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Job_Show_User_CustomDetails\"");

WriteLiteral(" class=\"status clearfix\"");

WriteLiteral(">\r\n");

            
            #line 539 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 539 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             foreach (var detail in Model.UserDetails.Where(d => !d.Key.EndsWith("&")))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div>\r\n                                    <stron" +
"g>");

            
            #line 542 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                       Write(detail.Key.TrimEnd('*'));

            
            #line default
            #line hidden
WriteLiteral(":</strong>\r\n");

            
            #line 543 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 543 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                     if (detail.Key.EndsWith("*"))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <a");

WriteLiteral(" href=\"\"");

WriteLiteral(" class=\"reveal smallMessage\"");

WriteLiteral(">[reveal]</a>\r\n");

WriteLiteral("                                        <span");

WriteLiteral(" class=\"reveal hidden\"");

WriteLiteral(">");

            
            #line 546 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                               Write(Html.Partial(MVC.Shared.Views._CustomDetailValueRender, detail));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 547 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    }
                                    else
                                    {
                                        
            
            #line default
            #line hidden
            
            #line 550 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(Html.Partial(MVC.Shared.Views._CustomDetailValueRender, detail));

            
            #line default
            #line hidden
            
            #line 550 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                        
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n");

            
            #line 553 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                $(() => {
                                    $('#Job_Show_User_CustomDetails').on('click', 'a.reveal', e => {
                                        e.preventDefault();
                                        const t = $(e.currentTarget);
                                        t.next('span.reveal').removeClass('hidden');
                                        t.remove();
                                        return false;
                                    })
                                });
                            </script>
                        </div>
");

            
            #line 566 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n");

            
            #line 569 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </tr>\r\n    <tr");

WriteLiteral(" id=\"Job_Show_Subjects_Actions\"");

WriteLiteral(">\r\n        <td");

WriteLiteral(" id=\"Job_Show_Job_Actions\"");

WriteLiteral(">\r\n");

            
            #line 573 "..\..\Views\Job\JobParts\_Subject.cshtml"
            
            
            #line default
            #line hidden
            
            #line 573 "..\..\Views\Job\JobParts\_Subject.cshtml"
              
                List<string> CanCloseForcedReasons;
                if (Model.Job.CanCloseForced(out CanCloseForcedReasons))
                {
                    
            
            #line default
            #line hidden
            
            #line 577 "..\..\Views\Job\JobParts\_Subject.cshtml"
               Write(Html.ActionLinkSmallButton("Forcibly Close", MVC.API.Job.Close(Model.Job.Id, true), "Job_Show_Job_Actions_ForceClose_Button"));

            
            #line default
            #line hidden
            
            #line 577 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                  

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_ForceClose_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Forcibly Close this Job?\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"info-box error\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-exclamation-circle\"");

WriteLiteral("></i><strong>Are you sure?</strong>\r\n                            </p>\r\n          " +
"                  <ul>\r\n");

            
            #line 584 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 584 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                 foreach (var reason in CanCloseForcedReasons)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <li>");

            
            #line 586 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                   Write(reason);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 587 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </ul>\r\n                        </div>\r\n");

            
            #line 590 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 590 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.ForceClose(Model.Job.Id, null, true)))
                        {
                            
            
            #line default
            #line hidden
            
            #line 592 "..\..\Views\Job\JobParts\_Subject.cshtml"
                       Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 592 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                    

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Reason:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Reason\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 597 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_Job_Actions_ForceClose_Button\');\r\n                            v" +
"ar buttonDialog = null;\r\n\r\n                            button.click(function () " +
"{\r\n                                if (!buttonDialog) {\r\n                       " +
"             buttonDialog = $(\'#Job_Show_Job_Actions_ForceClose_Dialog\');\r\n     " +
"                               buttonDialog.dialog({\r\n                          " +
"              resizable: false,\r\n                                        modal: " +
"true,\r\n                                        autoOpen: false,\r\n               " +
"                         buttons: {\r\n                                           " +
" \"Forcibly Close Job\": function () {\r\n                                          " +
"      var $this = $(this);\r\n                                                $thi" +
"s.dialog(\"disable\");\r\n                                                $this.dial" +
"og(\"option\", \"buttons\", null);\r\n                                                " +
"$this.find(\'form\').submit();\r\n                                            },\r\n  " +
"                                          Cancel: function () {\r\n               " +
"                                 $(this).dialog(\"close\");\r\n                     " +
"                       }\r\n                                        }\r\n           " +
"                         });\r\n                                }\r\n\r\n             " +
"                   buttonDialog.dialog(\'open\');\r\n                               " +
" return false;\r\n                            });\r\n                        });\r\n  " +
"                  </script>\r\n");

            
            #line 630 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }
            
            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

            
            #line 633 "..\..\Views\Job\JobParts\_Subject.cshtml"
            
            
            #line default
            #line hidden
            
            #line 633 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanCloseNormally())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"Job_Show_Job_Actions_Close_Button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Close</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Close_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Close this Job?\"");

WriteLiteral(">\r\n");

            
            #line 637 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 637 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Job.Close(Model.Job.Id, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 639 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 639 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;Are you sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        const button = $('#Job_Show_Job_Actions_Close_Button');
                        let buttonDialog = null;
                        button.on('click', function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Job_Show_Job_Actions_Close_Dialog');
                                buttonDialog.dialog({
                                    resizable: false,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Close Job"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }

                            buttonDialog.dialog('open');
                            return false;
                        });
                    });
                </script>
");

            
            #line 674 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 675 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanReopen())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Job_Show_Job_Actions_Reopen_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Reopen Job</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Reopen_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Reopen this Job?\"");

WriteLiteral(">\r\n");

            
            #line 679 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 679 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Job.Reopen(Model.Job.Id, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 681 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 681 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;Are you sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        const button = $('#Job_Show_Job_Actions_Reopen_Button');
                        let buttonDialog = null;
                        button.click(function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Job_Show_Job_Actions_Reopen_Dialog');
                                buttonDialog.dialog({
                                    resizable: false,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Reopen"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }

                            buttonDialog.dialog('open');
                            return false;
                        });
                    });
                </script>
");

            
            #line 716 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 717 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanDelete())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Job_Show_Job_Actions_Delete_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Delete</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_Delete_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Delete this Job?\"");

WriteLiteral(">\r\n");

            
            #line 721 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 721 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Job.Delete(Model.Job.Id, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 723 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 723 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;This item will be permanently deleted and cannot be recovered. Are you" +
" sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        const button = $('#Job_Show_Job_Actions_Delete_Button');
                        let buttonDialog = null;
                        button.click(function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Job_Show_Job_Actions_Delete_Dialog');
                                buttonDialog.dialog({
                                    resizable: false,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Delete"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }

                            buttonDialog.dialog('open');
                            return false;
                        });
                    });
                </script>
");

            
            #line 758 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 759 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanAddQueues() && Model.AvailableQueues != null && Model.AvailableQueues.Count > 0)
            {

                var priorityValue = JobQueuePriority.Normal.ToString();
                var priorityItems = Enum.GetNames(typeof(JobQueuePriority)).Select(i => new SelectListItem() { Text = i, Value = i, Selected = (i == priorityValue) }).ToList();

                var slaOptions = Disco.Services.Jobs.JobQueues.JobQueueService.SlaOptions.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString() }).ToList();

                
            
            #line default
            #line hidden
            
            #line 767 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Add to Queue", MVC.API.JobQueueJob.AddJob(), "Job_Show_Job_Actions_AddQueue_Button"));

            
            #line default
            #line hidden
            
            #line 767 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                 

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Add Job to Queue\"");

WriteLiteral(">\r\n");

            
            #line 769 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 769 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.JobQueueJob.AddJob()))
                    {
                        
            
            #line default
            #line hidden
            
            #line 771 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 771 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                

            
            #line default
            #line hidden
WriteLiteral("                        <input");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Dialog_Id\"");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"id\"");

WriteLiteral(" />\r\n");

WriteLiteral("                        <input");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Dialog_JobId\"");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"JobId\"");

WriteAttribute("value", Tuple.Create(" value=\"", 49757), Tuple.Create("\"", 49778)
            
            #line 773 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                , Tuple.Create(Tuple.Create("", 49765), Tuple.Create<System.Object, System.Int32>(Model.Job.Id
            
            #line default
            #line hidden
, 49765), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"queuePicker\"");

WriteLiteral(">\r\n");

            
            #line 775 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 775 "..\..\Views\Job\JobParts\_Subject.cshtml"
                             foreach (var jobQueue in Model.AvailableQueues.OrderBy(jq => jq.Name))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"queue\"");

WriteLiteral(" data-queueid=\"");

            
            #line 777 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                             Write(jobQueue.Id);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-queuesla=\"");

            
            #line 777 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                            Write(jobQueue.DefaultSLAExpiry.HasValue ? jobQueue.DefaultSLAExpiry.Value.ToString() : null);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-queuepriority=\"");

            
            #line 777 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                           Write(jobQueue.Priority.ToString());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n                                    <i");

WriteAttribute("class", Tuple.Create(" class=\"", 50247), Tuple.Create("\"", 50314)
, Tuple.Create(Tuple.Create("", 50255), Tuple.Create("fa", 50255), true)
, Tuple.Create(Tuple.Create(" ", 50257), Tuple.Create("fa-", 50258), true)
            
            #line 778 "..\..\Views\Job\JobParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 50261), Tuple.Create<System.Object, System.Int32>(jobQueue.Icon
            
            #line default
            #line hidden
, 50261), false)
, Tuple.Create(Tuple.Create(" ", 50277), Tuple.Create("fa-fw", 50278), true)
, Tuple.Create(Tuple.Create(" ", 50283), Tuple.Create("fa-lg", 50284), true)
, Tuple.Create(Tuple.Create(" ", 50289), Tuple.Create("d-", 50290), true)
            
            #line 778 "..\..\Views\Job\JobParts\_Subject.cshtml"
   , Tuple.Create(Tuple.Create("", 50292), Tuple.Create<System.Object, System.Int32>(jobQueue.IconColour
            
            #line default
            #line hidden
, 50292), false)
);

WriteLiteral("></i>");

            
            #line 778 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                          Write(jobQueue.Name);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 780 "..\..\Views\Job\JobParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                            <div>\r\n                                <h4>Job Pri" +
"ority</h4>\r\n");

WriteLiteral("                                ");

            
            #line 785 "..\..\Views\Job\JobParts\_Subject.cshtml"
                           Write(Html.DropDownList("Priority", priorityItems, new { id = "Job_Show_Job_Actions_AddQueue_Priority" }));

            
            #line default
            #line hidden
WriteLiteral(" <i");

WriteAttribute("class", Tuple.Create(" class=\"", 50711), Tuple.Create("\"", 50759)
, Tuple.Create(Tuple.Create("", 50719), Tuple.Create("fa", 50719), true)
, Tuple.Create(Tuple.Create(" ", 50721), Tuple.Create("d-priority-", 50722), true)
            
            #line 785 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                             , Tuple.Create(Tuple.Create("", 50733), Tuple.Create<System.Object, System.Int32>(priorityValue.ToLower()
            
            #line default
            #line hidden
, 50733), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 50760), Tuple.Create("\"", 50793)
            
            #line 785 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                , Tuple.Create(Tuple.Create("", 50768), Tuple.Create<System.Object, System.Int32>(priorityValue
            
            #line default
            #line hidden
, 50768), false)
, Tuple.Create(Tuple.Create(" ", 50784), Tuple.Create("Priority", 50785), true)
);

WriteLiteral("></i>\r\n                            </div>\r\n                            <div>\r\n   " +
"                             <h4>SLA Target</h4>\r\n");

WriteLiteral("                                ");

            
            #line 789 "..\..\Views\Job\JobParts\_Subject.cshtml"
                           Write(Html.DropDownList("SLAExpiresMinutes", slaOptions, new { id = "Job_Show_Job_Actions_AddQueue_SLAExpiresMinutes" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </div>\r\n                            <div>\r\n        " +
"                        <h4>Tasks/Comment</h4>\r\n                                " +
"<textarea");

WriteLiteral(" name=\"Comment\"");

WriteLiteral(" id=\"Job_Show_Job_Actions_AddQueue_Comment\"");

WriteLiteral("></textarea>\r\n                            </div>\r\n                        </div>\r" +
"\n");

            
            #line 796 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        var button = $(\'#" +
"Job_Show_Job_Actions_AddQueue_Button\');\r\n                        var buttonDialo" +
"g = null;\r\n                        var buttonLink = button.attr(\'href\');\r\n\r\n    " +
"                    var queuePicker = null;\r\n                        var queueId" +
" = null;\r\n                        var details = null;\r\n\r\n                       " +
" function queueSelected() {\r\n                            var queue = $(this);\r\n\r" +
"\n                            queuePicker.children().removeClass(\'selected\');\r\n  " +
"                          queue.addClass(\'selected\');\r\n\r\n                       " +
"     queueId.val(queue.attr(\'data-queueid\'));\r\n\r\n                            var" +
" queueSLA = queue.attr(\'data-queuesla\');\r\n                            if (!queue" +
"SLA)\r\n                                queueSLA = 0;\r\n\r\n                         " +
"   $(\'#Job_Show_Job_Actions_AddQueue_Priority\').val(\'Normal\');\r\n                " +
"            $(\'#Job_Show_Job_Actions_AddQueue_SLAExpiresMinutes\').val(queueSLA);" +
"\r\n\r\n                            details.show();\r\n\r\n                            $" +
"(\'#Job_Show_Job_Actions_AddQueue_Comment\').focus().select();\r\n                  " +
"      }\r\n\r\n                        button.attr(\'href\', \'#\').click(function (e) {" +
"\r\n                            e.preventDefault();\r\n\r\n                           " +
" if (!buttonDialog) {\r\n                                buttonDialog = $(\'#Job_Sh" +
"ow_Job_Actions_AddQueue_Dialog\');\r\n                                buttonDialog." +
"dialog({\r\n                                    width: 600,\r\n                     " +
"               height: 410,\r\n                                    resizable: fals" +
"e,\r\n                                    modal: true,\r\n                          " +
"          autoOpen: false,\r\n                                    buttons: {\r\n    " +
"                                    Cancel: function () {\r\n                     " +
"                       $(this).dialog(\"close\");\r\n                               " +
"         },\r\n                                        \"Add to Queue\": function ()" +
" {\r\n                                            if (!!queueId.val()) {\r\n        " +
"                                        $(this)\r\n                               " +
"                     .dialog(\"option\", \"buttons\", null)\r\n                       " +
"                             .find(\'form\').trigger(\'submit\');\r\n                 " +
"                           } else {\r\n                                           " +
"     alert(\'Select a Job Queue\');\r\n                                            }" +
"\r\n                                        }\r\n                                   " +
" }\r\n                                });\r\n\r\n                                queue" +
"Picker = buttonDialog.find(\'.queuePicker\');\r\n                                que" +
"ueId = $(\'#Job_Show_Job_Actions_AddQueue_Dialog_Id\');\r\n                         " +
"       details = buttonDialog.find(\'.details\');\r\n\r\n                             " +
"   var priorityList = $(\'#Job_Show_Job_Actions_AddQueue_Priority\');\r\n           " +
"                     priorityList.change(function () {\r\n                        " +
"            var icon = priorityList.closest(\'div\').find(\'i\').first();\r\n         " +
"                           icon[0].className = \'\';\r\n                            " +
"        icon.addClass(\'fa d-priority-\' + priorityList.val().toLowerCase()).attr(" +
"\'title\', priorityList.val() + \' Priority\');\r\n                                });" +
"\r\n\r\n                                queuePicker.on(\'click\', \'div.queue\', queueSe" +
"lected);\r\n                            }\r\n\r\n                            buttonDia" +
"log.dialog(\'open\');\r\n                            return false;\r\n                " +
"        });\r\n                    });\r\n                </script>\r\n");

            
            #line 874 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 875 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanLogWarranty())
            {
                
            
            #line default
            #line hidden
            
            #line 877 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Lodge Warranty", MVC.Job.LogWarranty(Model.Job.Id, null, null), "Job_Show_Job_Actions_LogWarranty_Button"));

            
            #line default
            #line hidden
            
            #line 877 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                       
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 879 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanWarrantyCompleted())
            {
                
            
            #line default
            #line hidden
            
            #line 881 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Warranty Complete", MVC.API.Job.UpdateWarrantyExternalCompletedDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_WarrantyComplete_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 881 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 883 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanLogInsurance())
            {
                
            
            #line default
            #line hidden
            
            #line 885 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Lodge Insurance", MVC.Job.LogInsurance(Model.Job.Id, null, null), "Job_Show_Job_Actions_LogInsurance_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 885 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                   
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 887 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanLogRepair())
            {
                
            
            #line default
            #line hidden
            
            #line 889 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Lodge Repair", MVC.Job.LogRepair(Model.Job.Id, null, null), "Job_Show_Job_Actions_LogRepair_Button"));

            
            #line default
            #line hidden
            
            #line 889 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                 
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 891 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanRepairComplete())
            {
                
            
            #line default
            #line hidden
            
            #line 893 "..\..\Views\Job\JobParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Repairs Complete", MVC.API.Job.UpdateNonWarrantyRepairerCompletedDate(Model.Job.Id, "Now", true), "Job_Show_Job_Actions_RepairComplete_Button", "alert"));

            
            #line default
            #line hidden
            
            #line 893 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                                                                                                                                                                     
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 895 "..\..\Views\Job\JobParts\_Subject.cshtml"
             if (Model.Job.CanConvertHWarToHNWar())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Job_Show_Job_Actions_ConvertToHNWar_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Convert to Non-Warranty</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Job_Show_Job_Actions_ConvertToHNWar_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Convert this Job?\"");

WriteLiteral(">\r\n");

            
            #line 899 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 899 "..\..\Views\Job\JobParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Job.ConvertHWarToHNWar(Model.Job.Id, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 901 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 901 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;This process is not reversible.<br />\r\n                        Are you" +
" sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        const button = $('#Job_Show_Job_Actions_ConvertToHNWar_Button');
                        let buttonDialog = null;
                        button.click(function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Job_Show_Job_Actions_ConvertToHNWar_Dialog');
                                buttonDialog.dialog({
                                    resizable: false,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Convert"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }

                            buttonDialog.dialog('open');
                            return false;
                        });

                    });
                </script>
");

            
            #line 938 "..\..\Views\Job\JobParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </td>\r\n");

            
            #line 940 "..\..\Views\Job\JobParts\_Subject.cshtml"
        
            
            #line default
            #line hidden
            
            #line 940 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.Device != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_Device_Actions\"");

WriteLiteral(">\r\n");

            
            #line 943 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 943 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceHeld())
                {
                    using (Html.BeginForm(MVC.API.Job.DeviceHeld(Model.Job.Id, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 947 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 947 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                

            
            #line default
            #line hidden
WriteLiteral("                        <button");

WriteLiteral(" id=\"Job_Show_Device_Actions_Held_Button\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Device Held</button>\r\n");

            
            #line 949 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 951 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceReadyForReturn())
                {
                    using (Html.BeginForm(MVC.API.Job.DeviceReadyForReturn(Model.Job.Id, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 955 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 955 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                

            
            #line default
            #line hidden
WriteLiteral("                        <button");

WriteLiteral(" id=\"Job_Show_Device_Actions_DeviceReadyForReturn_Button\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" class=\"button small alert\"");

WriteLiteral(">Device Ready For Return</button>\r\n");

            
            #line 957 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 959 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanDeviceReturned())
                {
                    using (Html.BeginForm(MVC.API.Job.DeviceReturned(Model.Job.Id, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 963 "..\..\Views\Job\JobParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 963 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                

            
            #line default
            #line hidden
WriteLiteral("                        <button");

WriteLiteral(" id=\"Job_Show_Device_Actions_DeviceReturned_Button\"");

WriteLiteral(" type=\"submit\"");

WriteAttribute("class", Tuple.Create(" class=\"", 60035), Tuple.Create("\"", 60111)
, Tuple.Create(Tuple.Create("", 60043), Tuple.Create("button", 60043), true)
, Tuple.Create(Tuple.Create(" ", 60049), Tuple.Create("small", 60050), true)
            
            #line 964 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                    , Tuple.Create(Tuple.Create(" ", 60055), Tuple.Create<System.Object, System.Int32>(Model.Job.CanDeviceReadyForReturn() ? null : "alert"
            
            #line default
            #line hidden
, 60056), false)
);

WriteLiteral(">Device Returned</button>\r\n");

            
            #line 965 "..\..\Views\Job\JobParts\_Subject.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n");

            
            #line 968 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 969 "..\..\Views\Job\JobParts\_Subject.cshtml"
         if (Model.Job.User != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <td");

WriteLiteral(" id=\"Job_Show_User_Actions\"");

WriteLiteral(">\r\n\r\n\r\n");

            
            #line 974 "..\..\Views\Job\JobParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 974 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanWaitingForUserAction())
                {

            
            #line default
            #line hidden
WriteLiteral("                    <a");

WriteLiteral(" id=\"Job_Show_User_Actions_WaitingForUserAction_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Awaiting User Action</a>\r\n");

WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_User_Actions_WaitingForUserAction_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Waiting for User Action\"");

WriteLiteral(">\r\n");

            
            #line 978 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 978 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.WaitingForUserAction(Model.Job.Id, null, true)))
                        {
                            
            
            #line default
            #line hidden
            
            #line 980 "..\..\Views\Job\JobParts\_Subject.cshtml"
                       Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 980 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                    

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Reason:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Reason\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 985 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_User_Actions_WaitingForUserAction_Button\');\r\n                  " +
"          var buttonDialog = null;\r\n\r\n                            button.click(f" +
"unction () {\r\n                                if (!buttonDialog) {\r\n            " +
"                        buttonDialog = $(\'#Job_Show_User_Actions_WaitingForUserA" +
"ction_Dialog\');\r\n                                    buttonDialog.dialog({\r\n    " +
"                                    resizable: false,\r\n                         " +
"               modal: true,\r\n                                        autoOpen: f" +
"alse,\r\n                                        buttons: {\r\n                     " +
"                       \"Waiting for User Action\": function () {\r\n               " +
"                                 var $this = $(this);\r\n                         " +
"                       $this.dialog(\"disable\");\r\n                               " +
"                 $this.dialog(\"option\", \"buttons\", null);\r\n                     " +
"                           $this.find(\'form\').submit();\r\n                       " +
"                     },\r\n                                            Cancel: fun" +
"ction () {\r\n                                                $(this).dialog(\"clos" +
"e\");\r\n                                            }\r\n                           " +
"             }\r\n                                    });\r\n                       " +
"         }\r\n\r\n                                buttonDialog.dialog(\'open\');\r\n    " +
"                            return false;\r\n                            });\r\n    " +
"                    });\r\n                    </script>\r\n");

            
            #line 1018 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 1019 "..\..\Views\Job\JobParts\_Subject.cshtml"
                 if (Model.Job.CanNotWaitingForUserAction())
                {

            
            #line default
            #line hidden
WriteLiteral("                    <a");

WriteLiteral(" id=\"Job_Show_User_Actions_NotWaitingForUserAction_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button alert small\"");

WriteLiteral(">User Action Resolved</a>\r\n");

WriteLiteral("                    <div");

WriteLiteral(" id=\"Job_Show_User_Actions_NotWaitingForUserAction_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Not Waiting for User Action\"");

WriteLiteral(">\r\n");

            
            #line 1023 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 1023 "..\..\Views\Job\JobParts\_Subject.cshtml"
                         using (Html.BeginForm(MVC.API.Job.NotWaitingForUserAction(Model.Job.Id, null, true)))
                        {
                            
            
            #line default
            #line hidden
            
            #line 1025 "..\..\Views\Job\JobParts\_Subject.cshtml"
                       Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 1025 "..\..\Views\Job\JobParts\_Subject.cshtml"
                                                    

            
            #line default
            #line hidden
WriteLiteral("                            <h3>Resolution:</h3>\r\n");

WriteLiteral("                            <p>\r\n                                <textarea");

WriteLiteral(" name=\"Resolution\"");

WriteLiteral(" class=\"block\"");

WriteLiteral("></textarea>\r\n                            </p>\r\n");

            
            #line 1030 "..\..\Views\Job\JobParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            var butto" +
"n = $(\'#Job_Show_User_Actions_NotWaitingForUserAction_Button\');\r\n               " +
"             var buttonDialog = null;\r\n\r\n                            button.clic" +
"k(function () {\r\n                                if (!buttonDialog) {\r\n         " +
"                           buttonDialog = $(\'#Job_Show_User_Actions_NotWaitingFo" +
"rUserAction_Dialog\');\r\n                                    buttonDialog.dialog({" +
"\r\n                                        resizable: false,\r\n                   " +
"                     height: 240,\r\n                                        modal" +
": true,\r\n                                        autoOpen: false,\r\n             " +
"                           buttons: {\r\n                                         " +
"   \"Not Waiting for User Action\": function () {\r\n                               " +
"                 var $this = $(this);\r\n                                         " +
"       $this.dialog(\"disable\");\r\n                                               " +
" $this.dialog(\"option\", \"buttons\", null);\r\n                                     " +
"           $this.find(\'form\').submit();\r\n                                       " +
"     },\r\n                                            Cancel: function () {\r\n    " +
"                                            $(this).dialog(\"close\");\r\n          " +
"                                  }\r\n                                        }\r\n" +
"                                    });\r\n                                }\r\n\r\n  " +
"                              buttonDialog.dialog(\'open\');\r\n                    " +
"            return false;\r\n                            });\r\n                    " +
"    });\r\n                    </script>\r\n");

            
            #line 1064 "..\..\Views\Job\JobParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("\r\n            </td>\r\n");

            
            #line 1067 "..\..\Views\Job\JobParts\_Subject.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </tr>\r\n</table>\r\n");

        }
    }
}
#pragma warning restore 1591
