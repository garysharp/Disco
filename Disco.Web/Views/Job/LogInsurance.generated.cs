#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Views.Job
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    using Disco.Services;
    using Disco.Services.Authorization;
    using Disco.Services.Web;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Job/LogInsurance.cshtml")]
    public partial class LogInsurance : Disco.Services.Web.WebViewPage<Disco.Web.Models.Job.LogInsuranceModel>
    {
        public LogInsurance()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\Job\LogInsurance.cshtml"
  
    Authorization.RequireAny(Claims.Job.Properties.NonWarrantyProperties.InsuranceClaimFormSent, Claims.Job.Actions.LogInsurance);

    ViewBag.Title = Html.ToBreadcrumb("Jobs", MVC.Job.Index(), string.Format("Job: {0}", Model.Job.Id), MVC.Job.Show(Model.Job.Id), "Lodge Insurance Claim");

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 7 "..\..\Views\Job\LogInsurance.cshtml"
 using (Html.BeginForm(MVC.Job.LogInsurance(), FormMethod.Post))
{
    
            
            #line default
            #line hidden
            
            #line 9 "..\..\Views\Job\LogInsurance.cshtml"
Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 9 "..\..\Views\Job\LogInsurance.cshtml"
                            
    
            
            #line default
            #line hidden
            
            #line 10 "..\..\Views\Job\LogInsurance.cshtml"
Write(Html.ValidationSummary(true));

            
            #line default
            #line hidden
            
            #line 10 "..\..\Views\Job\LogInsurance.cshtml"
                                 
    
            
            #line default
            #line hidden
            
            #line 11 "..\..\Views\Job\LogInsurance.cshtml"
Write(Html.HiddenFor(m => m.JobId));

            
            #line default
            #line hidden
            
            #line 11 "..\..\Views\Job\LogInsurance.cshtml"
                                 
    
            
            #line default
            #line hidden
            
            #line 12 "..\..\Views\Job\LogInsurance.cshtml"
Write(Html.ValidationMessageFor(m => m.JobId));

            
            #line default
            #line hidden
            
            #line 12 "..\..\Views\Job\LogInsurance.cshtml"
                                            

            
            #line default
            #line hidden
WriteLiteral("    <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"SubmissionAction\"");

WriteAttribute("value", Tuple.Create(" value=\"", 610), Tuple.Create("\"", 667)
            
            #line 13 "..\..\Views\Job\LogInsurance.cshtml"
, Tuple.Create(Tuple.Create("", 618), Tuple.Create<System.Object, System.Int32>(Model.IsManualProvider ? "Manual" : "Disclose"
            
            #line default
            #line hidden
, 618), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("    <div");

WriteLiteral(" id=\"insuranceJobForm\"");

WriteLiteral(" class=\"form\"");

WriteLiteral(" style=\"width: 650px\"");

WriteLiteral(">\r\n        <table>\r\n            <tr>\r\n                <th>Internal Job Id:\r\n     " +
"           </th>\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 20 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Model.JobId);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <th" +
">Device Serial Number:\r\n                </th>\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 27 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Model.Job.Device.SerialNumber);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <th" +
">Device Model:\r\n                </th>\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 34 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Model.Job.Device.DeviceModel.Manufacturer);

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 34 "..\..\Views\Job\LogInsurance.cshtml"
                                                          Write(Model.Job.Device.DeviceModel.Model);

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <th" +
">Technician:\r\n                </th>\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 41 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Model.TechUser.DisplayName);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <div");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">\r\n                        Email Address: ");

            
            #line 43 "..\..\Views\Job\LogInsurance.cshtml"
                                  Write(Model.TechUser.EmailAddress);

            
            #line default
            #line hidden
WriteLiteral("<br />\r\n                        Phone Number: ");

            
            #line 44 "..\..\Views\Job\LogInsurance.cshtml"
                                 Write(Model.TechUser.PhoneNumber);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n         " +
"   <tr>\r\n                <th");

WriteLiteral(" style=\"width: 150px\"");

WriteLiteral(">Address:\r\n                </th>\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 52 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Html.DropDownListFor(model => model.OrganisationAddressId, Model.OrganisationAddresses.ToSelectListItems(Model.OrganisationAddressId, (Model.OrganisationAddress == null))));

            
            #line default
            #line hidden
WriteLiteral("<br />\r\n");

WriteLiteral("                    ");

            
            #line 53 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Html.ValidationMessageFor(m => m.OrganisationAddressId));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <div");

WriteLiteral(" id=\"organisationAddressDetails\"");

WriteLiteral(">\r\n");

            
            #line 55 "..\..\Views\Job\LogInsurance.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 55 "..\..\Views\Job\LogInsurance.cshtml"
                          
    var oa = Model.OrganisationAddress;
    if (oa != null)
    {

            
            #line default
            #line hidden
WriteLiteral("                            <span>");

            
            #line 59 "..\..\Views\Job\LogInsurance.cshtml"
                             Write(oa.Address);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

WriteLiteral("                            <br />\r\n");

WriteLiteral("                            <span>");

            
            #line 61 "..\..\Views\Job\LogInsurance.cshtml"
                             Write(oa.Suburb);

            
            #line default
            #line hidden
WriteLiteral(", ");

            
            #line 61 "..\..\Views\Job\LogInsurance.cshtml"
                                         Write(oa.Postcode);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

WriteLiteral("                            <br />\r\n");

WriteLiteral("                            <span>");

            
            #line 63 "..\..\Views\Job\LogInsurance.cshtml"
                             Write(oa.State);

            
            #line default
            #line hidden
WriteLiteral(", ");

            
            #line 63 "..\..\Views\Job\LogInsurance.cshtml"
                                        Write(oa.Country);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 64 "..\..\Views\Job\LogInsurance.cshtml"
    }
                        
            
            #line default
            #line hidden
WriteLiteral("\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n         " +
"   <tr>\r\n                <th>Insurance Provider:\r\n                </th>\r\n       " +
"         <td>\r\n");

WriteLiteral("                    ");

            
            #line 73 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Html.DropDownListFor(model => model.ProviderId, Model.Providers.ToSelectListItems(Model.ProviderId, AdditionalItems: new Dictionary<string, string>() { { "MANUAL", "<Manually Submitted Request>" } })));

            
            #line default
            #line hidden
WriteLiteral("<br />\r\n");

WriteLiteral("                    ");

            
            #line 74 "..\..\Views\Job\LogInsurance.cshtml"
               Write(Html.ValidationMessageFor(m => m.ProviderId));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 75 "..\..\Views\Job\LogInsurance.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Job\LogInsurance.cshtml"
                     if (Model.Providers.Count == 0 && Authorization.Has(Claims.Config.Plugin.Install))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                <i");

WriteLiteral(" class=\"fa fa-info-circle\"");

WriteLiteral("></i>View the <a");

WriteAttribute("href", Tuple.Create(" href=\"", 3387), Tuple.Create("\"", 3437)
            
            #line 79 "..\..\Views\Job\LogInsurance.cshtml"
    , Tuple.Create(Tuple.Create("", 3394), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.Config.Plugins.Install())
            
            #line default
            #line hidden
, 3394), false)
);

WriteLiteral(">Plugin Catalogue</a> to discover and install provider plugins.\r\n                " +
"            </p>\r\n                        </div>\r\n");

            
            #line 82 "..\..\Views\Job\LogInsurance.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </td>\r\n            </tr>\r\n");

            
            #line 85 "..\..\Views\Job\LogInsurance.cshtml"
            
            
            #line default
            #line hidden
            
            #line 85 "..\..\Views\Job\LogInsurance.cshtml"
             if (Model.IsManualProvider)
            {

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <th>Insurer Name:</th>\r\n               " +
"     <td>\r\n");

WriteLiteral("                        ");

            
            #line 90 "..\..\Views\Job\LogInsurance.cshtml"
                   Write(Html.EditorFor(model => model.ManualProviderName));

            
            #line default
            #line hidden
WriteLiteral("<br />\r\n");

WriteLiteral("                        ");

            
            #line 91 "..\..\Views\Job\LogInsurance.cshtml"
                   Write(Html.ValidationMessageFor(m => m.ManualProviderName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n");

WriteLiteral("                <tr>\r\n                    <th>Insurer Reference:</th>\r\n          " +
"          <td>\r\n");

WriteLiteral("                        ");

            
            #line 97 "..\..\Views\Job\LogInsurance.cshtml"
                   Write(Html.EditorFor(model => model.ManualProviderReference));

            
            #line default
            #line hidden
WriteLiteral("<br />\r\n");

WriteLiteral("                        ");

            
            #line 98 "..\..\Views\Job\LogInsurance.cshtml"
                   Write(Html.ValidationMessageFor(m => m.ManualProviderReference));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n");

            
            #line 101 "..\..\Views\Job\LogInsurance.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </table>\r\n    </div>\r\n");

            
            #line 104 "..\..\Views\Job\LogInsurance.cshtml"
            if (!Model.IsManualProvider && Authorization.Has(Claims.Job.ShowAttachments) && Model.Job.JobAttachments.Count > 0)
            {

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"form\"");

WriteLiteral(" style=\"width: 650px; margin-top: 15px;\"");

WriteLiteral(">\r\n        <h2>Send Attachments</h2>\r\n        <table>\r\n            <tr>\r\n        " +
"        <td>\r\n                    <p");

WriteLiteral(" id=\"publishJobAttachmentsSelect\"");

WriteLiteral(">\r\n                        Select <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"all\"");

WriteLiteral(">All</a> | <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"none\"");

WriteLiteral(">None</a>\r\n                    </p>\r\n                    <div");

WriteLiteral(" id=\"publishJobAttachments\"");

WriteLiteral(">\r\n");

            
            #line 115 "..\..\Views\Job\LogInsurance.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 115 "..\..\Views\Job\LogInsurance.cshtml"
                         foreach (var ja in Model.Job.JobAttachments)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <a");

WriteAttribute("href", Tuple.Create(" href=\"", 5023), Tuple.Create("\"", 5080)
            
            #line 117 "..\..\Views\Job\LogInsurance.cshtml"
, Tuple.Create(Tuple.Create("", 5030), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.Job.AttachmentDownload(ja.Id))
            
            #line default
            #line hidden
, 5030), false)
);

WriteLiteral(" data-attachmentid=\"");

            
            #line 117 "..\..\Views\Job\LogInsurance.cshtml"
                                                                                                       Write(ja.Id);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-mimetype=\"");

            
            #line 117 "..\..\Views\Job\LogInsurance.cshtml"
                                                                                                                              Write(ja.MimeType);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" class=\"select\"");

WriteLiteral(" name=\"AttachmentIds\"");

WriteAttribute("value", Tuple.Create(" value=\"", 5230), Tuple.Create("\"", 5244)
            
            #line 118 "..\..\Views\Job\LogInsurance.cshtml"
                  , Tuple.Create(Tuple.Create("", 5238), Tuple.Create<System.Object, System.Int32>(ja.Id
            
            #line default
            #line hidden
, 5238), false)
);

WriteLiteral(" ");

            
            #line 118 "..\..\Views\Job\LogInsurance.cshtml"
                                                                                                      Write(Model.AttachmentIds.Contains(ja.Id) ? "checked" : null);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                                <span");

WriteLiteral(" class=\"icon\"");

WriteAttribute("title", Tuple.Create(" title=\"", 5358), Tuple.Create("\"", 5378)
            
            #line 119 "..\..\Views\Job\LogInsurance.cshtml"
, Tuple.Create(Tuple.Create("", 5366), Tuple.Create<System.Object, System.Int32>(ja.Filename
            
            #line default
            #line hidden
, 5366), false)
);

WriteLiteral(">\r\n                                    <img");

WriteLiteral(" alt=\"Attachment Thumbnail\"");

WriteAttribute("src", Tuple.Create(" src=\"", 5449), Tuple.Create("\"", 5508)
            
            #line 120 "..\..\Views\Job\LogInsurance.cshtml"
, Tuple.Create(Tuple.Create("", 5455), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.Job.AttachmentThumbnail(ja.Id))
            
            #line default
            #line hidden
, 5455), false)
);

WriteLiteral(" />\r\n                                </span>\r\n                                <sp" +
"an");

WriteLiteral(" class=\"comments\"");

WriteAttribute("title", Tuple.Create(" title=\"", 5609), Tuple.Create("\"", 5629)
            
            #line 122 "..\..\Views\Job\LogInsurance.cshtml"
, Tuple.Create(Tuple.Create("", 5617), Tuple.Create<System.Object, System.Int32>(ja.Comments
            
            #line default
            #line hidden
, 5617), false)
);

WriteLiteral(">\r\n");

            
            #line 123 "..\..\Views\Job\LogInsurance.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 123 "..\..\Views\Job\LogInsurance.cshtml"
                                      if (!string.IsNullOrEmpty(ja.DocumentTemplateId))
                                        { 
            
            #line default
            #line hidden
            
            #line 124 "..\..\Views\Job\LogInsurance.cshtml"
                                     Write(ja.DocumentTemplate.Description);

            
            #line default
            #line hidden
            
            #line 124 "..\..\Views\Job\LogInsurance.cshtml"
                                                                          }
                                    else
                                    { 
            
            #line default
            #line hidden
            
            #line 126 "..\..\Views\Job\LogInsurance.cshtml"
                                 Write(ja.Comments);

            
            #line default
            #line hidden
            
            #line 126 "..\..\Views\Job\LogInsurance.cshtml"
                                                   }
            
            #line default
            #line hidden
WriteLiteral("\r\n                                </span><span");

WriteLiteral(" class=\"author\"");

WriteLiteral(">");

            
            #line 127 "..\..\Views\Job\LogInsurance.cshtml"
                                                       Write(ja.TechUser.ToStringFriendly());

            
            #line default
            #line hidden
WriteLiteral("</span><span");

WriteLiteral(" class=\"timestamp\"");

WriteLiteral(" data-livestamp=\"");

            
            #line 127 "..\..\Views\Job\LogInsurance.cshtml"
                                                                                                                                      Write(ja.Timestamp.ToUnixEpoc());

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("title", Tuple.Create(" title=\"", 6063), Tuple.Create("\"", 6101)
            
            #line 127 "..\..\Views\Job\LogInsurance.cshtml"
                                                                                               , Tuple.Create(Tuple.Create("", 6071), Tuple.Create<System.Object, System.Int32>(ja.Timestamp.ToFullDateTime()
            
            #line default
            #line hidden
, 6071), false)
);

WriteLiteral(">");

            
            #line 127 "..\..\Views\Job\LogInsurance.cshtml"
                                                                                                                                                                                                          Write(ja.Timestamp.ToFullDateTime());

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                            </a>\r\n");

            
            #line 129 "..\..\Views\Job\LogInsurance.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n                </td>\r\n            </tr>\r\n        </t" +
"able>\r\n    </div>\r\n");

            
            #line 135 "..\..\Views\Job\LogInsurance.cshtml"
            }
            if (Model.Provider != null && Model.ProviderSubmitJobBeginResult != null)
            { 

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" id=\"providerProperties\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 139 "..\..\Views\Job\LogInsurance.cshtml"
   Write(Html.PartialCompiled(Model.ProviderSubmitJobBeginResult.Item1, Model.ProviderSubmitJobBeginResult.Item2));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </div>\r\n");

            
            #line 141 "..\..\Views\Job\LogInsurance.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"actionBar\"");

WriteLiteral(">\r\n");

            
            #line 143 "..\..\Views\Job\LogInsurance.cshtml"
        
            
            #line default
            #line hidden
            
            #line 143 "..\..\Views\Job\LogInsurance.cshtml"
         if (Model.IsManualProvider)
        {

            
            #line default
            #line hidden
WriteLiteral("            <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(" value=\"Save Insurance Claim\"");

WriteLiteral(" />\r\n");

            
            #line 146 "..\..\Views\Job\LogInsurance.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(" value=\"Preview Insurance Claim\"");

WriteLiteral(" />\r\n");

            
            #line 150 "..\..\Views\Job\LogInsurance.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n");

            
            #line 152 "..\..\Views\Job\LogInsurance.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n    $(function () {\r\n        var $providerId = $(\'#ProviderId\');\r\n        var " +
"$addressId = $(\'#OrganisationAddressId\');\r\n\r\n        function updateDetails() {\r" +
"\n            $(\'<form>\').attr({\r\n                action: $providerId.closest(\'fo" +
"rm\').attr(\'action\'),\r\n                method: \'post\'\r\n            }).append(\r\n  " +
"              $(\'<input>\').attr({ type: \'hidden\', name: \'SubmissionAction\', valu" +
"e: \'Update\' })\r\n            ).append(\r\n                $(\'<input>\').attr({ type:" +
" \'hidden\', name: \'JobId\', value: $(\'#JobId\').val() })\r\n            ).append(\r\n  " +
"              $(\'<input>\').attr({ type: \'hidden\', name: \'ProviderId\', value: $pr" +
"oviderId.val() })\r\n            ).append(\r\n                $(\'<input>\').attr({ ty" +
"pe: \'hidden\', name: \'OrganisationAddressId\', value: $addressId.val() })\r\n       " +
"     ).append(\r\n                $(\'<input>\').attr({ type: \'hidden\', name: \'Manua" +
"lProviderName\', value: $(\'#ManualProviderName\').val() })\r\n            ).append(\r" +
"\n                $(\'<input>\').attr({ type: \'hidden\', name: \'ManualProviderRefere" +
"nce\', value: $(\'#ManualProviderReference\').val() })\r\n            ).append(\r\n    " +
"            $(\'<input>\').attr({ type: \'hidden\', name: \'__RequestVerificationToke" +
"n\', value: $providerId.closest(\'form\').find(\'input[name=\"__RequestVerificationTo" +
"ken\"]\').val() })\r\n            ).appendTo(\'body\').submit();\r\n        }\r\n\r\n       " +
" $providerId.change(updateDetails);\r\n        $addressId.change(updateDetails);\r\n" +
"\r\n        var manualProvider = $(\'#ManualProviderName\');\r\n        if (manualProv" +
"ider.length > 0 && !manualProvider.val()) {\r\n            manualProvider.focus();" +
"\r\n        } else {\r\n            $(\'#ProviderId\').focus();\r\n        }\r\n\r\n        " +
"$(\'#publishJobAttachments\').on(\'click\', \'input\', function (e) {\r\n            e.p" +
"reventDefault();\r\n            setTimeout(function () {\r\n                var $i =" +
" $(e.currentTarget);\r\n                $i.prop(\'checked\', !$i.prop(\'checked\'));\r\n" +
"            }, 0);\r\n            return false;\r\n        });\r\n        $(\'#publishJ" +
"obAttachmentsSelect\').on(\'click\', \'a\', function (e) {\r\n            e.preventDefa" +
"ult();\r\n            var $i = $(e.currentTarget);\r\n            var $c = $i.hasCla" +
"ss(\'all\');\r\n            setTimeout(function () {\r\n                $(\'#publishJob" +
"Attachments\').find(\'input:not(:disabled)\').prop(\'checked\', $c).trigger(\'change\')" +
";\r\n            }, 0);\r\n            return false;\r\n        });\r\n    });\r\n</script" +
">\r\n");

        }
    }
}
#pragma warning restore 1591
