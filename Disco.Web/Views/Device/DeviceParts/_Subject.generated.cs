#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Views.Device.DeviceParts
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 2 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
    using Disco.Services.Users.UserFlags;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Device/DeviceParts/_Subject.cshtml")]
    public partial class _Subject : Disco.Services.Web.WebViewPage<Disco.Web.Models.Device.ShowModel>
    {
        public _Subject()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
  
    Authorization.Require(Claims.Device.Show);

    Html.BundleDeferred("~/ClientScripts/Modules/Disco-PropertyChangeHelpers");

            
            #line default
            #line hidden
WriteLiteral("\r\n<table");

WriteLiteral(" id=\"Device_Show_Subjects\"");

WriteLiteral(">\r\n    <tr>\r\n        <td");

WriteLiteral(" id=\"Device_Show_Details\"");

WriteLiteral(">\r\n            <div>\r\n                <div");

WriteLiteral(" id=\"Device_Show_Details_Asset\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"none verticalHeadings\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>\r\n              " +
"                  <span");

WriteLiteral(" title=\"Computer Name\"");

WriteLiteral(">Name:</span>\r\n                            </td>\r\n                            <td" +
">\r\n");

            
            #line 19 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 19 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (string.IsNullOrWhiteSpace(Model.Device.ComputerName))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"Device_Show_Details_Asset_NameUnknown\"");

WriteLiteral(" title=\"Computer Name\"");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;Unknown/None&gt;</span>\r\n");

            
            #line 22 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <h4");

WriteLiteral(" id=\"Device_Show_Details_Asset_Name\"");

WriteLiteral(" title=\"Computer Name\"");

WriteLiteral("><span data-clipboard>");

            
            #line 25 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                  Write(Model.Device.ComputerName);

            
            #line default
            #line hidden
WriteLiteral("</span></h4>\r\n");

            
            #line 26 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"         <tr>\r\n                            <td>\r\n                               " +
" <span");

WriteLiteral(" title=\"Domain Name\"");

WriteLiteral(">Domain:</span>\r\n                            </td>\r\n                            <" +
"td>\r\n");

            
            #line 34 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 34 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (string.IsNullOrWhiteSpace(Model.Device.ComputerDomainName))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"Device_Show_Details_Asset_DomainUnknown\"");

WriteLiteral(" title=\"Computer Domain\"");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None&gt;</span>\r\n");

            
            #line 37 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <h4");

WriteLiteral(" id=\"Device_Show_Details_Asset_Domain\"");

WriteLiteral(" title=\"Computer Domain\"");

WriteLiteral("><span data-clipboard>");

            
            #line 40 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                      Write(Model.Device.ComputerDomainName);

            
            #line default
            #line hidden
WriteLiteral("</span></h4>\r\n");

            
            #line 41 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"         <tr>\r\n                            <td>Asset:</td>\r\n                    " +
"        <td>\r\n");

            
            #line 47 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 47 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (Authorization.Has(Claims.Device.Properties.AssetNumber))
                                {
                                    
            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               Write(Html.TextBoxFor(m => m.Device.AssetNumber, new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                   
            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                              Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                           
            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                      Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 49 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                    
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" class=\"small discreet\"");

WriteLiteral(" data-clipboard>");

            
            #line 53 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                            Write(Model.Device.AssetNumber ?? "Unknown");

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 54 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"         <tr>\r\n                            <td>Location:</td>\r\n                 " +
"           <td>\r\n");

            
            #line 60 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 60 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (Authorization.Has(Claims.Device.Properties.Location))
                                {
                                    
            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               Write(Html.TextBoxFor(m => m.Device.Location, new { @class = "small discreet" }));

            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                
            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                           Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                        
            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                   Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 62 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                 
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" class=\"small discreet\"");

WriteLiteral(" data-clipboard>");

            
            #line 66 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                            Write(Model.Device.Location ?? "Unknown");

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 67 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"     </table>\r\n");

            
            #line 71 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 71 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     if (Authorization.HasAny(Claims.Device.Properties.AssetNumber, Claims.Device.Properties.Location))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <script>\r\n                            $(function () {\r\n");

            
            #line 75 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 75 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (Authorization.Has(Claims.Device.Properties.AssetNumber))
                                {
            
            #line default
            #line hidden
WriteLiteral("document.DiscoFunctions.PropertyChangeHelper($(\'#Device_AssetNumber\'), \'Unknown\'," +
" \'");

            
            #line 76 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                     Write(Url.Action(MVC.API.Device.UpdateAssetNumber(Model.Device.SerialNumber, null)));

            
            #line default
            #line hidden
WriteLiteral("\', \'AssetNumber\');");

            
            #line 76 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                                                                                 }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 77 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (Authorization.Has(Claims.Device.Properties.Location))
                                {
            
            #line default
            #line hidden
WriteLiteral("document.DiscoFunctions.PropertyChangeHelper($(\'#Device_Location\'), \'Unknown\', \'");

            
            #line 78 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                  Write(Url.Action(MVC.API.Device.UpdateLocation(Model.Device.SerialNumber, null)));

            
            #line default
            #line hidden
WriteLiteral("\', \'Location\');");

            
            #line 78 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                                                                        }

            
            #line default
            #line hidden
WriteLiteral("                            });\r\n                        </script>\r\n");

            
            #line 81 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n                <div");

WriteLiteral(" id=\"Device_Show_Details_Dates\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"none verticalHeadings\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>\r\n              " +
"                  Created:\r\n                            </td>\r\n                 " +
"           <td><span");

WriteLiteral(" id=\"Device_Show_Details_Dates_Created\"");

WriteLiteral(">");

            
            #line 89 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                        Write(CommonHelpers.FriendlyDate(Model.Device.CreatedDate));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                        </tr>\r\n");

            
            #line 91 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 91 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                         if (Model.Device.DecommissionedDate.HasValue)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <tr>\r\n                                <td>\r\n         " +
"                           Decommissioned:\r\n                                </td" +
">\r\n                                <td><span");

WriteLiteral(" id=\"Device_Show_Details_Dates_Decommissioned\"");

WriteLiteral(">");

            
            #line 97 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                   Write(CommonHelpers.FriendlyDate(Model.Device.DecommissionedDate));

            
            #line default
            #line hidden
WriteLiteral("</span></td>\r\n                            </tr>\r\n");

            
            #line 99 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("\r\n                        <tr>\r\n                            <td>\r\n               " +
"                 Enrolled:\r\n                            </td>\r\n                 " +
"           <td>\r\n");

            
            #line 106 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 106 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (Model.Device.EnrolledDate.HasValue)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    ");

WriteLiteral("First: ");

WriteLiteral("<span");

WriteLiteral(" id=\"Device_Show_Details_Asset_Enrolled_First\"");

WriteLiteral(">");

            
            #line 108 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                       Write(CommonHelpers.FriendlyDate(Model.Device.EnrolledDate));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 109 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                    if (Model.Device.LastEnrolDate.HasValue && Model.Device.EnrolledDate.Value != Model.Device.LastEnrolDate.Value)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <br />");

WriteLiteral("Last: ");

WriteLiteral("<span");

WriteLiteral(" id=\"Device_Show_Details_Asset_Enrolled_Last\"");

WriteLiteral(">");

            
            #line 111 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                               Write(CommonHelpers.FriendlyDate(Model.Device.LastEnrolDate));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 112 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                    }
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"Device_Show_Details_Asset_Enrolled_Never\"");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">Never</span>\r\n");

            
            #line 117 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 118 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (Model.Device.AllowUnauthenticatedEnrol)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" id=\"Device_Show_Details_Asset_Enrolled_Trusted\"");

WriteLiteral(" title=\"Trusted Unauthenticated Enrolment is Allowed\"");

WriteLiteral("></span>\r\n");

            
            #line 121 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n\r\n             " +
"       </table>\r\n                </div>\r\n                <div");

WriteLiteral(" id=\"Device_Show_Details_Status\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"none verticalHeadings\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>\r\n              " +
"                  <span");

WriteLiteral(" title=\"Last Network Logon Date\"");

WriteLiteral(">Last Seen:</span>\r\n                            </td>\r\n                          " +
"  <td>\r\n");

            
            #line 134 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 134 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                  
                                    string lastSeenClass = null;
                                    if (Model.Device.LastNetworkLogonDate.HasValue)
                                    {
                                        if (Model.Device.LastNetworkLogonDate.Value < DateTime.Now.AddDays(-30))
                                        {
                                            lastSeenClass = "error";
                                        }
                                        else
                                        {
                                            if (Model.Device.LastNetworkLogonDate.Value < DateTime.Now.AddDays(-7))
                                            {
                                                lastSeenClass = "alert";
                                            }
                                        }
                                    }
                                
            
            #line default
            #line hidden
WriteLiteral("\r\n                                <span");

WriteLiteral(" id=\"Device_Show_Details_Status_LastSeen\"");

WriteAttribute("class", Tuple.Create(" class=\"", 8548), Tuple.Create("\"", 8570)
            
            #line 151 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
      , Tuple.Create(Tuple.Create("", 8556), Tuple.Create<System.Object, System.Int32>(lastSeenClass
            
            #line default
            #line hidden
, 8556), false)
);

WriteLiteral(" data-updateurl=\"");

            
            #line 151 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                  Write(Url.Action(MVC.API.Device.LastNetworkLogonDate(Model.Device.SerialNumber)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">");

            
            #line 151 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                                                Write(CommonHelpers.FriendlyDate(Model.Device.LastNetworkLogonDate));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                            </td>\r\n");

            
            #line 153 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 153 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                             if (!string.IsNullOrEmpty(Model.Device.ComputerName))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                    $(function () {\r\n                         " +
"               const span = $(\'#Device_Show_Details_Status_LastSeen\');\r\n        " +
"                                let updated = false;\r\n                          " +
"              let spanProgress = null;\r\n\r\n                                      " +
"  async function updateLastNetworkLogonDate() {\r\n                               " +
"             const body = new FormData();\r\n                                     " +
"       body.append(\'__RequestVerificationToken\', document.body.dataset.antiforge" +
"ry);\r\n\r\n                                            const response = await fetch" +
"(span.attr(\'data-updateurl\'), {\r\n                                               " +
" method: \'POST\',\r\n                                                body: body\r\n  " +
"                                          });\r\n                                 " +
"           updated = true;\r\n                                            if (span" +
"Progress)\r\n                                                spanProgress.remove()" +
";\r\n                                            if (!response.ok) {\r\n            " +
"                                    alert(\'Unable to retrieve latest network log" +
"on date:\\n\' + response.statusText);\r\n                                           " +
"     $(\'<span>\').addClass(\'smallMessage\').text(\'[may not be current]\').appendTo(" +
"span);\r\n                                            } else {\r\n                  " +
"                              const result = await response.json();\r\n           " +
"                                     var spanClasses = \'\',\r\n                    " +
"                                diff = moment().valueOf() - result.UnixEpoc;\r\n  " +
"                                              if (diff > 2592000000) // 30 Days\r" +
"\n                                                    spanClasses = \'error\';\r\n   " +
"                                             else if (diff > 604800000) // 7 Day" +
"s\r\n                                                    spanClasses = \'alert\';\r\n " +
"                                               span.removeClass(\'alert error\').a" +
"ddClass(spanClasses).attr(\'title\', result.Formatted).text(result.Formatted).live" +
"stamp(result.UnixEpoc);\r\n                                            }\r\n        " +
"                                }\r\n                                        updat" +
"eLastNetworkLogonDate();\r\n\r\n                                        window.setTi" +
"meout(function () {\r\n                                            if (!updated) {" +
"\r\n                                                spanProgress = $(\'<i>\').addCla" +
"ss(\'ajaxLoading showInitially\').attr(\'title\', \'Loading...\').appendTo(span);\r\n   " +
"                                         }\r\n                                    " +
"    }, 250);\r\n                                    });\r\n                         " +
"       </script>\r\n");

            
            #line 195 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </tr>\r\n                    </table>\r\n                </di" +
"v>\r\n                <div");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n");

            
            #line 200 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 200 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                      
                        var assignedUser = Model.Device.AssignedUser;
                    
            
            #line default
            #line hidden
WriteLiteral("\r\n                    <table");

WriteLiteral(" class=\"none verticalHeadings\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>\r\n              " +
"                  Assignment:\r\n                            </td>\r\n              " +
"              <td>\r\n");

            
            #line 209 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 209 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (assignedUser != null)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <div");

WriteLiteral(" id=\"Device_Show_User\"");

WriteAttribute("class", Tuple.Create(" class=\"", 12435), Tuple.Create("\"", 12506)
, Tuple.Create(Tuple.Create("", 12443), Tuple.Create("clearfix", 12443), true)
            
            #line 211 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create(" ", 12451), Tuple.Create<System.Object, System.Int32>(Model.HasAssignedUserPhoto ? "hasPhoto" : "noPhoto"
            
            #line default
            #line hidden
, 12452), false)
);

WriteLiteral(">\r\n");

            
            #line 212 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 212 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                         if (Model.HasAssignedUserPhoto)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <div");

WriteLiteral(" id=\"Device_Show_User_Photo_Container\"");

WriteLiteral(">\r\n                                                <img");

WriteLiteral(" id=\"Device_Show_User_Photo\"");

WriteAttribute("src", Tuple.Create(" src=\"", 12796), Tuple.Create("\"", 12854)
            
            #line 215 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
     , Tuple.Create(Tuple.Create("", 12802), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.User.Photo(assignedUser.UserId))
            
            #line default
            #line hidden
, 12802), false)
);

WriteLiteral(" />\r\n                                            </div>\r\n");

            
            #line 217 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        <div");

WriteLiteral(" id=\"Device_Show_User_DisplayName\"");

WriteLiteral(" title=\"Display Name\"");

WriteLiteral(">\r\n                                            <span data-clipboard>\r\n");

            
            #line 220 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 220 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                 if (Authorization.Has(Claims.User.Show))
                                                {
                                                    
            
            #line default
            #line hidden
            
            #line 222 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                               Write(Html.ActionLink(assignedUser.DisplayName, MVC.User.Show(assignedUser.UserId)));

            
            #line default
            #line hidden
            
            #line 222 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                  
                                                }
                                                else
                                                {
                                                    
            
            #line default
            #line hidden
            
            #line 226 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                               Write(assignedUser.DisplayName);

            
            #line default
            #line hidden
            
            #line 226 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                             
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </span>\r\n                            " +
"            </div>\r\n                                        <div");

WriteLiteral(" id=\"Device_Show_User_Id\"");

WriteLiteral(" title=\"Id\"");

WriteLiteral("><span data-clipboard>");

            
            #line 230 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                 Write(assignedUser.FriendlyId());

            
            #line default
            #line hidden
WriteLiteral("</span></div>\r\n");

            
            #line 231 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 231 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                         if (Authorization.Has(Claims.User.ShowDetails))
                                        {
                                            if (!string.IsNullOrWhiteSpace(assignedUser.PhoneNumber))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" id=\"Device_Show_User_PhoneNumber\"");

WriteLiteral(" title=\"Phone Number\"");

WriteLiteral("><a");

WriteAttribute("href", Tuple.Create(" href=\"", 14321), Tuple.Create("\"", 14357)
, Tuple.Create(Tuple.Create("", 14328), Tuple.Create("tel:", 14328), true)
            
            #line 235 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        , Tuple.Create(Tuple.Create("", 14332), Tuple.Create<System.Object, System.Int32>(assignedUser.PhoneNumber
            
            #line default
            #line hidden
, 14332), false)
);

WriteLiteral(" data-clipboard>");

            
            #line 235 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                              Write(assignedUser.PhoneNumber);

            
            #line default
            #line hidden
WriteLiteral("</a></div>\r\n");

            
            #line 236 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                            }
                                            if (!string.IsNullOrWhiteSpace(assignedUser.EmailAddress))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <div");

WriteLiteral(" id=\"Device_Show_User_EmailAddress\"");

WriteLiteral(" title=\"Email Address\"");

WriteLiteral("><a");

WriteAttribute("href", Tuple.Create(" href=\"", 14721), Tuple.Create("\"", 14776)
, Tuple.Create(Tuple.Create("", 14728), Tuple.Create("mailto:", 14728), true)
            
            #line 239 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                              , Tuple.Create(Tuple.Create("", 14735), Tuple.Create<System.Object, System.Int32>(Model.Device.AssignedUser.EmailAddress
            
            #line default
            #line hidden
, 14735), false)
);

WriteLiteral(" data-clipboard=\"");

            
            #line 239 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                                    Write(assignedUser.DisplayName);

            
            #line default
            #line hidden
WriteLiteral(" &lt;");

            
            #line 239 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                                                                  Write(assignedUser.EmailAddress);

            
            #line default
            #line hidden
WriteLiteral("&gt;\"");

WriteLiteral(">");

            
            #line 239 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                                                                                                                  Write(assignedUser.EmailAddress);

            
            #line default
            #line hidden
WriteLiteral("</a></div>\r\n");

            
            #line 240 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 242 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                         if (Authorization.Has(Claims.User.ShowFlagAssignments))
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <div");

WriteLiteral(" id=\"Device_Show_User_Flags\"");

WriteLiteral(">\r\n");

            
            #line 245 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 245 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                 foreach (var flag in assignedUser.UserFlagAssignments.Where(f => !f.RemovedDate.HasValue).Select(f => Tuple.Create(f, UserFlagService.GetUserFlag(f.UserFlagId))))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <i");

WriteAttribute("class", Tuple.Create(" class=\"", 15522), Tuple.Create("\"", 15592)
, Tuple.Create(Tuple.Create("", 15530), Tuple.Create("flag", 15530), true)
, Tuple.Create(Tuple.Create(" ", 15534), Tuple.Create("fa", 15535), true)
, Tuple.Create(Tuple.Create(" ", 15537), Tuple.Create("fa-", 15538), true)
            
            #line 247 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 15541), Tuple.Create<System.Object, System.Int32>(flag.Item2.Icon
            
            #line default
            #line hidden
, 15541), false)
, Tuple.Create(Tuple.Create(" ", 15559), Tuple.Create("fa-fw", 15560), true)
, Tuple.Create(Tuple.Create(" ", 15565), Tuple.Create("d-", 15566), true)
            
            #line 247 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    , Tuple.Create(Tuple.Create("", 15568), Tuple.Create<System.Object, System.Int32>(flag.Item2.IconColour
            
            #line default
            #line hidden
, 15568), false)
);

WriteLiteral(">\r\n                                                        <span");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                                                            <span");

WriteLiteral(" class=\"name\"");

WriteLiteral(">");

            
            #line 249 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                          Write(flag.Item2.Name);

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 249 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                       if (flag.Item1.Comments != null)
                                                            {
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"comments\"");

WriteLiteral(">");

            
            #line 250 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                               Write(flag.Item1.Comments.ToHtmlComment());

            
            #line default
            #line hidden
WriteLiteral("</span>");

            
            #line 250 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                               }
            
            #line default
            #line hidden
WriteLiteral("<span");

WriteLiteral(" class=\"added\"");

WriteLiteral(">");

            
            #line 250 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                               Write(CommonHelpers.FriendlyDateAndUser(flag.Item1.AddedDate, flag.Item1.AddedUserId));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                                                        </span>\r\n       " +
"                                             </i>\r\n");

            
            #line 253 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                                                    $(function () {\r\n         " +
"                                               $(\'#Device_Show_User_Flags\')\r\n   " +
"                                                         .tooltip({\r\n           " +
"                                                     items: \'i.flag\',\r\n         " +
"                                                       content: function () {\r\n " +
"                                                                   var $this = $" +
"(this);\r\n                                                                    ret" +
"urn $this.children(\'.details\').html();\r\n                                        " +
"                        },\r\n                                                    " +
"            tooltipClass: \'FlagAssignment_Tooltip\',\r\n                           " +
"                                     position: {\r\n                              " +
"                                      my: \"right top\",\r\n                        " +
"                                            at: \"right bottom\",\r\n               " +
"                                                     collision: \"flipfit flip\"\r\n" +
"                                                                },\r\n            " +
"                                                    hade: {\r\n                   " +
"                                                 effect: \'\'\r\n                   " +
"                                             },\r\n                               " +
"                                 close: function (e, ui) {\r\n                    " +
"                                                ui.tooltip.hover(\r\n             " +
"                                                           function () {\r\n      " +
"                                                                      $(this).st" +
"op(true).fadeTo(100, 1);\r\n                                                      " +
"                  },\r\n                                                          " +
"              function () {\r\n                                                   " +
"                         $(this).fadeOut(100, function () { $(this).remove(); })" +
";\r\n                                                                        });\r\n" +
"                                                                }\r\n             " +
"                                               });\r\n                            " +
"                        });\r\n                                                </s" +
"cript>\r\n                                            </div>\r\n");

            
            #line 285 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                        ");

            
            #line 286 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                         if (Model.AssignedUserDetails != null && Model.AssignedUserDetails.Count(d => !d.Key.EndsWith("&")) > 0)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <div");

WriteLiteral(" id=\"Device_Show_User_CustomDetails\"");

WriteLiteral(" class=\"status clearfix\"");

WriteLiteral(">\r\n");

            
            #line 289 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 289 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                 foreach (var detail in Model.AssignedUserDetails.Where(d => !d.Key.EndsWith("&")))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <div>\r\n                      " +
"                                  <strong>");

            
            #line 292 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                           Write(detail.Key.TrimEnd('*'));

            
            #line default
            #line hidden
WriteLiteral(":</strong>\r\n");

            
            #line 293 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                        
            
            #line default
            #line hidden
            
            #line 293 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                         if (detail.Key.EndsWith("*"))
                                                        {

            
            #line default
            #line hidden
WriteLiteral("                                                            <a");

WriteLiteral(" href=\"\"");

WriteLiteral(" class=\"reveal smallMessage\"");

WriteLiteral(">[reveal]</a>\r\n");

WriteLiteral("                                                            <span");

WriteLiteral(" class=\"reveal hidden\"");

WriteLiteral(">");

            
            #line 296 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                   Write(Html.Partial(MVC.Shared.Views._CustomDetailValueRender, detail));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 297 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                        }
                                                        else
                                                        {
                                                            
            
            #line default
            #line hidden
            
            #line 300 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                       Write(Html.Partial(MVC.Shared.Views._CustomDetailValueRender, detail));

            
            #line default
            #line hidden
            
            #line 300 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                            
                                                        }

            
            #line default
            #line hidden
WriteLiteral("                                                    </div>\r\n");

            
            #line 303 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                                                    $(() => {
                                                        $('#Device_Show_User_CustomDetails').on('click', 'a.reveal', e => {
                                                            e.preventDefault();
                                                            const t = $(e.currentTarget);
                                                            t.next('span.reveal').removeClass('hidden');
                                                            t.remove();
                                                            return false;
                                                        })
                                                    });
                                                </script>
                                            </div>
");

            
            #line 316 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </div>\r\n");

            
            #line 318 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">Not Assigned</span>\r\n");

            
            #line 322 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n               " +
"     </table>\r\n                </div>\r\n");

            
            #line 327 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                
            
            #line default
            #line hidden
            
            #line 327 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                 if (Authorization.Has(Claims.Device.Actions.GenerateDocuments))
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" id=\"Device_Show_GenerateDocument_Container\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 330 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   Write(Html.Partial(MVC.Shared.Views._GenerateDocumentControl, Model.GenerateDocumentControlModel));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </div>\r\n");

            
            #line 332 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n        </td>\r\n        <td");

WriteLiteral(" id=\"Device_Show_Policies\"");

WriteLiteral(" rowspan=\"2\"");

WriteLiteral(">\r\n            <div>\r\n                <div");

WriteLiteral(" id=\"Device_Show_Policies_Profile\"");

WriteLiteral(">\r\n                    <h2");

WriteLiteral(" title=\"Device Profile\"");

WriteLiteral(">\r\n");

            
            #line 339 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 339 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                         if (Authorization.Has(Claims.Config.DeviceProfile.Show))
                        {
                            
            
            #line default
            #line hidden
            
            #line 341 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                       Write(Html.ActionLink(Model.Device.DeviceProfile.Name, MVC.Config.DeviceProfile.Index(Model.Device.DeviceProfileId)));

            
            #line default
            #line hidden
            
            #line 341 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                           
                        }
                        else
                        {
                            
            
            #line default
            #line hidden
            
            #line 345 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                       Write(Model.Device.DeviceProfile.Name);

            
            #line default
            #line hidden
            
            #line 345 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                            
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </h2>\r\n                    <table");

WriteLiteral(" class=\"none verticalHeadings\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td>\r\n              " +
"                  <span");

WriteLiteral(" title=\"Distribution Type\"");

WriteLiteral(">Distribution:</span>\r\n                            </td>\r\n                       " +
"     <td>\r\n");

WriteLiteral("                                ");

            
            #line 354 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                           Write(Model.Device.DeviceProfile.DistributionType.ToString());

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n             " +
"           <tr>\r\n                            <td>\r\n                             " +
"   <span");

WriteLiteral(" title=\"Address\"");

WriteLiteral(">Address:</span>\r\n                            </td>\r\n                            " +
"<td>\r\n");

            
            #line 362 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 362 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                  
                                    if (Model.DeviceProfileDefaultOrganisationAddress != null)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <span");

WriteLiteral(" id=\"Device_Show_Policies_Profile_Address\"");

WriteLiteral(">");

            
            #line 365 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                   Write(Model.DeviceProfileDefaultOrganisationAddress.Name);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 366 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                    }
                                    else
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <span");

WriteLiteral(" id=\"Device_Show_Policies_Profile_Address_None\"");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">None</span>\r\n");

            
            #line 370 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                    }
                                
            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n             " +
"           <tr>\r\n                            <td>\r\n                             " +
"   <span");

WriteLiteral(" title=\"Provision Active Directory Account\"");

WriteLiteral(">Provision Account:</span>\r\n                            </td>\r\n                  " +
"          <td>\r\n");

WriteLiteral("                                ");

            
            #line 379 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            Write(Model.Device.DeviceProfile.ProvisionADAccount ? "Active Directory" : "No");

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n             " +
"           <tr>\r\n                            <td>\r\n                             " +
"   <span");

WriteLiteral(" title=\"Provisioned Personal Certificates\"");

WriteLiteral(">Certificates:</span>\r\n                            </td>\r\n                       " +
"     <td>\r\n");

WriteLiteral("                                ");

            
            #line 387 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            Write(Model.DeviceProfileCertificateProviders != null ? string.Join(", ", Model.DeviceProfileCertificateProviders.Select(c => c.Name)) : "None Provisioned");

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                        <tr>\r\n              " +
"              <td>\r\n                                <span");

WriteLiteral(" title=\"Provisioned Wireless Profiles\"");

WriteLiteral(">Wireless Profiles:</span>\r\n                            </td>\r\n                  " +
"          <td>\r\n");

WriteLiteral("                                ");

            
            #line 394 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            Write(Model.DeviceProfileWirelessProfileProviders != null ? string.Join(", ", Model.DeviceProfileWirelessProfileProviders.Select(c => c.Name)) : "None Provisioned");

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n             " +
"       </table>\r\n");

            
            #line 398 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 398 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     if (Model.Device.CanUpdateDeviceProfile())
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <button");

WriteLiteral(" id=\"Device_Show_Policies_Profile_Actions_Update_Button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update Profile</button>\r\n");

            
            #line 401 "..\..\Views\Device\DeviceParts\_Subject.cshtml"


            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" id=\"Device_Show_Policies_Profile_Actions_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Assign to Device Profile\"");

WriteLiteral(">\r\n");

            
            #line 403 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 403 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                             using (Html.BeginForm(MVC.API.Device.UpdateDeviceProfileId(Model.Device.SerialNumber, redirect: true)))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"profile-list\"");

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 406 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <ul");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n");

            
            #line 408 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 408 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                         foreach (var dp in Model.DeviceProfiles.OrderBy(i => i.Name))
                                        {
                                            var isDecommissioned = Model.DecommissionedDeviceProfileIds.Contains(dp.Id);

            
            #line default
            #line hidden
WriteLiteral("                                            <li");

WriteAttribute("class", Tuple.Create(" class=\"", 26478), Tuple.Create("\"", 26523)
            
            #line 411 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 26486), Tuple.Create<System.Object, System.Int32>(isDecommissioned ? "hidden" : null
            
            #line default
            #line hidden
, 26486), false)
);

WriteLiteral(">\r\n                                                <label");

WriteAttribute("title", Tuple.Create(" title=\"", 26581), Tuple.Create("\"", 26625)
, Tuple.Create(Tuple.Create("", 26589), Tuple.Create("Distribution:", 26589), true)
            
            #line 412 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create(" ", 26602), Tuple.Create<System.Object, System.Int32>(dp.DistributionType
            
            #line default
            #line hidden
, 26603), false)
);

WriteLiteral(">\r\n                                                    <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"DeviceProfileId\"");

WriteAttribute("value", Tuple.Create(" value=\"", 26723), Tuple.Create("\"", 26737)
            
            #line 413 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     , Tuple.Create(Tuple.Create("", 26731), Tuple.Create<System.Object, System.Int32>(dp.Id
            
            #line default
            #line hidden
, 26731), false)
);

WriteLiteral(" data-ouenforced=\"");

            
            #line 413 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                          Write(dp.EnforceOrganisationalUnit);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" ");

            
            #line 413 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                          Write(Model.Device.DeviceProfileId == dp.Id ? "checked " : null);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n");

WriteLiteral("                                                    ");

            
            #line 414 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                               Write(dp.Name);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                </label>\r\n                     " +
"                       </li>\r\n");

            
            #line 417 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                            if (isDecommissioned)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <li");

WriteLiteral(" class=\"hidden decommissioned-padding\"");

WriteLiteral("></li>\r\n");

            
            #line 420 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </ul>\r\n");

            
            #line 423 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 423 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                     if (Model.DecommissionedDeviceProfileIds.Count > 0)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <a");

WriteLiteral(" class=\"button small show-decommissioned\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Decommissioned</a>\r\n");

            
            #line 426 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n");

WriteLiteral("                                <div");

WriteLiteral(" class=\"enforce-ou\"");

WriteLiteral(">\r\n                                    <input");

WriteLiteral(" id=\"deviceProfileMoveOrganisationalUnit\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"enforceOrganisationalUnit\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" /><label");

WriteLiteral(" for=\"deviceProfileMoveOrganisationalUnit\"");

WriteLiteral(">Move to Profiles Organisational Unit</label>\r\n                                </" +
"div>\r\n");

            
            #line 431 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

WriteLiteral("                        <script>\r\n                            $(function () {\r\n  " +
"                              var currentProfile = \'");

            
            #line 435 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                  Write(Model.Device.DeviceProfileId);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n                                var button = $(\'#Device_Show_Policies_Profile" +
"_Actions_Update_Button\');\r\n                                var buttonDialog = nu" +
"ll;\r\n                                var dialogInputs = null;\r\n                 " +
"               var dialogContainers = null;\r\n\r\n                                b" +
"utton.click(function (e) {\r\n                                    e.preventDefault" +
"();\r\n\r\n                                    if (!buttonDialog) {\r\n               " +
"                         buttonDialog = $(\'#Device_Show_Policies_Profile_Actions" +
"_Update_Dialog\')\r\n                                                            .d" +
"ialog({\r\n                                                                resizab" +
"le: false,\r\n                                                                moda" +
"l: true,\r\n                                                                maxHei" +
"ght: 450,\r\n                                                                autoO" +
"pen: false,\r\n                                                                but" +
"tons: {\r\n                                                                    \"Up" +
"date Profile\": function () {\r\n                                                  " +
"                      var deviceProfileId = dialogInputs.filter(\':checked\').val(" +
");\r\n                                                                        if (" +
"deviceProfileId) {\r\n                                                            " +
"                var $this = $(this);\r\n                                          " +
"                                  $this.dialog(\"disable\");\r\n                    " +
"                                                        $this.dialog(\"option\", \"" +
"buttons\", null);\r\n                                                              " +
"              $this.find(\'form\').submit();\r\n                                    " +
"                                    } else {\r\n                                  " +
"                                          alert(\'A device profile must be select" +
"ed\');\r\n                                                                        }" +
"\r\n                                                                    },\r\n      " +
"                                                              Cancel: function (" +
") {\r\n                                                                        $(t" +
"his).dialog(\"close\");\r\n                                                         " +
"           }\r\n                                                                }\r" +
"\n                                                            });\r\n              " +
"                          dialogInputs = buttonDialog.find(\'input[type=\"radio\"]\'" +
");\r\n                                        dialogContainers = dialogInputs.clos" +
"est(\'li\');\r\n\r\n                                        dialogInputs.change(functi" +
"on () {\r\n                                            const $this = $(this);\r\n   " +
"                                         dialogContainers.removeClass(\'selected\'" +
");\r\n\r\n                                            $this.closest(\'li\').addClass(\'" +
"selected\');\r\n                                            $(\'#deviceProfileMoveOr" +
"ganisationalUnit\').prop(\'checked\', $this.attr(\'data-ouenforced\') === \'True\');\r\n " +
"                                       });\r\n                                    " +
"    buttonDialog.find(\'.show-decommissioned\')\r\n                                 " +
"           .click(function (e) {\r\n                                              " +
"  e.preventDefault();\r\n                                                var $this" +
" = $(this);\r\n                                                buttonDialog.find(\'" +
"ul.none\')\r\n                                                    .find(\'li.hidden\'" +
").removeClass(\'hidden\')\r\n                                                    .fi" +
"lter(\'.decommissioned-padding\').remove();\r\n                                     " +
"           $this.remove();\r\n                                                retu" +
"rn false;\r\n                                            })\r\n                     " +
"               }\r\n\r\n                                    dialogInputs.filter(\'[da" +
"ta-deviceprofileid=\' + currentProfile + \']\').prop(\'checked\', true).change();\r\n\r\n" +
"                                    buttonDialog.dialog(\'open\');\r\n              " +
"                      return false;\r\n                                });\r\n\r\n    " +
"                        });\r\n                        </script>\r\n");

            
            #line 498 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n                <div");

WriteLiteral(" id=\"Device_Show_Policies_Batch\"");

WriteLiteral(" class=\"status\"");

WriteLiteral(">\r\n");

            
            #line 501 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 501 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     if (Model.Device.DeviceBatchId.HasValue)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <h2");

WriteLiteral(" title=\"Device Batch\"");

WriteLiteral(">\r\n");

            
            #line 504 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 504 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                             if (Authorization.Has(Claims.Config.DeviceBatch.Show))
                            {
                                
            
            #line default
            #line hidden
            
            #line 506 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                           Write(Html.ActionLink(Model.Device.DeviceBatch.Name, MVC.Config.DeviceBatch.Index(Model.Device.DeviceBatchId.Value)));

            
            #line default
            #line hidden
            
            #line 506 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                               
                            }
                            else
                            {
                                
            
            #line default
            #line hidden
            
            #line 510 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                           Write(Model.Device.DeviceBatch.Name);

            
            #line default
            #line hidden
            
            #line 510 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                              
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </h2>\r\n");

WriteLiteral("                        <table");

WriteLiteral(" class=\"none verticalHeadings\"");

WriteLiteral(">\r\n                            <tr>\r\n                                <td>\r\n      " +
"                              <span");

WriteLiteral(" title=\"Purchased Date\"");

WriteLiteral(">Purchased:</span>\r\n                                </td>\r\n                      " +
"          <td>\r\n");

WriteLiteral("                                    ");

            
            #line 519 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               Write(CommonHelpers.FriendlyDate(Model.Device.DeviceBatch.PurchaseDate));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n     " +
"                       <tr>\r\n                                <td>\r\n             " +
"                       <span");

WriteLiteral(" title=\"Supplier\"");

WriteLiteral(">Supplier:</span>\r\n                                </td>\r\n                       " +
"         <td>\r\n");

WriteLiteral("                                    ");

            
            #line 527 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                Write(Model.Device.DeviceBatch.Supplier ?? "Unknown");

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n     " +
"                       <tr>\r\n                                <td>\r\n             " +
"                       <span");

WriteLiteral(" title=\"Warranty Valid Until\"");

WriteLiteral(">Warranty Until:</span>\r\n                                </td>\r\n                 " +
"               <td");

WriteAttribute("class", Tuple.Create(" class=\"", 34485), Tuple.Create("\"", 34633)
            
            #line 534 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 34493), Tuple.Create<System.Object, System.Int32>(Model.Device.DeviceBatch.WarrantyValidUntil.HasValue && Model.Device.DeviceBatch.WarrantyValidUntil.Value < DateTime.Now ? "alert" : null
            
            #line default
            #line hidden
, 34493), false)
);

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 535 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               Write(CommonHelpers.FriendlyDate(Model.Device.DeviceBatch.WarrantyValidUntil, "Unknown", null));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n     " +
"                       <tr>\r\n                                <td>\r\n             " +
"                       <span");

WriteLiteral(" title=\"Insurance Supplier\"");

WriteLiteral(">Insurance Supplier:</span>\r\n                                </td>\r\n             " +
"                   <td>\r\n");

WriteLiteral("                                    ");

            
            #line 543 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                Write(Model.Device.DeviceBatch.InsuranceSupplier ?? "Unknown");

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n     " +
"                       <tr>\r\n                                <td>\r\n             " +
"                       <span");

WriteLiteral(" title=\"Insured Until\"");

WriteLiteral(">Insured Until:</span>\r\n                                </td>\r\n                  " +
"              <td");

WriteAttribute("class", Tuple.Create(" class=\"", 35487), Tuple.Create("\"", 35623)
            
            #line 550 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 35495), Tuple.Create<System.Object, System.Int32>(Model.Device.DeviceBatch.InsuredUntil.HasValue && Model.Device.DeviceBatch.InsuredUntil.Value < DateTime.Now ? "alert" : null
            
            #line default
            #line hidden
, 35495), false)
);

WriteLiteral(">\r\n");

WriteLiteral("                                    ");

            
            #line 551 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               Write(CommonHelpers.FriendlyDate(Model.Device.DeviceBatch.InsuredUntil, "Unknown", null));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n     " +
"                   </table>\r\n");

            
            #line 555 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }
                    else
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <h2>Batch: <em>Not Associated</em></h2>\r\n");

            
            #line 559 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 560 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     if (Model.Device.CanUpdateDeviceBatch())
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <button");

WriteLiteral(" id=\"Device_Show_Policies_Batch_Actions_Update_Button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update Batch</button>\r\n");

WriteLiteral("                        <div");

WriteLiteral(" id=\"Device_Show_Policies_Batch_Actions_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Assign to Device Batch\"");

WriteLiteral(">\r\n                            <div>\r\n");

            
            #line 565 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 565 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 using (Html.BeginForm(MVC.API.Device.UpdateDeviceBatchId(Model.Device.SerialNumber, null, true)))
                                {
                                    
            
            #line default
            #line hidden
            
            #line 567 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 567 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                            

            
            #line default
            #line hidden
WriteLiteral("                                    <ul");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n");

            
            #line 569 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 569 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                         foreach (var db in Model.DeviceBatches.OrderBy(i => i.Name))
                                        {
                                            var isDecommissioned = Model.DecommissionedDeviceBatchIds.Contains(db.Id);

            
            #line default
            #line hidden
WriteLiteral("                                            <li");

WriteAttribute("class", Tuple.Create(" class=\"", 36995), Tuple.Create("\"", 37040)
            
            #line 572 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 37003), Tuple.Create<System.Object, System.Int32>(isDecommissioned ? "hidden" : null
            
            #line default
            #line hidden
, 37003), false)
);

WriteLiteral(">\r\n                                                <label");

WriteAttribute("title", Tuple.Create(" title=\"", 37098), Tuple.Create("\"", 37154)
, Tuple.Create(Tuple.Create("", 37106), Tuple.Create("Purchased:", 37106), true)
            
            #line 573 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create(" ", 37116), Tuple.Create<System.Object, System.Int32>(db.PurchaseDate.ToLongDateString()
            
            #line default
            #line hidden
, 37117), false)
);

WriteLiteral(">\r\n                                                    <input");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" data-devicebatchid=\"");

            
            #line 574 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                       Write(db.Id);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" name=\"DeviceBatchId\"");

WriteAttribute("value", Tuple.Create(" value=\"", 37278), Tuple.Create("\"", 37292)
            
            #line 574 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                               , Tuple.Create(Tuple.Create("", 37286), Tuple.Create<System.Object, System.Int32>(db.Id
            
            #line default
            #line hidden
, 37286), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                                                    ");

            
            #line 575 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                               Write(db.Name);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                                </label>\r\n                     " +
"                       </li>\r\n");

            
            #line 578 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                            if (isDecommissioned)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <li");

WriteLiteral(" class=\"hidden decommissioned-padding\"");

WriteLiteral("></li>\r\n");

            
            #line 581 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </ul>\r\n");

            
            #line 584 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");

            
            #line 585 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 if (Model.DecommissionedDeviceBatchIds.Count > 0)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteLiteral(" class=\"button small show-decommissioned\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(">Show Decommissioned</a>\r\n");

            
            #line 588 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </div>\r\n                        </div>\r\n");

WriteLiteral("                        <script>\r\n                            $(function () {\r\n  " +
"                              var currentBatch = \'");

            
            #line 593 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                Write(Model.Device.DeviceBatchId);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n                                var button = $(\'#Device_Show_Policies_Batch_A" +
"ctions_Update_Button\');\r\n                                var buttonDialog = null" +
";\r\n                                var dialogInputs = null;\r\n                   " +
"             var dialogContainers = null;\r\n\r\n                                but" +
"ton.click(function () {\r\n\r\n                                    if (!buttonDialog" +
") {\r\n                                        buttonDialog = $(\'#Device_Show_Poli" +
"cies_Batch_Actions_Update_Dialog\')\r\n                                            " +
"                .dialog({\r\n                                                     " +
"           resizable: false,\r\n                                                  " +
"              modal: true,\r\n                                                    " +
"            maxHeight: 450,\r\n                                                   " +
"             autoOpen: false,\r\n                                                 " +
"               buttons: {\r\n                                                     " +
"               \"Update Batch\": function () {\r\n                                  " +
"                                      var deviceBatchId = dialogInputs.filter(\':" +
"checked\').attr(\'data-devicebatchid\');\r\n\r\n                                       " +
"                                 if (deviceBatchId) {\r\n                         " +
"                                                   $(this)\r\n                    " +
"                                                            .dialog(\"option\", \"b" +
"uttons\", null)\r\n                                                                " +
"                .find(\'form\').trigger(\'submit\');\r\n                              " +
"                                          } else {\r\n                            " +
"                                                alert(\'A device batch must be se" +
"lected\');\r\n                                                                     " +
"   }\r\n                                                                    },\r\n  " +
"                                                                  Cancel: functi" +
"on () {\r\n                                                                       " +
" $(this).dialog(\"close\");\r\n                                                     " +
"               }\r\n                                                              " +
"  }\r\n                                                            });\r\n          " +
"                              dialogInputs = buttonDialog.find(\'input\');\r\n      " +
"                                  dialogContainers = dialogInputs.closest(\'li\');" +
"\r\n\r\n                                        dialogInputs.change(function () {\r\n " +
"                                           dialogContainers.removeClass(\'selecte" +
"d\');\r\n                                            $(this).closest(\'li\').addClass" +
"(\'selected\');\r\n                                        });\r\n                    " +
"                    buttonDialog.find(\'.show-decommissioned\')\r\n                 " +
"                           .click(function (e) {\r\n                              " +
"                  e.preventDefault();\r\n                                         " +
"       var $this = $(this);\r\n                                                but" +
"tonDialog.find(\'ul.none\')\r\n                                                    ." +
"find(\'li.hidden\').removeClass(\'hidden\')\r\n                                       " +
"             .filter(\'.decommissioned-padding\').remove();\r\n                     " +
"                           $this.remove();\r\n                                    " +
"            return false;\r\n                                            })\r\n     " +
"                               }\r\n\r\n                                    if (!!cu" +
"rrentBatch) {\r\n                                        dialogInputs.filter(\'[dat" +
"a-devicebatchid=\' + currentBatch + \']\').prop(\'checked\', true).change();\r\n       " +
"                             }\r\n\r\n                                    buttonDial" +
"og.dialog(\'open\');\r\n                                    return false;\r\n         " +
"                       });\r\n\r\n                            });\r\n                 " +
"       </script>\r\n");

            
            #line 654 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </div>\r\n        </td>\r\n        <td");

WriteLiteral(" id=\"Device_Show_Aspects\"");

WriteLiteral(" rowspan=\"2\"");

WriteLiteral(">\r\n            <div>\r\n                <div");

WriteLiteral(" id=\"Device_Show_Aspects_Model\"");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(">\r\n                    <h2");

WriteLiteral(" id=\"Device_Show_Aspects_Model_Description\"");

WriteLiteral(" title=\"Model Description\"");

WriteLiteral(">\r\n");

            
            #line 662 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 662 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                         if (Authorization.Has(Claims.Config.DeviceModel.Show))
                        {
                            
            
            #line default
            #line hidden
            
            #line 664 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                       Write(Html.ActionLink(Model.Device.DeviceModel.ToString(), MVC.Config.DeviceModel.Index(Model.Device.DeviceModelId)));

            
            #line default
            #line hidden
            
            #line 664 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                           
                        }
                        else
                        {
                            
            
            #line default
            #line hidden
            
            #line 668 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                       Write(Model.Device.DeviceModel.ToString());

            
            #line default
            #line hidden
            
            #line 668 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </h2>\r\n                    <img");

WriteLiteral(" id=\"Device_Show_Aspects_Model_Image\"");

WriteLiteral(" alt=\"Model Image\"");

WriteAttribute("src", Tuple.Create(" src=\"", 43293), Tuple.Create("\"", 43403)
            
            #line 671 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
    , Tuple.Create(Tuple.Create("", 43299), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.API.DeviceModel.Image(Model.Device.DeviceModelId, Model.Device.DeviceModel.ImageHash()))
            
            #line default
            #line hidden
, 43299), false)
);

WriteLiteral(" />\r\n                </div>\r\n            </div>\r\n        </td>\r\n    </tr>\r\n    <t" +
"r");

WriteLiteral(" id=\"Device_Show_Subjects_Actions\"");

WriteLiteral(">\r\n        <td");

WriteLiteral(" id=\"Device_Show_Device_Actions\"");

WriteLiteral(">\r\n");

            
            #line 678 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            
            
            #line default
            #line hidden
            
            #line 678 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanCreateJob())
            {
                Html.BundleDeferred("~/ClientScripts/Modules/Disco-CreateJob");
                
            
            #line default
            #line hidden
            
            #line 681 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Create Job", MVC.Job.Create(Model.Device.SerialNumber, Model.Device.AssignedUserId), "buttonCreateJob"));

            
            #line default
            #line hidden
            
            #line 681 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                                    
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 683 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanUpdateAssignment())
            {

            
            #line default
            #line hidden
WriteLiteral("                <a");

WriteLiteral(" id=\"Device_Show_User_Actions_Assign_Button\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update Assignment</a>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Device_Show_User_Actions_Assign_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Assign this Device?\"");

WriteLiteral(">\r\n                    <h4><i");

WriteLiteral(" class=\"fa fa-info-circle information\"");

WriteLiteral("></i>&nbsp;Assign to User:</h4>\r\n                    <br />\r\n");

            
            #line 689 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 689 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Device.UpdateAssignedUserId(Model.Device.SerialNumber, redirect: true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 691 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 691 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                

            
            #line default
            #line hidden
WriteLiteral("                        <input");

WriteLiteral(" id=\"Device_Show_User_Actions_Assign_UserId\"");

WriteLiteral(" name=\"AssignedUserId\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" />\r\n");

            
            #line 693 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        var button = $('#Device_Show_User_Actions_Assign_Button');
                        var buttonDialog = null;
                        var inputUserId = null;

                        var dialogButtons = {
");

            
            #line 702 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 702 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                              
                    if (assignedUser != null)
                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        ");

WriteLiteral(@"
                            ""Unassign"": function () {
                                var $this = $(this);
                                $this.dialog(""disable"");
                                $this.dialog(""option"", ""buttons"", null);

                                inputUserId.val('');
                                inputUserId.closest('form').submit()
                            },
                            ");

WriteLiteral("\r\n");

            
            #line 715 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }
                                                
            
            #line default
            #line hidden
WriteLiteral("\r\n                            \"Assign\": function () {\r\n                          " +
"      var $this = $(this);\r\n                                var userId = inputUs" +
"erId.val();\r\n                                if (userId) {\r\n                    " +
"                $this.dialog(\"disable\");\r\n                                    $t" +
"his.dialog(\"option\", \"buttons\", null);\r\n                                    inpu" +
"tUserId.closest(\'form\').submit()\r\n                                } else {\r\n    " +
"                                alert(\'Enter a user to assign this device\');\r\n  " +
"                              }\r\n                            },\r\n               " +
"             Cancel: function () {\r\n                                $(this).dial" +
"og(\"close\");\r\n                            }\r\n                        }\r\n\r\n      " +
"                  button.click(function () {\r\n                            if (!b" +
"uttonDialog) {\r\n                                buttonDialog = $(\'#Device_Show_U" +
"ser_Actions_Assign_Dialog\')\r\n                                                   " +
" .dialog({\r\n                                                        resizable: f" +
"alse,\r\n                                                        height: 180,\r\n   " +
"                                                     modal: true,\r\n             " +
"                                           autoOpen: false,\r\n                   " +
"                                     buttons: dialogButtons\r\n                   " +
"                                 });\r\n                                inputUserI" +
"d = $(\'#Device_Show_User_Actions_Assign_UserId\');\r\n                             " +
"   inputUserId.focus(function () { inputUserId.select() })\r\n                    " +
"                .autocomplete({\r\n                                        source:" +
" \'");

            
            #line 746 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                             Write(Url.Action(MVC.API.Search.UsersUpstream()));

            
            #line default
            #line hidden
WriteLiteral(@"',
                                        minLength: 2,
                                        select: function (e, ui) {
                                            inputUserId.val(ui.item.Id);
                                            return false;
                                        }
                                    });
                                inputUserId.data('ui-autocomplete')._renderItem = function (ul, item) {
                                    return $(""<li>"")
                                        .data(""item.autocomplete"", item)
                                        .append(""<a><strong>"" + item.DisplayName + ""</strong><br>"" + item.Id + "" ("" + item.Type + "")</a>"")
                                        .appendTo(ul);
                                };
                            }
                            buttonDialog.dialog('open');
                            inputUserId.focus();
                            return false;
                        });

                    });
                </script>
");

            
            #line 767 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 768 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanAddDeviceFlags() && Model.AvailableDeviceFlags != null && Model.AvailableDeviceFlags.Count > 0)
            {
                
            
            #line default
            #line hidden
            
            #line 770 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
           Write(Html.ActionLinkSmallButton("Add Flag", MVC.API.DeviceFlagAssignment.AddDevice(), "Device_Show_Details_Actions_AddFlag_Button"));

            
            #line default
            #line hidden
            
            #line 770 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                               

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" id=\"Device_Show_Details_Actions_AddFlag_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Add Device Flag\"");

WriteLiteral(">\r\n");

            
            #line 772 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 772 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.DeviceFlagAssignment.AddDevice()))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <input");

WriteLiteral(" id=\"Device_Show_Details_Actions_AddFlag_Dialog_Id\"");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"id\"");

WriteLiteral(" />\r\n");

WriteLiteral("                        <input");

WriteLiteral(" id=\"Device_Show_Details_Actions_AddFlag_Dialog_DeviceSerialNumber\"");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"DeviceSerialNumber\"");

WriteAttribute("value", Tuple.Create(" value=\"", 49301), Tuple.Create("\"", 49335)
            
            #line 775 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                , Tuple.Create(Tuple.Create("", 49309), Tuple.Create<System.Object, System.Int32>(Model.Device.SerialNumber
            
            #line default
            #line hidden
, 49309), false)
);

WriteLiteral(" />\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"flagPicker\"");

WriteLiteral(">\r\n                            <input");

WriteLiteral(" id=\"Device_Show_Details_Actions_AddFlag_Dialog_Filter\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" placeholder=\"Filter\"");

WriteLiteral(" autocomplete=\"off\"");

WriteLiteral(" />\r\n");

            
            #line 778 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 778 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                             foreach (var flag in Model.AvailableDeviceFlags.OrderBy(jq => jq.Name))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" class=\"flag\"");

WriteLiteral(" data-flagid=\"");

            
            #line 780 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                           Write(flag.Id);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-flagname=\"");

            
            #line 780 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                     Write(flag.Name);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n                                    <i");

WriteAttribute("class", Tuple.Create(" class=\"", 49812), Tuple.Create("\"", 49871)
, Tuple.Create(Tuple.Create("", 49820), Tuple.Create("fa", 49820), true)
, Tuple.Create(Tuple.Create(" ", 49822), Tuple.Create("fa-", 49823), true)
            
            #line 781 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 49826), Tuple.Create<System.Object, System.Int32>(flag.Icon
            
            #line default
            #line hidden
, 49826), false)
, Tuple.Create(Tuple.Create(" ", 49838), Tuple.Create("fa-fw", 49839), true)
, Tuple.Create(Tuple.Create(" ", 49844), Tuple.Create("fa-lg", 49845), true)
, Tuple.Create(Tuple.Create(" ", 49850), Tuple.Create("d-", 49851), true)
            
            #line 781 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 49853), Tuple.Create<System.Object, System.Int32>(flag.IconColour
            
            #line default
            #line hidden
, 49853), false)
);

WriteLiteral("></i>");

            
            #line 781 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                  Write(flag.Name);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </div>\r\n");

            
            #line 783 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </div>\r\n");

WriteLiteral("                        <div");

WriteLiteral(" class=\"details\"");

WriteLiteral(">\r\n                            <div>\r\n                                <h4>Comment" +
"s</h4>\r\n                                <textarea");

WriteLiteral(" name=\"Comments\"");

WriteLiteral(" id=\"Device_Show_Details_Actions_AddFlag_Dialog_Comments\"");

WriteLiteral("></textarea>\r\n                            </div>\r\n                        </div>\r" +
"\n");

            
            #line 791 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        const button = $(" +
"\'#Device_Show_Details_Actions_AddFlag_Button\');\r\n                        let but" +
"tonDialog = null;\r\n                        const buttonLink = button.attr(\'href\'" +
");\r\n\r\n                        let flagPicker = null;\r\n                        le" +
"t flagAddId = null;\r\n                        let flagAddComments = null;\r\n      " +
"                  let details = null;\r\n\r\n                        function flagSe" +
"lected() {\r\n                            const flag = $(this);\r\n\r\n               " +
"             flagPicker.children().removeClass(\'selected\');\r\n                   " +
"         flag.addClass(\'selected\');\r\n\r\n                            flagAddId.val" +
"(flag.attr(\'data-flagid\'));\r\n\r\n                            details.show();\r\n\r\n  " +
"                          flagAddComments.focus().select();\r\n                   " +
"     }\r\n\r\n                        button.attr(\'href\', \'#\').click(function (e) {\r" +
"\n                            e.preventDefault();\r\n\r\n                            " +
"if (!buttonDialog) {\r\n                                buttonDialog = $(\'#Device_" +
"Show_Details_Actions_AddFlag_Dialog\');\r\n                                buttonDi" +
"alog.dialog({\r\n                                    width: 600,\r\n                " +
"                    height: 410,\r\n                                    resizable:" +
" false,\r\n                                    modal: true,\r\n                     " +
"               autoOpen: false,\r\n                                    buttons: {\r" +
"\n                                        Cancel: function () {\r\n                " +
"                            $(this).dialog(\"close\");\r\n                          " +
"              },\r\n                                        \"Add Flag\": function (" +
") {\r\n                                            if (!!flagAddId.val()) {\r\n     " +
"                                           const $this = $(this);\r\n             " +
"                                   $this.dialog(\"disable\");\r\n                   " +
"                             $this.dialog(\"option\", \"buttons\", null);\r\n         " +
"                                       buttonDialog.find(\'form\').submit();\r\n    " +
"                                        } else {\r\n                              " +
"                  alert(\'Select a Device Flag\');\r\n                              " +
"              }\r\n                                        }\r\n                    " +
"                }\r\n                                });\r\n\r\n                      " +
"          flagAddId = $(\'#Device_Show_Details_Actions_AddFlag_Dialog_Id\');\r\n    " +
"                            flagAddComments = buttonDialog.find(\'#Device_Show_De" +
"tails_Actions_AddFlag_Dialog_Comments\');\r\n                                flagPi" +
"cker = buttonDialog.find(\'.flagPicker\');\r\n                                detail" +
"s = buttonDialog.find(\'.details\');\r\n\r\n                                $(\'#Device" +
"_Show_Details_Actions_AddFlag_Dialog_Filter\').on(\'keyup\', function (e) {\r\n      " +
"                              const filter = $(e.currentTarget).val().toLowerCas" +
"e();\r\n                                    if (filter) {\r\n                       " +
"                 flagPicker.children(\'div.flag\').each(function () {\r\n           " +
"                                 const $this = $(this);\r\n                       " +
"                     if ($this.attr(\'data-flagname\').toLowerCase().indexOf(filte" +
"r) >= 0) {\r\n                                                $this.css(\'display\'," +
" \'block\');\r\n                                            } else {\r\n              " +
"                                  $this.css(\'display\', \'none\');\r\n               " +
"                             }\r\n                                        });\r\n   " +
"                                 } else {\r\n                                     " +
"   flagPicker.children(\'div.flag\').each(function () { $(this).css(\'display\', \'bl" +
"ock\'); });\r\n                                    }\r\n                             " +
"   });\r\n\r\n                                flagPicker.on(\'click\', \'div.flag\', fla" +
"gSelected);\r\n                            }\r\n\r\n                            $(\'#De" +
"vice_Show_Details_Actions_AddFlag_Dialog_Filter\').val(\'\');\r\n                    " +
"        buttonDialog.dialog(\'open\');\r\n                            return false;\r" +
"\n                        });\r\n                    });\r\n                </script>" +
"\r\n");

            
            #line 875 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 876 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanUpdateTrustEnrol())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Device_Show_Device_Actions_TrustEnrol_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Trust Enrol</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Device_Show_Device_Actions_TrustEnrol_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Trust this Device?\"");

WriteLiteral(">\r\n");

            
            #line 880 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 880 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Device.UpdateAllowUnauthenticatedEnrol(Model.Device.SerialNumber, true.ToString(), true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 882 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 882 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral(@"                    <p>
                        Devices flagged as 'trusted' are allowed a single-use device enrolment without providing authentication (for example: Active Directory Computer Account).
                    </p>
                    <p>
                        Once a device enrols, its trust setting is reset and additional enrolments need to be authenticated (domain joined) or manually trusted again.
                    </p>
                    <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(" style=\"margin-top: 1em;\"");

WriteLiteral(">\r\n                        <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(" style=\"margin-bottom: 1em;\"");

WriteLiteral(">\r\n                            <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle\"");

WriteLiteral("></i>This action will allow a device <em>claiming</em> to have the Serial Number " +
"\'");

            
            #line 892 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                                               Write(Model.Device.SerialNumber);

            
            #line default
            #line hidden
WriteLiteral(@"' to be enrolled without authentication.
                        </p>
                        <div>
                            <strong>Are you sure you want to allow an unauthenticated enrolment?</strong>
                        </div>
                    </div>
                </div>
");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        let buttonDialog;
                        $('#Device_Show_Device_Actions_TrustEnrol_Button').click(function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Device_Show_Device_Actions_TrustEnrol_Dialog').dialog({
                                    resizable: false,
                                    width: 400,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Trust"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }
                            buttonDialog.dialog('open');
                        });
                    });
                </script>
");

            
            #line 925 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 926 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanUpdateUntrustEnrol())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Device_Show_Device_Actions_UntrustEnrol_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Untrust Enrol</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Device_Show_Device_Actions_UntrustEnrol_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Untrust this Device?\"");

WriteLiteral(">\r\n");

            
            #line 930 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 930 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Device.UpdateAllowUnauthenticatedEnrol(Model.Device.SerialNumber, false.ToString(), true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 932 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 932 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                        <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(" style=\"margin-bottom: 1em;\"");

WriteLiteral(">\r\n                            <i");

WriteLiteral(" class=\"fa fa-info-circle\"");

WriteLiteral(@"></i>This action will require the device to enrol with authentication (for example: domain joined).
                        </p>
                        <div>
                            <strong>Are you sure you want to require an authenticated enrolment?</strong>
                        </div>
                    </div>
                </div>
");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        let buttonDialog = null;
                        $('#Device_Show_Device_Actions_UntrustEnrol_Button').on('click', function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Device_Show_Device_Actions_UntrustEnrol_Dialog').dialog({
                                    resizable: false,
                                    width: 400,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Untrust"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }
                            buttonDialog.dialog('open');
                        });
                    });
                </script>
");

            
            #line 969 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 970 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanDecommission())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Device_Show_Device_Actions_Decommission_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Decommission</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Device_Show_Device_Actions_Decommission_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Device Decommissioning\"");

WriteLiteral(">\r\n");

            
            #line 974 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 974 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Device.Decommission(Model.Device.SerialNumber, null, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 976 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 976 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"clearfix\"");

WriteLiteral(" style=\"margin-bottom: 10px;\"");

WriteLiteral(">\r\n                            <i");

WriteLiteral(" class=\"fa fa-question-circle fa-lg information\"");

WriteLiteral("></i>&nbsp;Why is this device to be decommissioned?\r\n                        </di" +
"v>\r\n");

WriteLiteral("                        <div>\r\n                            <ul");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n");

            
            #line 982 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 982 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                 foreach (DecommissionReasons decommissionReason in Enum.GetValues(typeof(DecommissionReasons)).Cast<DecommissionReasons>().OrderBy(r => r.ToString()))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <li>\r\n                                       " +
" <input");

WriteLiteral(" type=\"radio\"");

WriteAttribute("id", Tuple.Create(" id=\"", 61421), Tuple.Create("\"", 61499)
, Tuple.Create(Tuple.Create("", 61426), Tuple.Create("Device_Show_Device_Actions_Decommission_Reason_", 61426), true)
            
            #line 985 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                               , Tuple.Create(Tuple.Create("", 61473), Tuple.Create<System.Object, System.Int32>((int)decommissionReason
            
            #line default
            #line hidden
, 61473), false)
);

WriteLiteral("\r\n                                               name=\"Reason\"");

WriteAttribute("value", Tuple.Create(" value=\"", 61562), Tuple.Create("\"", 61596)
            
            #line 986 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
, Tuple.Create(Tuple.Create("", 61570), Tuple.Create<System.Object, System.Int32>((int)decommissionReason
            
            #line default
            #line hidden
, 61570), false)
);

WriteLiteral(" ");

            
            #line 986 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                            Write((decommissionReason == DecommissionReasons.EndOfLife) ? "checked=\"checked\"" : string.Empty);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                                        <label");

WriteAttribute("for", Tuple.Create(" for=\"", 61744), Tuple.Create("\"", 61823)
, Tuple.Create(Tuple.Create("", 61750), Tuple.Create("Device_Show_Device_Actions_Decommission_Reason_", 61750), true)
            
            #line 987 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   , Tuple.Create(Tuple.Create("", 61797), Tuple.Create<System.Object, System.Int32>((int)decommissionReason
            
            #line default
            #line hidden
, 61797), false)
);

WriteLiteral(">");

            
            #line 987 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                                                                                           Write(decommissionReason.ReasonMessage());

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                    </li>\r\n");

            
            #line 989 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </ul>\r\n                        </div>\r\n");

            
            #line 992 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        var buttonDialog = null;
                        $('#Device_Show_Device_Actions_Decommission_Button').on('click', function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Device_Show_Device_Actions_Decommission_Dialog')
                                    .dialog({
                                        resizable: false,
                                        modal: true,
                                        autoOpen: false,
                                        buttons: {
                                            ""Decommission"": function () {
                                                $(this)
                                                    .dialog(""option"", ""buttons"", null)
                                                    .find('form').trigger('submit');
                                            },
                                            Cancel: function () {
                                                $(this).dialog(""close"");
                                            }
                                        }
                                    });
                            }
                            buttonDialog.dialog('open');
                        });
                    });
                </script>
");

            
            #line 1020 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 1021 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanRecommission())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Device_Show_Device_Actions_Recommission_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Recommission</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Device_Show_Device_Actions_Recommission_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Recommission this Device?\"");

WriteLiteral(">\r\n");

            
            #line 1025 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 1025 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Device.Recommission(Model.Device.SerialNumber, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 1027 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 1027 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral("></i>&nbsp;Are you sure?\r\n                    </p>\r\n                </div>\r\n");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        let buttonDialog = null;
                        $('#Device_Show_Device_Actions_Recommission_Button').on('click', function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Device_Show_Device_Actions_Recommission_Dialog').dialog({
                                    resizable: false,
                                    height: 140,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Recommission"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }
                            buttonDialog.dialog('open');
                        });

                    });
                </script>
");

            
            #line 1060 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            ");

            
            #line 1061 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
             if (Model.Device.CanDelete())
            {

            
            #line default
            #line hidden
WriteLiteral("                <button");

WriteLiteral(" id=\"Device_Show_Device_Actions_Delete_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Delete Device</button>\r\n");

WriteLiteral("                <div");

WriteLiteral(" id=\"Device_Show_Device_Actions_Delete_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Delete this Device?\"");

WriteLiteral(">\r\n");

            
            #line 1065 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 1065 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                     using (Html.BeginForm(MVC.API.Device.Delete(Model.Device.SerialNumber, true)))
                    {
                        
            
            #line default
            #line hidden
            
            #line 1067 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                   Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 1067 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <p>\r\n                        <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg\"");

WriteLiteral(@"></i>&nbsp;
                        This item will be permanently deleted and cannot be recovered.<br />
                        Jobs linked to this Device (but not to a User) will be deleted also.<br />
                        Are you sure?
                    </p>
                </div>
");

WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        let buttonDialog = null;
                        $('#Device_Show_Device_Actions_Delete_Button').on('click', function () {
                            if (!buttonDialog) {
                                buttonDialog = $('#Device_Show_Device_Actions_Delete_Dialog').dialog({
                                    resizable: false,
                                    height: 200,
                                    modal: true,
                                    autoOpen: false,
                                    buttons: {
                                        ""Delete"": function () {
                                            $(this)
                                                .dialog(""option"", ""buttons"", null)
                                                .find('form').trigger('submit');
                                        },
                                        Cancel: function () {
                                            $(this).dialog(""close"");
                                        }
                                    }
                                });
                            }
                            buttonDialog.dialog('open');
                        });
                    });
                </script>
");

            
            #line 1102 "..\..\Views\Device\DeviceParts\_Subject.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        </td>\r\n    </tr>\r\n</table>\r\n");

        }
    }
}
#pragma warning restore 1591
