#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Areas.Config.Views.DeviceFlag
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 3 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
    using Disco.Services.Devices.DeviceFlags;
    
    #line default
    #line hidden
    
    #line 2 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
    using Disco.Services.Interop.ActiveDirectory;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    
    #line 4 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
    using Disco.Web.Areas.Config.Models.Shared;
    
    #line default
    #line hidden
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Config/Views/DeviceFlag/Show.cshtml")]
    public partial class Show : Disco.Services.Web.WebViewPage<Disco.Web.Areas.Config.Models.DeviceFlag.ShowModel>
    {
        public Show()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
  
    Authorization.Require(Claims.Config.DeviceFlag.Show);

    ViewBag.Title = Html.ToBreadcrumb("Configuration", MVC.Config.Config.Index(), "Device Flags", MVC.Config.DeviceFlag.Index(null), Model.DeviceFlag.ToString());

    var canConfig = Authorization.Has(Claims.Config.DeviceFlag.Configure);
    var canDelete = Authorization.Has(Claims.Config.DeviceFlag.Delete);
    var canBulkAssignment = Authorization.HasAll(Claims.Device.Actions.AddFlags, Claims.Device.Actions.RemoveFlags, Claims.Device.ShowFlagAssignments);
    var canShowDevices = Model.CurrentAssignmentCount > 0 && Authorization.HasAll(Claims.Device.Search, Claims.Device.ShowFlagAssignments);
    var canExportCurrent = Model.CurrentAssignmentCount > 0 && Authorization.Has(Claims.Config.DeviceFlag.Export);
    var canExportAll = Model.TotalAssignmentCount > 0 && Authorization.Has(Claims.Config.DeviceFlag.Export);

    var hideAdvanced =
        Model.DeviceFlag.DevicesLinkedGroup == null &&
        Model.DeviceFlag.DeviceUsersLinkedGroup == null &&
        Model.DeviceFlag.OnAssignmentExpression == null &&
        Model.DeviceFlag.OnUnassignmentExpression == null;

    Html.BundleDeferred("~/ClientScripts/Modules/Disco-PropertyChangeHelpers");

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"Config_DeviceFlags_Show\"");

WriteAttribute("class", Tuple.Create(" class=\"", 1478), Tuple.Create("\"", 1537)
, Tuple.Create(Tuple.Create("", 1486), Tuple.Create("form", 1486), true)
            
            #line 25 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
, Tuple.Create(Tuple.Create("", 1490), Tuple.Create<System.Object, System.Int32>(hideAdvanced ? " Config_HideAdvanced" : null
            
            #line default
            #line hidden
, 1490), false)
);

WriteLiteral(" style=\"width: 550px\"");

WriteLiteral(">\r\n    <table>\r\n        <tr>\r\n            <th");

WriteLiteral(" style=\"width: 150px\"");

WriteLiteral(">\r\n                Id:\r\n            </th>\r\n            <td>\r\n");

WriteLiteral("                ");

            
            #line 32 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
           Write(Html.DisplayFor(model => model.DeviceFlag.Id));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n             " +
"   Name:\r\n            </th>\r\n            <td>\r\n");

            
            #line 40 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 40 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                 if (canConfig)
                {
            
            #line default
            #line hidden
            
            #line 41 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
            Write(Html.EditorFor(model => model.DeviceFlag.Name));

            
            #line default
            #line hidden
            
            #line 41 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                
                
            
            #line default
            #line hidden
            
            #line 42 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
           Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 42 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                       
                
            
            #line default
            #line hidden
            
            #line 43 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
           Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 43 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                         

            
            #line default
            #line hidden
WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                        $(function () {
                            document.DiscoFunctions.PropertyChangeHelper(
                                $('#DeviceFlag_Name'),
                                'Invalid Name',
                                '");

            
            #line 49 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                             Write(Url.Action(MVC.API.DeviceFlag.UpdateName(Model.DeviceFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                \'FlagName\'\r\n                            );\r\n " +
"                       });\r\n                </script>\r\n");

            
            #line 54 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
            }
            else
            {
                
            
            #line default
            #line hidden
            
            #line 57 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
           Write(Model.DeviceFlag.Name);

            
            #line default
            #line hidden
            
            #line 57 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                      
            }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Description:\r\n            </th>\r\n            <td>\r\n");

            
            #line 66 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 66 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                 if (canConfig)
                {
            
            #line default
            #line hidden
            
            #line 67 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
            Write(Html.EditorFor(model => model.DeviceFlag.Description));

            
            #line default
            #line hidden
            
            #line 67 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                       
                
            
            #line default
            #line hidden
            
            #line 68 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
           Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 68 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                       
                
            
            #line default
            #line hidden
            
            #line 69 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
           Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 69 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                         

            
            #line default
            #line hidden
WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                        $(function () {
                            document.DiscoFunctions.PropertyChangeHelper(
                                $('#DeviceFlag_Description'),
                                'Invalid Description',
                                '");

            
            #line 75 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                             Write(Url.Action(MVC.API.DeviceFlag.UpdateDescription(Model.DeviceFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                \'Description\'\r\n                            );" +
"\r\n                        });\r\n                </script>\r\n");

            
            #line 80 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
            }
            else
            {

            
            #line default
            #line hidden
WriteLiteral("                <pre>\r\n");

            
            #line 84 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 84 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                     if (string.IsNullOrEmpty(Model.DeviceFlag.Description))
                    {

            
            #line default
            #line hidden
WriteLiteral("                    ");

WriteLiteral("&lt;None&gt;");

WriteLiteral("\r\n");

            
            #line 87 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            
            #line 90 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                   Write(Model.DeviceFlag.Description.ToHtmlComment());

            
            #line default
            #line hidden
            
            #line 90 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                     
                    }

            
            #line default
            #line hidden
WriteLiteral("                    </pre>\r\n");

            
            #line 93 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Statistics:\r\n            </th>\r\n            <td>\r\n                <div><strong>" +
"");

            
            #line 101 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                        Write(Model.CurrentAssignmentCount);

            
            #line default
            #line hidden
WriteLiteral(" device");

            
            #line 101 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                             Write(Model.CurrentAssignmentCount != 1 ? "s" : null);

            
            #line default
            #line hidden
WriteLiteral(" currently assigned</strong></div>\r\n                <div>");

            
            #line 102 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                Write(Model.TotalAssignmentCount);

            
            #line default
            #line hidden
WriteLiteral(" total device historical assignment");

            
            #line 102 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                               Write(Model.TotalAssignmentCount != 1 ? "s" : null);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n       " +
"         Icon:\r\n            </th>\r\n            <td>\r\n                <i");

WriteLiteral(" id=\"Config_DeviceFlags_Icon\"");

WriteLiteral(" data-icon=\"");

            
            #line 110 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                       Write(Model.DeviceFlag.Icon);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-colour=\"");

            
            #line 110 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                              Write(Model.DeviceFlag.IconColour);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 4620), Tuple.Create("\"", 4697)
, Tuple.Create(Tuple.Create("", 4628), Tuple.Create("fa", 4628), true)
, Tuple.Create(Tuple.Create(" ", 4630), Tuple.Create("fa-", 4631), true)
            
            #line 110 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                , Tuple.Create(Tuple.Create("", 4634), Tuple.Create<System.Object, System.Int32>(Model.DeviceFlag.Icon
            
            #line default
            #line hidden
, 4634), false)
, Tuple.Create(Tuple.Create(" ", 4658), Tuple.Create("fa-4x", 4659), true)
, Tuple.Create(Tuple.Create(" ", 4664), Tuple.Create("d-", 4665), true)
            
            #line 110 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                                 , Tuple.Create(Tuple.Create("", 4667), Tuple.Create<System.Object, System.Int32>(Model.DeviceFlag.IconColour
            
            #line default
            #line hidden
, 4667), false)
);

WriteLiteral("></i>\r\n");

            
            #line 111 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 111 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                 if (canConfig)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div>\r\n                        <a");

WriteLiteral(" id=\"Config_DeviceFlags_Icon_Update\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update</a>\r\n                        <div");

WriteLiteral(" id=\"Config_DeviceFlags_Icon_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Device Flag Icon\"");

WriteLiteral(">\r\n");

            
            #line 116 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 116 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                             using (Html.BeginForm(MVC.API.DeviceFlag.UpdateIconAndColour(id: Model.DeviceFlag.Id, redirect: true)))
                            {
                                
            
            #line default
            #line hidden
            
            #line 118 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 118 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                        

            
            #line default
            #line hidden
WriteLiteral("                                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"icon\"");

WriteLiteral(" />\r\n");

WriteLiteral("                                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"iconColour\"");

WriteLiteral(" />\r\n");

            
            #line 121 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <div>\r\n                                <div");

WriteLiteral(" class=\"colours\"");

WriteLiteral(">\r\n");

            
            #line 124 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 124 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                     foreach (var colour in Model.ThemeColours)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <i");

WriteLiteral(" data-colour=\"");

            
            #line 126 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                    Write(colour.Key);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 5681), Tuple.Create("\"", 5717)
, Tuple.Create(Tuple.Create("", 5689), Tuple.Create("fa", 5689), true)
, Tuple.Create(Tuple.Create(" ", 5691), Tuple.Create("fa-square", 5692), true)
, Tuple.Create(Tuple.Create(" ", 5701), Tuple.Create("d-", 5702), true)
            
            #line 126 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
              , Tuple.Create(Tuple.Create("", 5704), Tuple.Create<System.Object, System.Int32>(colour.Key
            
            #line default
            #line hidden
, 5704), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 5718), Tuple.Create("\"", 5739)
            
            #line 126 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                   , Tuple.Create(Tuple.Create("", 5726), Tuple.Create<System.Object, System.Int32>(colour.Value
            
            #line default
            #line hidden
, 5726), false)
);

WriteLiteral("></i>\r\n");

            
            #line 127 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n                                <div");

WriteLiteral(" class=\"icons\"");

WriteLiteral(">\r\n");

            
            #line 130 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 130 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                     foreach (var icon in Model.Icons)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <i");

WriteLiteral(" data-icon=\"");

            
            #line 132 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                  Write(icon.Key);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 6056), Tuple.Create("\"", 6081)
, Tuple.Create(Tuple.Create("", 6064), Tuple.Create("fa", 6064), true)
, Tuple.Create(Tuple.Create(" ", 6066), Tuple.Create("fa-", 6067), true)
            
            #line 132 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
 , Tuple.Create(Tuple.Create("", 6070), Tuple.Create<System.Object, System.Int32>(icon.Key
            
            #line default
            #line hidden
, 6070), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 6082), Tuple.Create("\"", 6101)
            
            #line 132 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    , Tuple.Create(Tuple.Create("", 6090), Tuple.Create<System.Object, System.Int32>(icon.Value
            
            #line default
            #line hidden
, 6090), false)
);

WriteLiteral("></i>\r\n");

            
            #line 133 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n                            </div>\r\n     " +
"                   </div>\r\n                        <script>\r\n                   " +
"         (function () {\r\n                                var dialog, icon, colou" +
"rs, icons;\r\n\r\n                                function showDialog() {\r\n         " +
"                           if (!dialog) {\r\n                                     " +
"   dialog = $(\'#Config_DeviceFlags_Icon_Update_Dialog\').dialog({\r\n              " +
"                              resizable: false,\r\n                               " +
"             modal: true,\r\n                                            autoOpen:" +
" false,\r\n                                            width: 1000,\r\n             " +
"                               buttons: {\r\n                                     " +
"           \"Save\": save,\r\n                                                Cancel" +
": cancel\r\n                                            }\r\n                       " +
"                 });\r\n\r\n                                        colours = dialog" +
".find(\'.colours\');\r\n                                        icons = dialog.find(" +
"\'.icons\');\r\n\r\n                                        colours.on(\'click\', \'i\', s" +
"electColour);\r\n                                        icons.on(\'click\', \'i\', se" +
"lectIcon);\r\n                                    }\r\n\r\n                           " +
"         colours.find(\'i[data-colour=\"\' + icon.attr(\'data-colour\') + \'\"]\').each(" +
"selectColour);\r\n                                    icons.find(\'i[data-icon=\"\' +" +
" icon.attr(\'data-icon\') + \'\"]\').each(selectIcon);\r\n\r\n                           " +
"         dialog.dialog(\'open\');\r\n\r\n                                    return fa" +
"lse;\r\n                                }\r\n\r\n                                funct" +
"ion selectColour() {\r\n                                    var $this = $(this),\r\n" +
"                                        colourCode = $this.attr(\'data-colour\'),\r" +
"\n                                        previousColourCode = icons.attr(\'data-c" +
"olour\');\r\n\r\n\r\n                                    colours.find(\'i\').removeClass(" +
"\'selected fa-check-square\').addClass(\'fa-square\');\r\n                            " +
"        $this.removeClass(\'fa-square\').addClass(\'fa-check-square selected\');\r\n\r\n" +
"                                    if (previousColourCode)\r\n                   " +
"                     icons.removeClass(\'d-\' + previousColourCode);\r\n            " +
"                        icons.attr(\'data-colour\', colourCode)\r\n                 " +
"                   icons.addClass(\'d-\' + colourCode);\r\n                         " +
"       }\r\n                                function selectIcon() {\r\n             " +
"                       var $this = $(this),\r\n                                   " +
"     iconCode = $this.attr(\'data-icon\');\r\n\r\n                                    " +
"icons.find(\'i\').removeClass(\'selected\');\r\n                                    $t" +
"his.addClass(\'selected\');\r\n                                }\r\n\r\n                " +
"                function save() {\r\n                                    dialog.di" +
"alog(\"option\", \"buttons\", null);\r\n                                    const $for" +
"m = dialog.find(\'form\');\r\n                                    $form.find(\'input[" +
"name=\"icon\"]\').val(icons.find(\'i.selected\').attr(\'data-icon\'));\r\n               " +
"                     $form.find(\'input[name=\"iconColour\"]\').val(colours.find(\'i." +
"selected\').attr(\'data-colour\'));\r\n                                    $form.trig" +
"ger(\'submit\');\r\n                                }\r\n\r\n                           " +
"     function cancel() {\r\n                                    $(this).dialog(\"cl" +
"ose\");\r\n                                }\r\n\r\n                                $(f" +
"unction () {\r\n                                    icon = $(\'#Config_DeviceFlags_" +
"Icon\');\r\n                                    $(\'#Config_DeviceFlags_Icon_Update\'" +
").click(showDialog);\r\n                                });\r\n                     " +
"       }());\r\n                        </script>\r\n                    </div>\r\n");

            
            #line 210 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n");

            
            #line 213 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
        
            
            #line default
            #line hidden
            
            #line 213 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
         if (hideAdvanced)
        {

            
            #line default
            #line hidden
WriteLiteral("            <tr>\r\n                <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"text-align: right;\"");

WriteLiteral(">\r\n                    <button");

WriteLiteral(" id=\"Config_HideAdvanced_Show\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(@">Show Advanced Options</button>
                    <script>
                        $(function () {
                            $('#Config_HideAdvanced_Show').click(function () {
                                var $this = $(this);
                                $this.closest('.Config_HideAdvanced').removeClass('Config_HideAdvanced');
                                $this.closest('tr').remove();
                            });
                        });
                    </script>
                </td>
            </tr>
");

            
            #line 229 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        <tr");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n            <th>\r\n                On Assignment<br />Expression:\r\n            " +
"</th>\r\n            <td>\r\n");

            
            #line 235 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 235 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                 if (canConfig)
                {
                    
            
            #line default
            #line hidden
            
            #line 237 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(Html.EditorFor(model => model.DeviceFlag.OnAssignmentExpression));

            
            #line default
            #line hidden
            
            #line 237 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                     
                    
            
            #line default
            #line hidden
            
            #line 238 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxRemove());

            
            #line default
            #line hidden
            
            #line 238 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                             
                    
            
            #line default
            #line hidden
            
            #line 239 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 239 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 240 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 240 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                            $(function () {
                                var field = $('#DeviceFlag_OnAssignmentExpression');
                                var fieldRemove = field.next('.ajaxRemove');
                                var fieldOriginalWidth, fieldOriginalHeight;

                                document.DiscoFunctions.PropertyChangeHelper(
                                    field,
                                    'None',
                                    '");

            
            #line 250 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                Write(Url.Action(MVC.API.DeviceFlag.UpdateOnAssignmentExpression(Model.DeviceFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                    \'OnAssignmentExpression\'\r\n               " +
"                 );\r\n\r\n                                field.focus(function () {" +
"\r\n                                    fieldOriginalWidth = field.width();\r\n     " +
"                               fieldOriginalHeight = field.height();\r\n          " +
"                          field.css(\'overflow\', \'visible\').animate({ width: fiel" +
"d.parent().width() - 42, height: 75 }, 200);\r\n                                })" +
".blur(function () {\r\n                                    field.css(\'overflow\', \'" +
"hidden\').animate({ width: fieldOriginalWidth, height: fieldOriginalHeight }, 200" +
");\r\n                                }).change(function () {\r\n                   " +
"                 if (!!field.val()) {\r\n                                        f" +
"ieldRemove.show();\r\n                                    } else {\r\n              " +
"                          fieldRemove.hide();\r\n                                 " +
"   }\r\n                                }).attr(\'placeholder\', \'None\').attr(\'spell" +
"check\', \'false\');\r\n\r\n                                fieldRemove.click(function " +
"() {\r\n                                    field.val(\'\').change();\r\n             " +
"                   });\r\n\r\n                                if (!!field.val()) {\r\n" +
"                                    fieldRemove.show();\r\n                       " +
"         } else {\r\n                                    fieldRemove.hide();\r\n    " +
"                            }\r\n                            });\r\n                " +
"    </script>\r\n");

            
            #line 279 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                }
                else
                {
                    if (string.IsNullOrWhiteSpace(Model.DeviceFlag.OnAssignmentExpression))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 285 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    }
                    else
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 289 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                       Write(Model.DeviceFlag.OnAssignmentExpression);

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n");

            
            #line 291 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                    <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                        <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral("></i>This expression will be evaluated whenever the flag is assigned to a device." +
" The output of the expression will be shown with the flag assignment.\r\n         " +
"           </p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n     " +
"   <tr");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n            <th>\r\n                On Unassignment<br />Expression:\r\n          " +
"  </th>\r\n            <td>\r\n");

            
            #line 305 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 305 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                 if (canConfig)
                {
                    
            
            #line default
            #line hidden
            
            #line 307 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(Html.EditorFor(model => model.DeviceFlag.OnUnassignmentExpression));

            
            #line default
            #line hidden
            
            #line 307 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                       
                    
            
            #line default
            #line hidden
            
            #line 308 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxRemove());

            
            #line default
            #line hidden
            
            #line 308 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                             
                    
            
            #line default
            #line hidden
            
            #line 309 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 309 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 310 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 310 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                        $(function () {
                            var field = $('#DeviceFlag_OnUnassignmentExpression');
                            var fieldRemove = field.next('.ajaxRemove');
                            var fieldOriginalWidth, fieldOriginalHeight;

                            document.DiscoFunctions.PropertyChangeHelper(
                                field,
                                'None',
                                '");

            
            #line 320 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                            Write(Url.Action(MVC.API.DeviceFlag.UpdateOnUnassignmentExpression(Model.DeviceFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral(@"',
                                'OnUnassignmentExpression'
                            );

                            field.focus(function () {
                                fieldOriginalWidth = field.width();
                                fieldOriginalHeight = field.height();
                                field.css('overflow', 'visible').animate({ width: field.parent().width() - 42, height: 75 }, 200);
                            }).blur(function () {
                                field.css('overflow', 'hidden').animate({ width: fieldOriginalWidth, height: fieldOriginalHeight }, 200);
                            }).change(function () {
                                if (!!field.val()) {
                                    fieldRemove.show();
                                } else {
                                    fieldRemove.hide();
                                }
                            }).attr('placeholder', 'None').attr('spellcheck', 'false');

                            fieldRemove.click(function () {
                                field.val('').change();
                            });

                            if (!!field.val()) {
                                fieldRemove.show();
                            } else {
                                fieldRemove.hide();
                            }
                        });
                    </script>
");

            
            #line 349 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                }
                else
                {
                    if (string.IsNullOrWhiteSpace(Model.DeviceFlag.OnUnassignmentExpression))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 355 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    }
                    else
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 359 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                       Write(Model.DeviceFlag.OnUnassignmentExpression);

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n");

            
            #line 361 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                    <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                        <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral("></i>This expression will be evaluated whenever the flag is removed from a device" +
". The output of the expression will be shown with the flag assignment.\r\n        " +
"            </p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n\r\n  " +
"      <tr");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n            <th>\r\n                Linked Groups:\r\n            </th>\r\n         " +
"   <td>\r\n                <div>\r\n");

WriteLiteral("                    ");

            
            #line 377 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupInstance, new LinkedGroupModel()
               {
                   CanConfigure = canConfig,
                   CategoryDescription = DeviceFlagDevicesManagedGroup.GetCategoryDescription(Model.DeviceFlag),
                   Description = DeviceFlagDevicesManagedGroup.GetDescription(Model.DeviceFlag),
                   ManagedGroup = Model.DevicesLinkedGroup,
                   IncludeFilterBeginDate = true,
                   UpdateUrl = Url.Action(MVC.API.DeviceFlag.UpdateDevicesLinkedGroup(Model.DeviceFlag.Id, redirect: true))
               }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                    ");

            
            #line 386 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupInstance, new LinkedGroupModel()
               {
                   CanConfigure = canConfig,
                   CategoryDescription = DeviceFlagDeviceAssignedUsersManagedGroup.GetCategoryDescription(Model.DeviceFlag),
                   Description = DeviceFlagDeviceAssignedUsersManagedGroup.GetDescription(Model.DeviceFlag),
                   ManagedGroup = Model.AssignedUserLinkedGroup,
                   IncludeFilterBeginDate = true,
                   UpdateUrl = Url.Action(MVC.API.DeviceFlag.UpdateAssignedUserLinkedGroup(Model.DeviceFlag.Id, redirect: true))
               }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 395 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 395 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                     if (canConfig)
                    {
                        
            
            #line default
            #line hidden
            
            #line 397 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                   Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupShared));

            
            #line default
            #line hidden
            
            #line 397 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n");

            
            #line 404 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
 if (canBulkAssignment || canDelete || canShowDevices || canExportCurrent || canExportAll)
{

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"actionBar\"");

WriteLiteral(">\r\n");

            
            #line 407 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
        
            
            #line default
            #line hidden
            
            #line 407 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
         if (canExportCurrent)
        {
            
            
            #line default
            #line hidden
            
            #line 409 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
       Write(Html.ActionLinkButton("Export Current Assignments", MVC.Config.DeviceFlag.Export(null, Model.DeviceFlag.Id, true), "Config_DeviceFlags_Actions_ExportCurrent_Button"));

            
            #line default
            #line hidden
            
            #line 409 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                                                                                                                  
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 411 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
         if (canExportAll)
        {
            
            
            #line default
            #line hidden
            
            #line 413 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
       Write(Html.ActionLinkButton("Export All Assignments", MVC.Config.DeviceFlag.Export(null, Model.DeviceFlag.Id, false), "Config_DeviceFlags_Actions_ExportAll_Button"));

            
            #line default
            #line hidden
            
            #line 413 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                                                                                                           
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 415 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
         if (canBulkAssignment)
        {

            
            #line default
            #line hidden
WriteLiteral("            <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" id=\"Config_DeviceFlags_BulkAssign_Button\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(">Bulk Assign Devices</a>\r\n");

WriteLiteral("            <div");

WriteLiteral(" id=\"Config_DeviceFlags_BulkAssign_ModeDialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Bulk Assign Device Mode\"");

WriteLiteral(">\r\n                <p>\r\n                    Select the mode used to assign device" +
"s:\r\n                </p>\r\n                <div>\r\n                    <div");

WriteLiteral(" class=\"add\"");

WriteLiteral(">\r\n                        <h5><i");

WriteLiteral(" class=\"fa fa-plus fa-fw\"");

WriteLiteral(@"></i>Add</h5>
                        <p>
                            Specified devices will have this flag <strong>added</strong>. Devices who already have this flag will be skipped.
                        </p>
                    </div>
                    <div");

WriteLiteral(" class=\"override\"");

WriteLiteral(">\r\n                        <h5><i");

WriteLiteral(" class=\"fa fa-repeat fa-fw\"");

WriteLiteral(@"></i>Override</h5>
                        <p>
                            Specified devices will have this flag <strong>added</strong>. Specified devices which already have this flag will be skipped.
                            Devices who already have this flag but are not specified will have the flag <strong>removed</strong>.
                        </p>
                    </div>
                </div>
            </div>
");

WriteLiteral("            <div");

WriteLiteral(" id=\"Config_DeviceFlags_BulkAssign_AssignDialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Bulk Assign Devices\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"brief\"");

WriteLiteral(@">
                    <div>
                        Enter multiple <strong>Device Serial Numbers</strong> separated by <code>&lt;new line&gt;</code>, commas (<code>,</code>) or semicolons (<code>;</code>).
                    </div>
                </div>
                <div");

WriteLiteral(" class=\"loading\"");

WriteLiteral(">\r\n                    <h4><i");

WriteLiteral(" class=\"fa fa-lg fa-cog fa-spin\"");

WriteLiteral(" title=\"Please Wait\"");

WriteLiteral("></i>Loading current assignments...</h4>\r\n                </div>\r\n               " +
" <form");

WriteLiteral(" action=\"#\"");

WriteLiteral(" method=\"post\"");

WriteLiteral(" data-overrideaction=\"");

            
            #line 447 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                Write(Url.Action(MVC.API.DeviceFlag.BulkAssignDevices(Model.DeviceFlag.Id, true)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-addaction=\"");

            
            #line 447 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                                                                                                Write(Url.Action(MVC.API.DeviceFlag.BulkAssignDevices(Model.DeviceFlag.Id, false)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 448 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <textarea");

WriteLiteral(" id=\"Config_DeviceFlags_BulkAssign_AssignDialog_DeviceSerialNumbers\"");

WriteLiteral(" name=\"DeviceSerialNumbers\"");

WriteLiteral("></textarea>\r\n                    <h4>Comments:</h4>\r\n                    <textar" +
"ea");

WriteLiteral(" id=\"Config_DeviceFlags_BulkAssign_AssignDialog_Comments\"");

WriteLiteral(" name=\"Comments\"");

WriteLiteral("></textarea>\r\n                </form>\r\n            </div>\r\n");

WriteLiteral("            <script>\r\n                $(function () {\r\n                    var mo" +
"deDialog, assignDialog, assignDeviceSerialNumbers;\r\n\r\n                    functi" +
"on showModeDialog() {\r\n                        if (!modeDialog) {\r\n             " +
"               modeDialog = $(\'#Config_DeviceFlags_BulkAssign_ModeDialog\').dialo" +
"g({\r\n                                resizable: false,\r\n                        " +
"        modal: true,\r\n                                autoOpen: false,\r\n        " +
"                        width: 400,\r\n                                buttons: {\r" +
"\n                                    Cancel: function () {\r\n                    " +
"                    $(this).dialog(\'close\');\r\n                                  " +
"  }\r\n                                }\r\n                            });\r\n\r\n     " +
"                       modeDialog.find(\'.add\').click(function () {\r\n            " +
"                    modeDialog.dialog(\'close\');\r\n                               " +
" showAssignDialog(\'Add\');\r\n                            });\r\n                    " +
"        modeDialog.find(\'.override\').click(function () {\r\n                      " +
"          modeDialog.dialog(\'close\');\r\n                                showAssig" +
"nDialog(\'Override\');\r\n                            });\r\n                        }" +
"\r\n                        modeDialog.dialog(\'open\');\r\n                    }\r\n   " +
"                 function showAssignDialog(mode) {\r\n                        if (" +
"!assignDialog) {\r\n                            assignDialog = $(\'#Config_DeviceFl" +
"ags_BulkAssign_AssignDialog\').dialog({\r\n                                resizabl" +
"e: false,\r\n                                modal: true,\r\n                       " +
"         autoOpen: false,\r\n                                width: 460\r\n         " +
"                   });\r\n\r\n                            assignDeviceSerialNumbers " +
"= $(\'#Config_DeviceFlags_BulkAssign_AssignDialog_DeviceSerialNumbers\');\r\n       " +
"                 }\r\n\r\n                        assignDialog.removeClass(\'loading\'" +
");\r\n\r\n                        var buttons = {};\r\n                        buttons" +
"[mode + \" Device Flags\"] = function () {\r\n                            $(this).fi" +
"nd(\'form\').submit();\r\n                            $(this).dialog(\"disable\");\r\n  " +
"                      }\r\n                        buttons[\'Cancel\'] = function ()" +
" {\r\n                            $(this).dialog(\'close\');\r\n                      " +
"  }\r\n                        assignDialog.dialog(\'option\', \'buttons\', buttons);\r" +
"\n                        assignDialog.dialog(\'option\', \'title\', \'Bulk Assign Dev" +
"ices: \' + mode);\r\n\r\n                        const $form = assignDeviceSerialNumb" +
"ers.closest(\'form\');\r\n                        if (mode == \"Override\") {\r\n       " +
"                     $form.attr(\'action\', $form.attr(\'data-overrideaction\'));\r\n\r" +
"\n                            assignDialog.addClass(\'loading\');\r\n                " +
"            $.getJSON(\'");

            
            #line 513 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                  Write(Url.Action(MVC.API.DeviceFlag.AssignedDevices(Model.DeviceFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral(@"', function (response, result) {
                                assignDialog.removeClass('loading');

                                if (result != 'success') {
                                    alert('Unable to load current assignments:\n' + response);
                                    assignDialog.dialog('close');
                                } else {
                                    if (!!response) {
                                        assignDeviceSerialNumbers.val(response.join('\n'));
                                    } else {
                                        assignDeviceSerialNumbers.val('');
                                    }
                                }
                            });
                        }
                        else // Assume Add
                        {
                            $form.attr('action', $form.attr('data-addaction'));
                        }

                        assignDialog.dialog('open');
                    }

                    $('#Config_DeviceFlags_BulkAssign_Button').click(function () {
                        showModeDialog();
                        return false;
                    });
                });
            </script>
");

            
            #line 542 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 543 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
         if (canDelete)
        {

            
            #line default
            #line hidden
WriteLiteral("            <button");

WriteLiteral(" id=\"Config_DeviceFlags_Actions_Delete_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(">Delete</button>\r\n");

WriteLiteral("            <div");

WriteLiteral(" id=\"Config_DeviceFlags_Actions_Delete_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Delete this Device Flag?\"");

WriteLiteral(">\r\n");

            
            #line 547 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 547 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                 using (Html.BeginForm(MVC.API.DeviceFlag.Delete(Model.DeviceFlag.Id, true)))
                {
                    
            
            #line default
            #line hidden
            
            #line 549 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 549 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                            
                }

            
            #line default
            #line hidden
WriteLiteral("                <p>\r\n                    <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg warning\"");

WriteLiteral("></i>\r\n                    This item will be permanently deleted and cannot be re" +
"covered.<br />\r\n                    <br />\r\n");

            
            #line 555 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 555 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                     if (Model.CurrentAssignmentCount > 0)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <strong>");

            
            #line 557 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                           Write(Model.CurrentAssignmentCount);

            
            #line default
            #line hidden
WriteLiteral(" device");

            
            #line 557 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                Write(Model.CurrentAssignmentCount != 1 ? "s are" : " is");

            
            #line default
            #line hidden
WriteLiteral(" currently assigned</strong>\r\n");

WriteLiteral("                        <br />\r\n");

WriteLiteral("                        <br />\r\n");

            
            #line 560 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    Are you sure?\r\n                </p>\r\n            </div>\r\n");

WriteLiteral("            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                $(function () {
                    let buttonDialog = null;
                    $('#Config_DeviceFlags_Actions_Delete_Button').on('click', function () {
                        const $button = $(this);
                        if (!buttonDialog) {
                            buttonDialog = $('#Config_DeviceFlags_Actions_Delete_Dialog').dialog({
                                resizable: false,
                                modal: true,
                                autoOpen: false,
                                buttons: {
                                    ""Delete"": function () {
                                        $(this)
                                            .dialog(""option"", ""buttons"", null)
                                            .find('form').trigger('submit');
                                    },
                                    Cancel: function () {
                                        $(this).dialog(""close"");
                                    }
                                }
                            });
                        }
                        buttonDialog.dialog('open');
                    });
                });
            </script>
");

            
            #line 590 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 591 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
         if (canShowDevices)
        {
            
            
            #line default
            #line hidden
            
            #line 593 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
       Write(Html.ActionLinkButton(string.Format("Show {0} device{1}", Model.CurrentAssignmentCount, (Model.CurrentAssignmentCount == 1 ? null : "s")), MVC.Search.Query(Model.DeviceFlag.Id.ToString(), "DeviceFlag"), "Config_DeviceFlags_Actions_ShowDevices_Button"));

            
            #line default
            #line hidden
            
            #line 593 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
                                                                                                                                                                                                                                                                        
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n");

            
            #line 596 "..\..\Areas\Config\Views\DeviceFlag\Show.cshtml"
}

            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
