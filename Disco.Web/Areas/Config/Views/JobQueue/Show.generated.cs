#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Areas.Config.Views.JobQueue
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 2 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
    using Disco.Services.Jobs.JobQueues;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Config/Views/JobQueue/Show.cshtml")]
    public partial class Show : Disco.Services.Web.WebViewPage<Disco.Web.Areas.Config.Models.JobQueue.ShowModel>
    {
        public Show()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
  
    Authorization.Require(Claims.Config.JobQueue.Show);

    ViewBag.Title = Html.ToBreadcrumb("Configuration", MVC.Config.Config.Index(), "Job Queues", MVC.Config.JobQueue.Index(null), Model.Token.JobQueue.ToString());

    var canConfig = Authorization.Has(Claims.Config.JobQueue.Configure);
    var canDelete = (Authorization.Has(Claims.Config.JobQueue.Delete) && Model.CanDelete);
    var canShowJobs = Model.OpenJobCount > 0 && Authorization.Has(Claims.Job.Lists.JobQueueLists);

    Html.BundleDeferred("~/ClientScripts/Modules/Disco-PropertyChangeHelpers");

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"Config_JobQueues_Show\"");

WriteLiteral(" class=\"form\"");

WriteLiteral(" style=\"width: 550px\"");

WriteLiteral(">\r\n    <table>\r\n        <tr>\r\n            <th");

WriteLiteral(" style=\"width: 150px\"");

WriteLiteral(">\r\n                Id:\r\n            </th>\r\n            <td>\r\n");

WriteLiteral("                ");

            
            #line 21 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
           Write(Html.DisplayFor(model => model.Token.JobQueue.Id));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n             " +
"   Name:\r\n            </th>\r\n            <td>\r\n");

            
            #line 29 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 29 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (canConfig)
                {
            
            #line default
            #line hidden
            
            #line 30 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
            Write(Html.EditorFor(model => model.Token.JobQueue.Name));

            
            #line default
            #line hidden
            
            #line 30 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                    
                
            
            #line default
            #line hidden
            
            #line 31 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
           Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 31 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                       
                
            
            #line default
            #line hidden
            
            #line 32 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
           Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 32 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                         

            
            #line default
            #line hidden
WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                    $(function () {\r\n                        document.DiscoFun" +
"ctions.PropertyChangeHelper(\r\n                            $(\'#Token_JobQueue_Nam" +
"e\'),\r\n                            \'Invalid Name\',\r\n                            \'" +
"");

            
            #line 38 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                         Write(Url.Action(MVC.API.JobQueue.UpdateName(Model.Token.JobQueue.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                            \'QueueName\'\r\n                        );\r\n        " +
"            });\r\n                </script>\r\n");

            
            #line 43 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
            }
            else
            {
                
            
            #line default
            #line hidden
            
            #line 46 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
           Write(Model.Token.JobQueue.Name);

            
            #line default
            #line hidden
            
            #line 46 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                          
            }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Description:\r\n            </th>\r\n            <td>\r\n");

            
            #line 55 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 55 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (canConfig)
                {
            
            #line default
            #line hidden
            
            #line 56 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
            Write(Html.EditorFor(model => model.Token.JobQueue.Description));

            
            #line default
            #line hidden
            
            #line 56 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                           
                
            
            #line default
            #line hidden
            
            #line 57 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
           Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 57 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                       
                
            
            #line default
            #line hidden
            
            #line 58 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
           Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 58 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                         

            
            #line default
            #line hidden
WriteLiteral("                <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                $(function () {\r\n                    document.DiscoFunctions.P" +
"ropertyChangeHelper(\r\n                        $(\'#Token_JobQueue_Description\'),\r" +
"\n                        \'Invalid Description\',\r\n                        \'");

            
            #line 64 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                     Write(Url.Action(MVC.API.JobQueue.UpdateDescription(Model.Token.JobQueue.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                        \'Description\'\r\n                    );\r\n              " +
"  });\r\n                </script>\r\n");

            
            #line 69 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
            }
            else
            {

            
            #line default
            #line hidden
WriteLiteral("                <pre>");

            
            #line 72 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                      if (string.IsNullOrEmpty(Model.Token.JobQueue.Description))
                     {

            
            #line default
            #line hidden
WriteLiteral("                    ");

WriteLiteral("&lt;None&gt;");

WriteLiteral("\r\n");

            
            #line 75 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                     }
                     else
                     {
                        
            
            #line default
            #line hidden
            
            #line 78 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                   Write(Model.Token.JobQueue.Description.ToHtmlComment());

            
            #line default
            #line hidden
            
            #line 78 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                         
                     }

            
            #line default
            #line hidden
WriteLiteral("                    </pre>\r\n");

            
            #line 81 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Statistics:\r\n            </th>\r\n            <td>\r\n                <div><strong>" +
"");

            
            #line 89 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                        Write(Model.OpenJobCount);

            
            #line default
            #line hidden
WriteLiteral(" job");

            
            #line 89 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                Write(Model.OpenJobCount != 1 ? "s" : null);

            
            #line default
            #line hidden
WriteLiteral(" open</strong></div>\r\n                <div>");

            
            #line 90 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                Write(Model.TotalJobCount);

            
            #line default
            #line hidden
WriteLiteral(" total job");

            
            #line 90 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                               Write(Model.TotalJobCount != 1 ? "s" : null);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n       " +
"         Icon:\r\n            </th>\r\n            <td>\r\n                <i");

WriteLiteral(" id=\"Config_JobQueues_Icon\"");

WriteLiteral(" data-icon=\"");

            
            #line 98 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                     Write(Model.Token.JobQueue.Icon);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-colour=\"");

            
            #line 98 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                Write(Model.Token.JobQueue.IconColour);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 3657), Tuple.Create("\"", 3742)
, Tuple.Create(Tuple.Create("", 3665), Tuple.Create("fa", 3665), true)
, Tuple.Create(Tuple.Create(" ", 3667), Tuple.Create("fa-", 3668), true)
            
            #line 98 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                      , Tuple.Create(Tuple.Create("", 3671), Tuple.Create<System.Object, System.Int32>(Model.Token.JobQueue.Icon
            
            #line default
            #line hidden
, 3671), false)
, Tuple.Create(Tuple.Create(" ", 3699), Tuple.Create("fa-4x", 3700), true)
, Tuple.Create(Tuple.Create(" ", 3705), Tuple.Create("d-", 3706), true)
            
            #line 98 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                           , Tuple.Create(Tuple.Create("", 3708), Tuple.Create<System.Object, System.Int32>(Model.Token.JobQueue.IconColour
            
            #line default
            #line hidden
, 3708), false)
);

WriteLiteral("></i>\r\n");

            
            #line 99 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 99 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (canConfig)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div>\r\n                        <a");

WriteLiteral(" id=\"Config_JobQueues_Icon_Update\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update</a>\r\n                        <div");

WriteLiteral(" id=\"Config_JobQueues_Icon_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Job Queue Icon\"");

WriteLiteral(">\r\n");

            
            #line 104 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 104 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                             using (Html.BeginForm(MVC.API.JobQueue.UpdateIconAndColour(id: Model.Token.JobQueue.Id, redirect: true)))
                            {
                                
            
            #line default
            #line hidden
            
            #line 106 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 106 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                        

            
            #line default
            #line hidden
WriteLiteral("                                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"icon\"");

WriteLiteral(" />\r\n");

WriteLiteral("                                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"iconColour\"");

WriteLiteral(" />\r\n");

            
            #line 109 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <div>\r\n                                <div");

WriteLiteral(" class=\"colours\"");

WriteLiteral(">\r\n");

            
            #line 112 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 112 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                     foreach (var colour in Model.ThemeColours)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <i");

WriteLiteral(" data-colour=\"");

            
            #line 114 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                    Write(colour.Key);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 4722), Tuple.Create("\"", 4758)
, Tuple.Create(Tuple.Create("", 4730), Tuple.Create("fa", 4730), true)
, Tuple.Create(Tuple.Create(" ", 4732), Tuple.Create("fa-square", 4733), true)
, Tuple.Create(Tuple.Create(" ", 4742), Tuple.Create("d-", 4743), true)
            
            #line 114 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
              , Tuple.Create(Tuple.Create("", 4745), Tuple.Create<System.Object, System.Int32>(colour.Key
            
            #line default
            #line hidden
, 4745), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 4759), Tuple.Create("\"", 4780)
            
            #line 114 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                   , Tuple.Create(Tuple.Create("", 4767), Tuple.Create<System.Object, System.Int32>(colour.Value
            
            #line default
            #line hidden
, 4767), false)
);

WriteLiteral("></i>\r\n");

            
            #line 115 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n                                <div");

WriteLiteral(" class=\"icons\"");

WriteLiteral(">\r\n");

            
            #line 118 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 118 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                     foreach (var icon in Model.Icons)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <i");

WriteLiteral(" data-icon=\"");

            
            #line 120 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                  Write(icon.Key);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 5097), Tuple.Create("\"", 5122)
, Tuple.Create(Tuple.Create("", 5105), Tuple.Create("fa", 5105), true)
, Tuple.Create(Tuple.Create(" ", 5107), Tuple.Create("fa-", 5108), true)
            
            #line 120 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
 , Tuple.Create(Tuple.Create("", 5111), Tuple.Create<System.Object, System.Int32>(icon.Key
            
            #line default
            #line hidden
, 5111), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 5123), Tuple.Create("\"", 5142)
            
            #line 120 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                    , Tuple.Create(Tuple.Create("", 5131), Tuple.Create<System.Object, System.Int32>(icon.Value
            
            #line default
            #line hidden
, 5131), false)
);

WriteLiteral("></i>\r\n");

            
            #line 121 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n                            </div>\r\n     " +
"                   </div>\r\n                        <script>\r\n                   " +
"         (function () {\r\n                                var dialog, icon, colou" +
"rs, icons;\r\n\r\n                                function showDialog() {\r\n         " +
"                           if (!dialog) {\r\n                                     " +
"   dialog = $(\'#Config_JobQueues_Icon_Update_Dialog\').dialog({\r\n                " +
"                            resizable: false,\r\n                                 " +
"           modal: true,\r\n                                            autoOpen: f" +
"alse,\r\n                                            width: 1000,\r\n               " +
"                             buttons: {\r\n                                       " +
"         \"Save\": save,\r\n                                                Cancel: " +
"cancel\r\n                                            }\r\n                         " +
"               });\r\n\r\n                                        colours = dialog.f" +
"ind(\'.colours\');\r\n                                        icons = dialog.find(\'." +
"icons\');\r\n\r\n                                        colours.on(\'click\', \'i\', sel" +
"ectColour);\r\n                                        icons.on(\'click\', \'i\', sele" +
"ctIcon);\r\n                                    }\r\n\r\n                             " +
"       colours.find(\'i[data-colour=\"\' + icon.attr(\'data-colour\') + \'\"]\').each(se" +
"lectColour);\r\n                                    icons.find(\'i[data-icon=\"\' + i" +
"con.attr(\'data-icon\') + \'\"]\').each(selectIcon);\r\n\r\n                             " +
"       dialog.dialog(\'open\');\r\n\r\n                                    return fals" +
"e;\r\n                                }\r\n\r\n                                functio" +
"n selectColour() {\r\n                                    var $this = $(this),\r\n  " +
"                                      colourCode = $this.attr(\'data-colour\'),\r\n " +
"                                       previousColourCode = icons.attr(\'data-col" +
"our\');\r\n\r\n\r\n                                    colours.find(\'i\').removeClass(\'s" +
"elected fa-check-square\').addClass(\'fa-square\');\r\n                              " +
"      $this.removeClass(\'fa-square\').addClass(\'fa-check-square selected\');\r\n\r\n  " +
"                                  if (previousColourCode)\r\n                     " +
"                   icons.removeClass(\'d-\' + previousColourCode);\r\n              " +
"                      icons.attr(\'data-colour\', colourCode)\r\n                   " +
"                 icons.addClass(\'d-\' + colourCode);\r\n                           " +
"     }\r\n                                function selectIcon() {\r\n               " +
"                     var $this = $(this),\r\n                                     " +
"   iconCode = $this.attr(\'data-icon\');\r\n\r\n                                    ic" +
"ons.find(\'i\').removeClass(\'selected\');\r\n                                    $thi" +
"s.addClass(\'selected\');\r\n                                }\r\n\r\n                  " +
"              function save() {\r\n                                    const $form" +
" = dialog.find(\'form\');\r\n                                    $form.find(\'input[n" +
"ame=\"icon\"]\').val(icons.find(\'i.selected\').attr(\'data-icon\'));\r\n                " +
"                    $form.find(\'input[name=\"iconColour\"]\').val(colours.find(\'i.s" +
"elected\').attr(\'data-colour\'));\r\n                                    $form.trigg" +
"er(\'submit\');\r\n                                    dialog.dialog(\"option\", \"butt" +
"ons\", null);\r\n                                }\r\n\r\n                             " +
"   function cancel() {\r\n                                    $(this).dialog(\"clos" +
"e\");\r\n                                }\r\n\r\n                                $(fun" +
"ction () {\r\n                                    icon = $(\'#Config_JobQueues_Icon" +
"\');\r\n                                    $(\'#Config_JobQueues_Icon_Update\').clic" +
"k(showDialog);\r\n                                });\r\n                           " +
" }());\r\n                        </script>\r\n                    </div>\r\n");

            
            #line 198 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Priority:\r\n            </th>\r\n            <td>\r\n");

            
            #line 206 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 206 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (canConfig)
                {
                    var priorityValue = Model.Token.JobQueue.Priority.ToString();
                    var priorityItems = Enum.GetNames(typeof(JobQueuePriority)).Select(i => new SelectListItem() { Text = i, Value = i, Selected = (i == priorityValue) }).ToList();

            
            #line default
            #line hidden
WriteLiteral("                    <i");

WriteAttribute("class", Tuple.Create(" class=\"", 9669), Tuple.Create("\"", 9717)
, Tuple.Create(Tuple.Create("", 9677), Tuple.Create("fa", 9677), true)
, Tuple.Create(Tuple.Create(" ", 9679), Tuple.Create("d-priority-", 9680), true)
            
            #line 210 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 9691), Tuple.Create<System.Object, System.Int32>(priorityValue.ToLower()
            
            #line default
            #line hidden
, 9691), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 9718), Tuple.Create("\"", 9751)
            
            #line 210 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 9726), Tuple.Create<System.Object, System.Int32>(priorityValue
            
            #line default
            #line hidden
, 9726), false)
, Tuple.Create(Tuple.Create(" ", 9742), Tuple.Create("Priority", 9743), true)
);

WriteLiteral("></i>\r\n");

            
            #line 211 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 211 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(Html.DropDownListFor(m => m.Token.JobQueue.Priority, priorityItems));

            
            #line default
            #line hidden
            
            #line 211 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                        
                    
            
            #line default
            #line hidden
            
            #line 212 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 212 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 213 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 213 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                    $(function () {
                        var element = $('#Token_JobQueue_Priority');

                        document.DiscoFunctions.PropertyChangeHelper(
                            element,
                            'Invalid Priority',
                            '");

            
            #line 221 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                         Write(Url.Action(MVC.API.JobQueue.UpdatePriority(Model.Token.JobQueue.Id)));

            
            #line default
            #line hidden
WriteLiteral(@"',
                            'Priority'
                        );

                        element.change(function () {
                            var icon = element.closest('td').find('i').first();
                            icon[0].className = '';
                            icon.addClass('fa d-priority-' + element.val().toLowerCase()).attr('title', element.val() + ' Priority');
                        });
                    });
                    </script>
");

            
            #line 232 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                }
                else
                {
                    
            
            #line default
            #line hidden
            
            #line 235 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(Model.Token.JobQueue.Priority.ToString());

            
            #line default
            #line hidden
            
            #line 235 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                             
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Default SLA:\r\n            </th>\r\n            <td>\r\n");

            
            #line 244 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 244 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (canConfig)
                {
                    var slaOptions = JobQueueService.SlaOptions.Select(o => new SelectListItem() { Text = o.Value, Value = o.Key.ToString() }).ToList();

                    if (this.Model.Token.JobQueue.DefaultSLAExpiry.HasValue)
                    {
                        var slaValue = this.Model.Token.JobQueue.DefaultSLAExpiry.Value;
                        if (JobQueueService.SlaOptions.Where(o => o.Key == slaValue).Count() == 0)
                        {
                            string slaValueText;
                            if (slaValue % (60 * 24 * 7 * 4) == 0)
                            { slaValueText = string.Format("{0} months", slaValue / (60 * 24 * 7 * 4)); }
                            else if (slaValue % (60 * 24 * 7) == 0)
                            { slaValueText = string.Format("{0} weeks", slaValue / (60 * 24 * 7)); }
                            else if (slaValue % (60 * 24) == 0)
                            { slaValueText = string.Format("{0} days", slaValue / (60 * 24)); }
                            else if (slaValue % (60) == 0)
                            { slaValueText = string.Format("{0} hours", slaValue / 60); }
                            else
                            { slaValueText = string.Format("{0} minutes", slaValue); }

                            slaOptions.Insert(0, new SelectListItem() { Text = string.Format("{0} <Custom>", slaValueText), Value = slaValue.ToString() });
                        }
                    }
                    
            
            #line default
            #line hidden
            
            #line 268 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(Html.DropDownListFor(m => m.Token.JobQueue.DefaultSLAExpiry, slaOptions));

            
            #line default
            #line hidden
            
            #line 268 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                             
                    
            
            #line default
            #line hidden
            
            #line 269 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 269 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 270 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 270 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n            $(function () {\r\n                document.DiscoFunctions.PropertyC" +
"hangeHelper(\r\n                    $(\'#Token_JobQueue_DefaultSLAExpiry\'),\r\n      " +
"              \'Invalid Default SLA\',\r\n                    \'");

            
            #line 276 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 Write(Url.Action(MVC.API.JobQueue.UpdateDefaultSLAExpiry(Model.Token.JobQueue.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                    \'DefaultSLAExpiry\'\r\n                );\r\n            });\r\n" +
"                    </script>\r\n");

            
            #line 281 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                }
                else
                {
                    if (this.Model.Token.JobQueue.DefaultSLAExpiry.HasValue)
                    {
                        var slaValue = this.Model.Token.JobQueue.DefaultSLAExpiry.Value;
                        var slaOption = JobQueueService.SlaOptions.Where(o => o.Key == slaValue).ToArray();
                        if (slaOption.Length > 0)
                        {
                            
            
            #line default
            #line hidden
            
            #line 290 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                       Write(slaOption[0].Value);

            
            #line default
            #line hidden
            
            #line 290 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                               
                        }
                        else
                        {

            
            #line default
            #line hidden
WriteLiteral("                            ");

WriteLiteral("&lt;None&gt;");

WriteLiteral("\r\n");

            
            #line 295 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                        }
                    }
                    else
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("&lt;None&gt;");

WriteLiteral("\r\n");

            
            #line 300 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>Member Groups/Use" +
"rs:</th>\r\n            <td>\r\n");

            
            #line 307 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 307 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (Model.Token.SubjectIds.Count == 0)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">None Associated</span>\r\n");

            
            #line 310 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                }
                else
                {

            
            #line default
            #line hidden
WriteLiteral("                    <ul");

WriteLiteral(" id=\"Config_JobQueues_Subjects\"");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n");

            
            #line 314 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 314 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                         foreach (var sg in Model.Subjects)
                        {
                            var displayName = sg.Id == sg.Name ? sg.Id : string.Format("{0} [{1}]", sg.Name, sg.Id);

            
            #line default
            #line hidden
WriteLiteral("                            <li");

WriteAttribute("class", Tuple.Create(" class=\"", 14773), Tuple.Create("\"", 14813)
            
            #line 317 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 14781), Tuple.Create<System.Object, System.Int32>(sg.IsGroup ? "group" : "user"
            
            #line default
            #line hidden
, 14781), false)
);

WriteLiteral(">\r\n");

            
            #line 318 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                
            
            #line default
            #line hidden
            
            #line 318 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                 if (sg.IsGroup)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <i");

WriteLiteral(" class=\"fa fa-users fa-lg\"");

WriteLiteral("></i>");

            
            #line 320 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                     
            
            #line default
            #line hidden
            
            #line 320 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                Write(displayName);

            
            #line default
            #line hidden
            
            #line 320 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                 
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <a");

WriteAttribute("href", Tuple.Create(" href=\"", 15131), Tuple.Create("\"", 15173)
            
            #line 324 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 15138), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.User.Show(sg.Id))
            
            #line default
            #line hidden
, 15138), false)
);

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-user fa-lg\"");

WriteLiteral("></i>");

            
            #line 324 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                             Write(displayName);

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n");

            
            #line 325 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </li>\r\n");

            
            #line 327 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </ul>\r\n");

            
            #line 329 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 330 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (canConfig)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div>\r\n                        <a");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update</a>\r\n                        <div");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Job Queue Member Groups/Users\"");

WriteLiteral(">\r\n");

            
            #line 335 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 335 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                             using (Html.BeginForm(MVC.API.JobQueue.UpdateSubjects(Model.Token.JobQueue.Id, null, true)))
                            {
                                
            
            #line default
            #line hidden
            
            #line 337 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 337 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                        

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update_Dialog_ListContainer\"");

WriteLiteral(">\r\n                                    <span");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update_Dialog_None\"");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">None Associated</span>\r\n                                    <ul");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update_Dialog_List\"");

WriteLiteral(" class=\"none\"");

WriteLiteral(">\r\n");

            
            #line 341 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 341 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                         foreach (var sg in Model.Subjects)
                                        {
                                            var displayName = sg.Id == sg.Name ? sg.Id : string.Format("{0} [{1}]", sg.Name, sg.Id);

            
            #line default
            #line hidden
WriteLiteral("                                            <li");

WriteAttribute("class", Tuple.Create(" class=\"", 16536), Tuple.Create("\"", 16576)
            
            #line 344 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 16544), Tuple.Create<System.Object, System.Int32>(sg.IsGroup ? "group" : "user"
            
            #line default
            #line hidden
, 16544), false)
);

WriteLiteral(" data-subjectid=\"");

            
            #line 344 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                    Write(sg.Id);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n                                                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"subjects\"");

WriteAttribute("value", Tuple.Create(" value=\"", 16688), Tuple.Create("\"", 16702)
            
            #line 345 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
           , Tuple.Create(Tuple.Create("", 16696), Tuple.Create<System.Object, System.Int32>(sg.Id
            
            #line default
            #line hidden
, 16696), false)
);

WriteLiteral(" />\r\n");

            
            #line 346 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 346 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                 if (sg.IsGroup)
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <i");

WriteLiteral(" class=\"fa fa-users fa-lg\"");

WriteLiteral("></i>");

            
            #line 348 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                     
            
            #line default
            #line hidden
            
            #line 348 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                Write(displayName);

            
            #line default
            #line hidden
            
            #line 348 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                 
                                                }
                                                else
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <i");

WriteLiteral(" class=\"fa fa-user fa-lg\"");

WriteLiteral("></i>");

            
            #line 352 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                    
            
            #line default
            #line hidden
            
            #line 352 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                               Write(displayName);

            
            #line default
            #line hidden
            
            #line 352 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                
                                                }
            
            #line default
            #line hidden
WriteLiteral("<i");

WriteLiteral(" class=\"fa fa-times-circle remove\"");

WriteLiteral("></i>\r\n                                            </li>\r\n");

            
            #line 355 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </ul>\r\n                                </div>" +
"\r\n");

            
            #line 358 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <div");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update_Dialog_AddContainer\"");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update_Dialog_TextAdd\"");

WriteLiteral(" />\r\n                                <a");

WriteLiteral(" id=\"Config_JobQueues_Subjects_Update_Dialog_Add\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(@">Add</a>
                            </div>
                        </div>
                        <script>
                    (function () {
                        var dialog, textAdd, list, originalList, noSubjects, form;

                        function showDialog() {
                            if (!dialog) {
                                dialog = $('#Config_JobQueues_Subjects_Update_Dialog').dialog({
                                    resizable: false,
                                    modal: true,
                                    autoOpen: false,
                                    width: 350,
                                    buttons: {
                                        ""Save Changes"": saveChanges,
                                        Cancel: cancel
                                    }
                                });

                                dialog.on('click', '.remove', remove);

                                list = $('#Config_JobQueues_Subjects_Update_Dialog_List');
                                originalList = list.html();
                                noSubjects = $('#Config_JobQueues_Subjects_Update_Dialog_None');

                                textAdd = $('#Config_JobQueues_Subjects_Update_Dialog_TextAdd');

                                textAdd.watermark('Search Subjects')
                                    .autocomplete({
                                        source: '");

            
            #line 391 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                             Write(Url.Action(MVC.API.System.SearchSubjects()));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                        minLength: 2,\r\n                      " +
"                  focus: function (e, ui) {\r\n                                   " +
"         textAdd.val(ui.item.Id);\r\n                                            r" +
"eturn false;\r\n                                        },\r\n                      " +
"                  select: function (e, ui) {\r\n                                  " +
"          textAdd.val(ui.item.Id).blur();\r\n                                     " +
"       return false;\r\n                                        }\r\n               " +
"                     }).data(\'ui-autocomplete\')._renderItem = function (ul, item" +
") {\r\n                                        return $(\"<li></li>\")\r\n            " +
"                                .data(\"item.autocomplete\", item)\r\n              " +
"                              .append(\"<a><strong>\" + item.Name + \"</strong><br>" +
"\" + item.Id + \" (\" + item.Type + \")</a>\")\r\n                                     " +
"       .appendTo(ul);\r\n                                    };\r\n\r\n               " +
"                 $(\'#Config_JobQueues_Subjects_Update_Dialog_Add\').click(add);\r\n" +
"                            }\r\n\r\n                            dialog.dialog(\'open" +
"\');\r\n\r\n                            updateNoSubjects();\r\n                        " +
"    return false;\r\n                        }\r\n\r\n                        function" +
" cancel() {\r\n                            $(this).dialog(\"close\");\r\n\r\n           " +
"                 list.html(originalList);\r\n                        }\r\n\r\n        " +
"                function remove() {\r\n                            $(this).closest" +
"(\'li\').remove();\r\n\r\n                            updateNoSubjects();\r\n\r\n         " +
"                   return false;\r\n                        }\r\n\r\n                 " +
"       function add() {\r\n\r\n                            var id = textAdd.val();\r\n" +
"\r\n                            $.ajax({\r\n                                url: \'");

            
            #line 436 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                 Write(Url.Action(MVC.API.System.Subject()));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                method: \'post\',\r\n                            " +
"    data: { Id: id }\r\n                            }).done(function (response) {\r" +
"\n                                if (response) {\r\n                              " +
"      if (response.IsGroup || response.IsUserAccount) {\r\n                       " +
"                 if (list.find(\'li[data-subjectid=\"\' + response.Id + \'\"]\').lengt" +
"h == 0) {\r\n\r\n                                            var liIcon = $(\'<i>\').a" +
"ddClass(\'fa fa-lg\');\r\n                                            if (response.T" +
"ype === \'user\')\r\n                                                liIcon.addClass" +
"(\'fa-user\');\r\n                                            else\r\n                " +
"                                liIcon.addClass(\'fa-users\');\r\n\r\n                " +
"                            var li = $(\'<li>\')\r\n                                " +
"                .append($(\'<input>\').attr({ type: \'hidden\', name: \'subjects\', va" +
"lue: response.Id }))\r\n                                                .append(li" +
"Icon)\r\n                                                .append($(\'<span>\').text(" +
"response.Id == response.Name ? response.Id : response.Name + \' [\' + response.Id " +
"+ \']\'))\r\n                                                .append($(\'<i>\').addCla" +
"ss(\'fa fa-times-circle remove\'))\r\n                                              " +
"  .addClass(response.Type)\r\n                                                .att" +
"r(\'data-subjectid\', response.Id)\r\n                                              " +
"  .attr(\'data-subjectstatus\', \'new\');\r\n\r\n                                       " +
"     list.append(li);\r\n\r\n                                            updateNoSub" +
"jects();\r\n                                        } else {\r\n                    " +
"                        alert(\'That subject has already been added\');\r\n         " +
"                               }\r\n                                    } else {\r\n" +
"                                        alert(response.Name + \' [\' + response.Id" +
" + \'] is a \' + response.Type + \'. Only users and groups can be added.\');\r\n      " +
"                              }\r\n                                } else {\r\n     " +
"                               alert(\'Unknown Id\');\r\n                           " +
"     }\r\n                            }).fail(function (jqXHR, textStatus, errorTh" +
"rown) {\r\n                                alert(\'Error: \' + errorThrown);\r\n      " +
"                      });\r\n\r\n                            return false;\r\n        " +
"                }\r\n\r\n                        function updateNoSubjects() {\r\n    " +
"                        if (list.find(\'li:visible\').length > 0)\r\n               " +
"                 noSubjects.hide();\r\n                            else\r\n         " +
"                       noSubjects.show();\r\n                        }\r\n\r\n        " +
"                function saveChanges() {\r\n                            dialog.fin" +
"d(\'form\').trigger(\'submit\');\r\n                            dialog.dialog(\"option\"" +
", \"buttons\", null);\r\n                        }\r\n\r\n                        $(func" +
"tion () {\r\n                            $(\'#Config_JobQueues_Subjects_Update\').on" +
"(\'click\', showDialog);\r\n                        });\r\n\r\n                    })();" +
"\r\n                        </script>\r\n                    </div>\r\n");

            
            #line 497 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>Automatically Add" +
" Jobs:</th>\r\n            <td>\r\n                <div>\r\n");

            
            #line 504 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 504 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                     if (Model.Token.JobQueue.JobSubTypes.Count > 0)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <ul>\r\n");

            
            #line 507 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 507 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                             foreach (var jobType in Model.Token.JobQueue.JobSubTypes.GroupBy(jst => jst.JobType).OrderBy(jtg => jtg.Key.Description))
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <li>\r\n");

WriteLiteral("                                    ");

            
            #line 510 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                               Write(jobType.Key.Description);

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    <ul>\r\n");

            
            #line 512 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 512 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                         if (jobType.Count() == Model.JobTypes.FirstOrDefault(jt => jt.Id == jobType.Key.Id).JobSubTypes.Count)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <li><span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">[All Sub Types]</span></li>\r\n");

            
            #line 515 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                        }
                                        else
                                        {
                                            foreach (var jobSubType in jobType)
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <li>");

            
            #line 520 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                               Write(jobSubType.Description);

            
            #line default
            #line hidden
WriteLiteral("</li>\r\n");

            
            #line 521 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                            }
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </ul>\r\n                                </li>\r" +
"\n");

            
            #line 525 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </ul>\r\n");

            
            #line 527 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                    }
                    else
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral("&lt;None&gt;");

WriteLiteral("\r\n");

            
            #line 531 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n");

            
            #line 533 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 533 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 if (canConfig)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <a");

WriteLiteral(" id=\"Config_JobQueues_JobSubTypes_Update\"");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update</a>\r\n");

WriteLiteral("                    <div");

WriteLiteral(" id=\"Config_JobQueues_JobSubTypes_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Job Queue Automatic Types\"");

WriteLiteral(">\r\n");

            
            #line 537 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 537 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                         using (Html.BeginForm(MVC.API.JobQueue.UpdateJobSubTypes(Model.Token.JobQueue.Id, null, true)))
                        {
                            
            
            #line default
            #line hidden
            
            #line 539 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                       Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 539 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                    
                            var selectedTypes = Model.Token.JobQueue.JobSubTypes.Select(jst => jst.JobType).Distinct().ToList();
                            foreach (var jt in Model.JobTypes)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <div");

WriteAttribute("id", Tuple.Create(" id=\"", 26929), Tuple.Create("\"", 26951)
, Tuple.Create(Tuple.Create("", 26934), Tuple.Create("trJobType", 26934), true)
            
            #line 543 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 26943), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 26943), false)
);

WriteLiteral(" class=\"jobTypes\"");

WriteLiteral(">\r\n                                    <h4>\r\n                                    " +
"    <input");

WriteAttribute("id", Tuple.Create(" id=\"", 27060), Tuple.Create("\"", 27079)
, Tuple.Create(Tuple.Create("", 27065), Tuple.Create("Types_", 27065), true)
            
            #line 545 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 27071), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 27071), false)
);

WriteLiteral(" class=\"jobType\"");

WriteLiteral(" type=\"checkbox\"");

WriteAttribute("value", Tuple.Create(" value=\"", 27112), Tuple.Create("\"", 27128)
            
            #line 545 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                          , Tuple.Create(Tuple.Create("", 27120), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 27120), false)
);

WriteLiteral(" ");

            
            #line 545 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                                Write(selectedTypes.Contains(jt) ? "checked=\"checked\"" : null);

            
            #line default
            #line hidden
WriteLiteral(" /><label");

WriteAttribute("for", Tuple.Create(" for=\"", 27199), Tuple.Create("\"", 27219)
, Tuple.Create(Tuple.Create("", 27205), Tuple.Create("Types_", 27205), true)
            
            #line 545 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                                     , Tuple.Create(Tuple.Create("", 27211), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 27211), false)
);

WriteLiteral(">");

            
            #line 545 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                                                                                                                          Write(jt.Description);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                                    </h4>\r\n                            " +
"        <div");

WriteAttribute("id", Tuple.Create(" id=\"", 27329), Tuple.Create("\"", 27351)
, Tuple.Create(Tuple.Create("", 27334), Tuple.Create("SubTypes_", 27334), true)
            
            #line 547 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
, Tuple.Create(Tuple.Create("", 27343), Tuple.Create<System.Object, System.Int32>(jt.Id
            
            #line default
            #line hidden
, 27343), false)
);

WriteLiteral(" class=\"jobSubTypes\"");

WriteLiteral(">\r\n");

WriteLiteral("                                        ");

            
            #line 548 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                   Write(CommonHelpers.CheckboxBulkSelect(string.Format("CheckboxBulkSelect_{0}", jt.Id), "div"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                                        ");

            
            #line 549 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                   Write(CommonHelpers.CheckBoxList("JobSubTypes", jt.JobSubTypes.OrderBy(jst => jst.Description).ToSelectListItems(Model.Token.JobQueue.JobSubTypes), 2));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </div>\r\n                                </d" +
"iv>\r\n");

            
            #line 552 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                            }
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script>\r\n                        (function () {\r\n           " +
"                 var dialog;\r\n\r\n                            function showDialog(" +
") {\r\n                                if (!dialog) {\r\n                           " +
"         dialog = $(\'#Config_JobQueues_JobSubTypes_Update_Dialog\').dialog({\r\n   " +
"                                     resizable: false,\r\n                        " +
"                modal: true,\r\n                                        autoOpen: " +
"false,\r\n                                        width: 750,\r\n                   " +
"                     height: 560,\r\n                                        butto" +
"ns: {\r\n                                            \"Save Changes\": saveChanges,\r" +
"\n                                            Cancel: cancel\r\n                   " +
"                     }\r\n                                    });\r\n\r\n             " +
"                       dialog.find(\'.jobSubTypes\').hide();\r\n                    " +
"                dialog.on(\'change\', \'input.jobType\', function () {\r\n            " +
"                            var $this = $(this);\r\n                              " +
"          if ($this.is(\':checked\'))\r\n                                           " +
" $(\'#SubTypes_\' + $this.val()).slideDown(\'fast\');\r\n                             " +
"           else\r\n                                            $(\'#SubTypes_\' + $t" +
"his.val()).slideUp(\'fast\');\r\n                                    }).find(\'input." +
"jobType:checked\').each(function () {\r\n                                        $(" +
"\'#SubTypes_\' + $(this).val()).show();\r\n                                    });\r\n" +
"                                }\r\n\r\n                                dialog.dial" +
"og(\'open\');\r\n\r\n                                return false;\r\n                  " +
"          }\r\n\r\n                            function cancel() {\r\n                " +
"                dialog.dialog(\"disable\");\r\n                                dialo" +
"g.dialog(\"option\", \"buttons\", null);\r\n\r\n                                // Refre" +
"sh Page\r\n                                window.location.href = window.location." +
"href;\r\n                            }\r\n\r\n                            function sav" +
"eChanges() {\r\n                                var form = dialog.find(\'form\');\r\n\r" +
"\n                                $(\'input.jobType:unchecked\').each(function () {" +
"\r\n                                    $(\'#SubTypes_\' + $(this).val()).find(\'inpu" +
"t\').prop(\'checked\', false);\r\n                                });\r\n\r\n            " +
"                    form.submit();\r\n\r\n                                dialog.dia" +
"log(\"disable\");\r\n                                dialog.dialog(\"option\", \"button" +
"s\", null);\r\n                            }\r\n\r\n                            $(funct" +
"ion () {\r\n                                $(\'#Config_JobQueues_JobSubTypes_Updat" +
"e\').click(showDialog);\r\n                            });\r\n\r\n                     " +
"   })();\r\n                    </script>\r\n");

            
            #line 617 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                    <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                        <i");

WriteLiteral(" class=\"fa fa-info-circle\"");

WriteLiteral("></i>When jobs of these types are created, they will automatically be added into " +
"this queue.\r\n                    </p>\r\n                </div>\r\n            </td>" +
"\r\n        </tr>\r\n    </table>\r\n</div>\r\n");

            
            #line 627 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
 if (canDelete || canShowJobs)
{

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"actionBar\"");

WriteLiteral(">\r\n");

            
            #line 630 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
        
            
            #line default
            #line hidden
            
            #line 630 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
         if (canDelete)
        {

            
            #line default
            #line hidden
WriteLiteral("            <button");

WriteLiteral(" id=\"Config_JobQueues_Actions_Delete_Button\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(">Delete</button>\r\n");

WriteLiteral("            <div");

WriteLiteral(" id=\"Config_JobQueues_Actions_Delete_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Delete this Job Queue?\"");

WriteLiteral(">\r\n");

            
            #line 634 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 634 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                 using (Html.BeginForm(MVC.API.JobQueue.Delete(Model.Token.JobQueue.Id, true)))
                {
                    
            
            #line default
            #line hidden
            
            #line 636 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 636 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                            
                }

            
            #line default
            #line hidden
WriteLiteral("                <p>\r\n                    <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg warning\"");

WriteLiteral("></i>\r\n                    This item will be permanently deleted and cannot be re" +
"covered.<br />\r\n                    <br />\r\n                    Are you sure?\r\n " +
"               </p>\r\n            </div>\r\n");

WriteLiteral("            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                $(function () {
                    const $button = $('#Config_JobQueues_Actions_Delete_Button');
                    let $buttonDialog = null;
                    $button.on('click', function () {
                        if (!$buttonDialog) {
                            $buttonDialog = $('#Config_JobQueues_Actions_Delete_Dialog').dialog({
                                resizable: false,
                                modal: true,
                                autoOpen: false,
                                buttons: {
                                    ""Delete"": function () {
                                        var $this = $(this);
                                        $this.dialog(""option"", ""buttons"", null);
                                        $this.find('form').trigger('submit');
                                    },
                                    Cancel: function () {
                                        $(this).dialog(""close"");
                                    }
                                }
                            });
                        }

                        $buttonDialog.dialog('open');
                        return false;
                    });
                });
            </script>
");

            
            #line 673 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 674 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
         if (canShowJobs)
        {
            
            
            #line default
            #line hidden
            
            #line 676 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
       Write(Html.ActionLinkButton(string.Format("Show {0} job{1}", Model.OpenJobCount, (Model.OpenJobCount == 1 ? null : "s")), MVC.Job.Queue(Model.Token.JobQueue.Id), "Config_JobQueues_Actions_ShowJobs_Button"));

            
            #line default
            #line hidden
            
            #line 676 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
                                                                                                                                                                                                                    
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n");

            
            #line 679 "..\..\Areas\Config\Views\JobQueue\Show.cshtml"
}
            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
