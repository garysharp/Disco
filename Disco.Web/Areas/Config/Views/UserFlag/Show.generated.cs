#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disco.Web.Areas.Config.Views.UserFlag
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Disco;
    using Disco.Models.Repository;
    using Disco.Services;
    using Disco.Services.Authorization;
    
    #line 2 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
    using Disco.Services.Interop.ActiveDirectory;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
    using Disco.Services.Users.UserFlags;
    
    #line default
    #line hidden
    using Disco.Services.Web;
    using Disco.Web;
    
    #line 4 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
    using Disco.Web.Areas.Config.Models.Shared;
    
    #line default
    #line hidden
    using Disco.Web.Extensions;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Config/Views/UserFlag/Show.cshtml")]
    public partial class Show : Disco.Services.Web.WebViewPage<Disco.Web.Areas.Config.Models.UserFlag.ShowModel>
    {
        public Show()
        {
        }
        public override void Execute()
        {
            
            #line 5 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
  
    Authorization.Require(Claims.Config.UserFlag.Show);

    ViewBag.Title = Html.ToBreadcrumb("Configuration", MVC.Config.Config.Index(), "User Flags", MVC.Config.UserFlag.Index(null), Model.UserFlag.ToString());

    var canConfig = Authorization.Has(Claims.Config.UserFlag.Configure);
    var canDelete = Authorization.Has(Claims.Config.UserFlag.Delete);
    var canBulkAssignment = Authorization.HasAll(Claims.User.Actions.AddFlags, Claims.User.Actions.RemoveFlags, Claims.User.ShowFlagAssignments);
    var canShowUsers = Model.CurrentAssignmentCount > 0 && Authorization.HasAll(Claims.User.Search, Claims.User.ShowFlagAssignments);
    var canExportCurrent = Model.CurrentAssignmentCount > 0 && Authorization.Has(Claims.Config.UserFlag.Export);
    var canExportAll = Model.TotalAssignmentCount > 0 && Authorization.Has(Claims.Config.UserFlag.Export);

    var hideAdvanced =
        Model.Permission.IsDefault() &&
        Model.UserFlag.UserDevicesLinkedGroup == null &&
        Model.UserFlag.UsersLinkedGroup == null &&
        Model.UserFlag.OnAssignmentExpression == null &&
        Model.UserFlag.OnUnassignmentExpression == null;

    Html.BundleDeferred("~/ClientScripts/Modules/Disco-PropertyChangeHelpers");

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"Config_UserFlags_Show\"");

WriteAttribute("class", Tuple.Create(" class=\"", 1473), Tuple.Create("\"", 1532)
, Tuple.Create(Tuple.Create("", 1481), Tuple.Create("form", 1481), true)
            
            #line 26 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
, Tuple.Create(Tuple.Create("", 1485), Tuple.Create<System.Object, System.Int32>(hideAdvanced ? " Config_HideAdvanced" : null
            
            #line default
            #line hidden
, 1485), false)
);

WriteLiteral(" style=\"width: 550px\"");

WriteLiteral(">\r\n    <table>\r\n        <tr>\r\n            <th");

WriteLiteral(" style=\"width: 150px\"");

WriteLiteral(">\r\n                Id:\r\n            </th>\r\n            <td>\r\n");

WriteLiteral("                ");

            
            #line 33 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
           Write(Html.DisplayFor(model => model.UserFlag.Id));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n             " +
"   Name:\r\n            </th>\r\n            <td>\r\n");

            
            #line 41 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 41 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 if (canConfig)
                {
                    
            
            #line default
            #line hidden
            
            #line 43 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.EditorFor(model => model.UserFlag.Name));

            
            #line default
            #line hidden
            
            #line 43 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                 
                    
            
            #line default
            #line hidden
            
            #line 44 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 44 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 45 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 45 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n                        $(function () {\r\n                            document." +
"DiscoFunctions.PropertyChangeHelper(\r\n                                $(\'#UserFl" +
"ag_Name\'),\r\n                                \'Invalid Name\',\r\n                   " +
"             \'");

            
            #line 51 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                             Write(Url.Action(MVC.API.UserFlag.UpdateName(Model.UserFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                \'FlagName\'\r\n                            );\r\n " +
"                       });\r\n                    </script>\r\n");

            
            #line 56 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                }
                else
                {
                    
            
            #line default
            #line hidden
            
            #line 59 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Model.UserFlag.Name);

            
            #line default
            #line hidden
            
            #line 59 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                        
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Description:\r\n            </th>\r\n            <td>\r\n");

            
            #line 68 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 68 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 if (canConfig)
                {
                    
            
            #line default
            #line hidden
            
            #line 70 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.EditorFor(model => model.UserFlag.Description));

            
            #line default
            #line hidden
            
            #line 70 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                        
                    
            
            #line default
            #line hidden
            
            #line 71 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 71 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 72 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 72 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                        $(function () {
                            document.DiscoFunctions.PropertyChangeHelper(
                                $('#UserFlag_Description'),
                                'Invalid Description',
                                '");

            
            #line 78 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                             Write(Url.Action(MVC.API.UserFlag.UpdateDescription(Model.UserFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                \'Description\'\r\n                            );" +
"\r\n                        });\r\n                    </script>\r\n");

            
            #line 83 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                }
                else
                {

            
            #line default
            #line hidden
WriteLiteral("                    <pre>\r\n");

            
            #line 87 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 87 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                     if (string.IsNullOrEmpty(Model.UserFlag.Description))
                    {

            
            #line default
            #line hidden
WriteLiteral("                    ");

WriteLiteral("&lt;None&gt;");

WriteLiteral("\r\n");

            
            #line 90 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            
            #line 93 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                   Write(Model.UserFlag.Description.ToHtmlComment());

            
            #line default
            #line hidden
            
            #line 93 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                   
                    }

            
            #line default
            #line hidden
WriteLiteral("                    </pre>\r\n");

            
            #line 96 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n               " +
" Statistics:\r\n            </th>\r\n            <td>\r\n                <div><strong>" +
"");

            
            #line 104 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        Write(Model.CurrentAssignmentCount);

            
            #line default
            #line hidden
WriteLiteral(" user");

            
            #line 104 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                           Write(Model.CurrentAssignmentCount != 1 ? "s" : null);

            
            #line default
            #line hidden
WriteLiteral(" currently assigned</strong></div>\r\n                <div>");

            
            #line 105 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                Write(Model.TotalAssignmentCount);

            
            #line default
            #line hidden
WriteLiteral(" total user historical assignment");

            
            #line 105 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                             Write(Model.TotalAssignmentCount != 1 ? "s" : null);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>\r\n       " +
"         Icon:\r\n            </th>\r\n            <td>\r\n                <i");

WriteLiteral(" id=\"Config_UserFlags_Icon\"");

WriteLiteral(" data-icon=\"");

            
            #line 113 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                     Write(Model.UserFlag.Icon);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-colour=\"");

            
            #line 113 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                          Write(Model.UserFlag.IconColour);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 4697), Tuple.Create("\"", 4770)
, Tuple.Create(Tuple.Create("", 4705), Tuple.Create("fa", 4705), true)
, Tuple.Create(Tuple.Create(" ", 4707), Tuple.Create("fa-", 4708), true)
            
            #line 113 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                          , Tuple.Create(Tuple.Create("", 4711), Tuple.Create<System.Object, System.Int32>(Model.UserFlag.Icon
            
            #line default
            #line hidden
, 4711), false)
, Tuple.Create(Tuple.Create(" ", 4733), Tuple.Create("fa-4x", 4734), true)
, Tuple.Create(Tuple.Create(" ", 4739), Tuple.Create("d-", 4740), true)
            
            #line 113 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                         , Tuple.Create(Tuple.Create("", 4742), Tuple.Create<System.Object, System.Int32>(Model.UserFlag.IconColour
            
            #line default
            #line hidden
, 4742), false)
);

WriteLiteral("></i>\r\n");

            
            #line 114 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 114 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 if (canConfig)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <div>\r\n                        <button");

WriteLiteral(" id=\"Config_UserFlags_Icon_Update\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">Update</button>\r\n                        <div");

WriteLiteral(" id=\"Config_UserFlags_Icon_Update_Dialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"User Flag Icon\"");

WriteLiteral(">\r\n");

            
            #line 119 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                            
            
            #line default
            #line hidden
            
            #line 119 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                             using (Html.BeginForm(MVC.API.UserFlag.UpdateIconAndColour(id: Model.UserFlag.Id, redirect: true)))
                            {
                                
            
            #line default
            #line hidden
            
            #line 121 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                           Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 121 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                        

            
            #line default
            #line hidden
WriteLiteral("                                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"icon\"");

WriteLiteral(" />\r\n");

WriteLiteral("                                <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"iconColour\"");

WriteLiteral(" />\r\n");

            
            #line 124 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                            <div>\r\n                                <div");

WriteLiteral(" class=\"colours\"");

WriteLiteral(">\r\n");

            
            #line 127 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 127 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                     foreach (var colour in Model.ThemeColours)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <i");

WriteLiteral(" data-colour=\"");

            
            #line 129 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    Write(colour.Key);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 5759), Tuple.Create("\"", 5795)
, Tuple.Create(Tuple.Create("", 5767), Tuple.Create("fa", 5767), true)
, Tuple.Create(Tuple.Create(" ", 5769), Tuple.Create("fa-square", 5770), true)
, Tuple.Create(Tuple.Create(" ", 5779), Tuple.Create("d-", 5780), true)
            
            #line 129 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
              , Tuple.Create(Tuple.Create("", 5782), Tuple.Create<System.Object, System.Int32>(colour.Key
            
            #line default
            #line hidden
, 5782), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 5796), Tuple.Create("\"", 5817)
            
            #line 129 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                   , Tuple.Create(Tuple.Create("", 5804), Tuple.Create<System.Object, System.Int32>(colour.Value
            
            #line default
            #line hidden
, 5804), false)
);

WriteLiteral("></i>\r\n");

            
            #line 130 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n                                <div");

WriteLiteral(" class=\"icons\"");

WriteLiteral(">\r\n");

            
            #line 133 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 133 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                     foreach (var icon in Model.Icons)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <i");

WriteLiteral(" data-icon=\"");

            
            #line 135 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                  Write(icon.Key);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteAttribute("class", Tuple.Create(" class=\"", 6134), Tuple.Create("\"", 6159)
, Tuple.Create(Tuple.Create("", 6142), Tuple.Create("fa", 6142), true)
, Tuple.Create(Tuple.Create(" ", 6144), Tuple.Create("fa-", 6145), true)
            
            #line 135 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
 , Tuple.Create(Tuple.Create("", 6148), Tuple.Create<System.Object, System.Int32>(icon.Key
            
            #line default
            #line hidden
, 6148), false)
);

WriteAttribute("title", Tuple.Create(" title=\"", 6160), Tuple.Create("\"", 6179)
            
            #line 135 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    , Tuple.Create(Tuple.Create("", 6168), Tuple.Create<System.Object, System.Int32>(icon.Value
            
            #line default
            #line hidden
, 6168), false)
);

WriteLiteral("></i>\r\n");

            
            #line 136 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </div>\r\n                            </div>\r\n     " +
"                   </div>\r\n                        <script>\r\n                   " +
"         (function () {\r\n                                var dialog, icon, colou" +
"rs, icons;\r\n\r\n                                function showDialog() {\r\n         " +
"                           if (!dialog) {\r\n                                     " +
"   dialog = $(\'#Config_UserFlags_Icon_Update_Dialog\').dialog({\r\n                " +
"                            resizable: false,\r\n                                 " +
"           modal: true,\r\n                                            autoOpen: f" +
"alse,\r\n                                            width: 1000,\r\n               " +
"                             buttons: {\r\n                                       " +
"         \"Save\": save,\r\n                                                Cancel: " +
"cancel\r\n                                            }\r\n                         " +
"               });\r\n\r\n                                        colours = dialog.f" +
"ind(\'.colours\');\r\n                                        icons = dialog.find(\'." +
"icons\');\r\n\r\n                                        colours.on(\'click\', \'i\', sel" +
"ectColour);\r\n                                        icons.on(\'click\', \'i\', sele" +
"ctIcon);\r\n                                    }\r\n\r\n                             " +
"       colours.find(\'i[data-colour=\"\' + icon.attr(\'data-colour\') + \'\"]\').each(se" +
"lectColour);\r\n                                    icons.find(\'i[data-icon=\"\' + i" +
"con.attr(\'data-icon\') + \'\"]\').each(selectIcon);\r\n\r\n                             " +
"       dialog.dialog(\'open\');\r\n\r\n                                    return fals" +
"e;\r\n                                }\r\n\r\n                                functio" +
"n selectColour() {\r\n                                    var $this = $(this),\r\n  " +
"                                      colourCode = $this.attr(\'data-colour\'),\r\n " +
"                                       previousColourCode = icons.attr(\'data-col" +
"our\');\r\n\r\n\r\n                                    colours.find(\'i\').removeClass(\'s" +
"elected fa-check-square\').addClass(\'fa-square\');\r\n                              " +
"      $this.removeClass(\'fa-square\').addClass(\'fa-check-square selected\');\r\n\r\n  " +
"                                  if (previousColourCode)\r\n                     " +
"                   icons.removeClass(\'d-\' + previousColourCode);\r\n              " +
"                      icons.attr(\'data-colour\', colourCode)\r\n                   " +
"                 icons.addClass(\'d-\' + colourCode);\r\n                           " +
"     }\r\n                                function selectIcon() {\r\n               " +
"                     var $this = $(this),\r\n                                     " +
"   iconCode = $this.attr(\'data-icon\');\r\n\r\n                                    ic" +
"ons.find(\'i\').removeClass(\'selected\');\r\n                                    $thi" +
"s.addClass(\'selected\');\r\n                                }\r\n\r\n                  " +
"              function save() {\r\n                                    dialog.dial" +
"og(\"option\", \"buttons\", null);\r\n                                    const $form " +
"= dialog.find(\'form\');\r\n                                    $form.find(\'input[na" +
"me=\"icon\"]\').val(icons.find(\'i.selected\').attr(\'data-icon\'));\r\n                 " +
"                   $form.find(\'input[name=\"iconColour\"]\').val(colours.find(\'i.se" +
"lected\').attr(\'data-colour\'));\r\n                                    $form.trigge" +
"r(\'submit\');\r\n                                }\r\n\r\n                             " +
"   function cancel() {\r\n                                    $(this).dialog(\"clos" +
"e\");\r\n                                }\r\n\r\n                                $(fun" +
"ction () {\r\n                                    icon = $(\'#Config_UserFlags_Icon" +
"\');\r\n                                    $(\'#Config_UserFlags_Icon_Update\').clic" +
"k(showDialog);\r\n                                });\r\n                           " +
" }());\r\n                        </script>\r\n                    </div>\r\n");

            
            #line 213 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </td>\r\n        </tr>\r\n");

            
            #line 216 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
        
            
            #line default
            #line hidden
            
            #line 216 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
         if (hideAdvanced)
        {

            
            #line default
            #line hidden
WriteLiteral("            <tr>\r\n                <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"text-align: right;\"");

WriteLiteral(">\r\n                    <button");

WriteLiteral(" id=\"Config_HideAdvanced_Show\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(@">Show Advanced Options</button>
                    <script>
                        $(function () {
                            $('#Config_HideAdvanced_Show').click(function () {
                                var $this = $(this);
                                $this.closest('.Config_HideAdvanced').removeClass('Config_HideAdvanced');
                                $this.closest('tr').remove();
                            });
                        });
                    </script>
                </td>
            </tr>
");

            
            #line 232 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        <tr");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n            <th>\r\n                Assignment Permission<br />\r\n               " +
" Override:\r\n            </th>\r\n            <td>\r\n");

            
            #line 239 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 239 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 if (!Model.Permission.IsDefault())
                {
                    var permission = Model.Permission;

            
            #line default
            #line hidden
WriteLiteral("                    <div>\r\n");

            
            #line 243 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 243 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                         if (permission.Inherit)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <span><i");

WriteLiteral(" class=\"fa fa-check-square-o\"");

WriteLiteral("></i> Inheriting from Authorization Roles</span>\r\n");

            
            #line 246 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        }
                        else
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <span><i");

WriteLiteral(" class=\"fa fa-square-o\"");

WriteLiteral("></i> Authorization Roles are Ignored</span>\r\n");

            
            #line 250 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

            
            #line 252 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    if (!permission.HasSubjects())
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">There are no users/groups associated with this permission override</span>\r\n");

            
            #line 255 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    }
                    else
                    {
                        if (permission.IsSimple())
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <table");

WriteLiteral(" class=\"tableData\"");

WriteLiteral(@">
                                <thead>
                                    <tr>
                                        <th>Users/Groups/Roles</th>
                                    </tr>
                                </thead>
                                <tbody>
");

            
            #line 267 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 267 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                     foreach (var subjectId in permission.CanShowSubjectIds)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <tr>\r\n                                   " +
"         <td>\r\n");

            
            #line 271 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 271 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                  
                                                    int roleId;
                                                    if (subjectId.StartsWith("[") && int.TryParse(subjectId.Trim('[', ']'), out roleId))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <span>");

            
            #line 275 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                         Write(Disco.Services.Users.UserService.GetAuthorizationRoleName(roleId));

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 275 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                            Write(subjectId);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 276 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    }
                                                    else
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <span>");

            
            #line 279 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                         Write(subjectId);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 280 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    }
                                                
            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </td>\r\n                            " +
"            </tr>\r\n");

            
            #line 284 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </tbody>\r\n                            </table>\r\n");

WriteLiteral("                            <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                                <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                                    <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral("></i> All users/groups/roles can view, assign, edit assignments, and remove assig" +
"nments for this flag.\r\n                                </p>\r\n                   " +
"         </div>\r\n");

            
            #line 292 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        }
                        else
                        {
                            var subjects = permission.AllSubjects();

            
            #line default
            #line hidden
WriteLiteral("                            <table");

WriteLiteral(" class=\"tableData\"");

WriteLiteral(@">
                                <thead>
                                    <tr>
                                        <th>Users/Groups/Roles</th>
                                        <th>View</th>
                                        <th>Assign</th>
                                        <th>Edit</th>
                                        <th>Remove</th>
                                    </tr>
                                </thead>
                                <tbody>
");

            
            #line 307 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    
            
            #line default
            #line hidden
            
            #line 307 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                     foreach (var subjectId in subjects.OrderBy(s => s))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <tr>\r\n                                   " +
"         <td>\r\n                                                <i");

WriteLiteral(" class=\"fa\"");

WriteLiteral("></i> ");

            
            #line 311 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                     
                                                    int roleId;
                                                    if (subjectId.StartsWith("[") && int.TryParse(subjectId.Trim('[', ']'), out roleId))
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <span>");

            
            #line 315 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                         Write(Disco.Services.Users.UserService.GetAuthorizationRoleName(roleId));

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 315 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                            Write(subjectId);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 316 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    }
                                                    else
                                                    {

            
            #line default
            #line hidden
WriteLiteral("                                                        <span>");

            
            #line 319 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                         Write(subjectId);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");

            
            #line 320 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    }
                                                
            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </td>\r\n                            " +
"                <td>\r\n");

            
            #line 324 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 324 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                 if (permission.CanShowSubjectIds.Contains(subjectId))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <i");

WriteLiteral(" class=\"fa fa-fw fa-check\"");

WriteLiteral("></i>\r\n");

            
            #line 327 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </td>\r\n                              " +
"              <td>\r\n");

            
            #line 330 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 330 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                 if (permission.CanAssignSubjectIds.Contains(subjectId))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <i");

WriteLiteral(" class=\"fa fa-fw fa-check\"");

WriteLiteral("></i>\r\n");

            
            #line 333 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </td>\r\n                              " +
"              <td>\r\n");

            
            #line 336 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 336 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                 if (permission.CanEditSubjectIds.Contains(subjectId))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <i");

WriteLiteral(" class=\"fa fa-fw fa-check\"");

WriteLiteral("></i>\r\n");

            
            #line 339 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </td>\r\n                              " +
"              <td>\r\n");

            
            #line 342 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                
            
            #line default
            #line hidden
            
            #line 342 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                 if (permission.CanRemoveSubjectIds.Contains(subjectId))
                                                {

            
            #line default
            #line hidden
WriteLiteral("                                                    <i");

WriteLiteral(" class=\"fa fa-fw fa-check\"");

WriteLiteral("></i>\r\n");

            
            #line 345 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                }

            
            #line default
            #line hidden
WriteLiteral("                                            </td>\r\n                              " +
"          </tr>\r\n");

            
            #line 348 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </tbody>\r\n                            </table>\r\n");

            
            #line 351 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        }

                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                ");

            
            #line 355 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 if (canConfig)
                {
                    var permission = Model.Permission;

            
            #line default
            #line hidden
WriteLiteral("                    <button");

WriteLiteral(" id=\"Config_Flag_Permission_Edit\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(">");

            
            #line 358 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                              Write(permission.IsDefault() ? "Override" : "Edit");

            
            #line default
            #line hidden
WriteLiteral(" Permission</button>\r\n");

            
            #line 359 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"


            
            #line default
            #line hidden
WriteLiteral("                    <div");

WriteLiteral(" id=\"Config_Flag_Permissions\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Flag Assignment Permission Override\"");

WriteLiteral(">\r\n");

            
            #line 361 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 361 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                         using (Html.BeginForm(MVC.API.UserFlag.Permission(Model.UserFlag.Id)))
                        {
                            
            
            #line default
            #line hidden
            
            #line 363 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                       Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 363 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    

            
            #line default
            #line hidden
WriteLiteral("                            <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"IsOverride\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" />\r\n");

WriteLiteral("                            <div");

WriteLiteral(" id=\"Config_Flag_Permissions_Inherit_Container\"");

WriteLiteral(">\r\n                                <label>\r\n                                    <" +
"input");

WriteLiteral(" id=\"Config_Flag_Permissions_Inherit\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"Inherit\"");

WriteLiteral(" value=\"true\"");

WriteLiteral(" ");

            
            #line 367 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                        Write(permission.Inherit ? "checked" : null);

            
            #line default
            #line hidden
WriteLiteral(" /> Inherit Authorization from Authorization Roles\r\n                             " +
"   </label>\r\n                            </div>\r\n");

WriteLiteral("                            <div");

WriteLiteral(" class=\"tableDataContainer\"");

WriteLiteral(">\r\n                                <table");

WriteLiteral(" class=\"tableData\"");

WriteLiteral(@">
                                    <thead>
                                        <tr>
                                            <th>User/Group/Role</th>
                                            <th>View</th>
                                            <th>Assign</th>
                                            <th>Edit</th>
                                            <th>Remove</th>
                                        </tr>
                                    </thead>
                                    <tbody>
");

            
            #line 382 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                        
            
            #line default
            #line hidden
            
            #line 382 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                          
                                            var subjects = permission.AllSubjects();

                                            foreach (var subjectId in subjects.OrderBy(s => s))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <tr");

WriteLiteral(" data-subjectid=\"");

            
            #line 387 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                               Write(subjectId);

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n                                                    <td><i");

WriteLiteral(" class=\"fa type\"");

WriteLiteral("></i> <span>");

            
            #line 388 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                 Write(subjectId);

            
            #line default
            #line hidden
WriteLiteral("</span><i");

WriteLiteral(" class=\"fa fa-times-circle remove\"");

WriteLiteral("></i></td>\r\n                                                    <td>\r\n           " +
"                                             <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"CanShow\"");

WriteAttribute("value", Tuple.Create(" value=\"", 20091), Tuple.Create("\"", 20109)
            
            #line 390 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    , Tuple.Create(Tuple.Create("", 20099), Tuple.Create<System.Object, System.Int32>(subjectId
            
            #line default
            #line hidden
, 20099), false)
);

WriteLiteral(" ");

            
            #line 390 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                             Write(permission.CanShowSubjectIds.Contains(subjectId) ? " checked" : null);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                                                    </td>\r\n                 " +
"                                   <td>\r\n                                       " +
"                 <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"CanAssign\"");

WriteAttribute("value", Tuple.Create(" value=\"", 20399), Tuple.Create("\"", 20417)
            
            #line 393 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                      , Tuple.Create(Tuple.Create("", 20407), Tuple.Create<System.Object, System.Int32>(subjectId
            
            #line default
            #line hidden
, 20407), false)
);

WriteLiteral(" ");

            
            #line 393 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                               Write(permission.CanAssignSubjectIds.Contains(subjectId) ? " checked" : null);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                                                    </td>\r\n                 " +
"                                   <td>\r\n                                       " +
"                 <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"CanEdit\"");

WriteAttribute("value", Tuple.Create(" value=\"", 20707), Tuple.Create("\"", 20725)
            
            #line 396 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    , Tuple.Create(Tuple.Create("", 20715), Tuple.Create<System.Object, System.Int32>(subjectId
            
            #line default
            #line hidden
, 20715), false)
);

WriteLiteral(" ");

            
            #line 396 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                             Write(permission.CanEditSubjectIds.Contains(subjectId) ? " checked" : null);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                                                    </td>\r\n                 " +
"                                   <td>\r\n                                       " +
"                 <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"CanRemove\"");

WriteAttribute("value", Tuple.Create(" value=\"", 21015), Tuple.Create("\"", 21033)
            
            #line 399 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                      , Tuple.Create(Tuple.Create("", 21023), Tuple.Create<System.Object, System.Int32>(subjectId
            
            #line default
            #line hidden
, 21023), false)
);

WriteLiteral(" ");

            
            #line 399 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                               Write(permission.CanRemoveSubjectIds.Contains(subjectId) ? " checked" : null);

            
            #line default
            #line hidden
WriteLiteral(" />\r\n                                                    </td>\r\n                 " +
"                               </tr>\r\n");

            
            #line 402 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                            }
                                        
            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </tbody>\r\n                                <" +
"/table>\r\n                            </div>\r\n");

WriteLiteral("                            <div>\r\n                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"Config_Flag_Permissions_Subject_Input\"");

WriteLiteral(" placeholder=\"Search Users/Groups\"");

WriteLiteral(" data-autocompleteurl=\"");

            
            #line 408 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                                                  Write(Url.Action(MVC.API.System.SearchSubjects(null, includeAuthorizationRoles: true)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" />\r\n                                <button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"Config_Flag_Permissions_Subject_Add\"");

WriteLiteral(" class=\"button small\"");

WriteLiteral(" data-subjecturl=\"");

            
            #line 409 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                                Write(Url.Action(MVC.API.System.Subject(null, includeAuthorizationRoles: true)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">Add</button>\r\n                            </div>\r\n");

            
            #line 411 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                    </div>\r\n");

WriteLiteral("                    <script>\r\n                        $(function () {\r\n          " +
"                  let $dialog = null;\r\n                            let originalS" +
"ubjects = null;\r\n                            let originalInherit = null;\r\n      " +
"                      $(\'#Config_Flag_Permission_Edit\').on(\'click\', async functi" +
"on () {\r\n                                if (!$dialog) {\r\n                      " +
"              $dialog = $(\'#Config_Flag_Permissions\');\r\n                        " +
"            const $tbody = $dialog.find(\'tbody\');\r\n                             " +
"       const $inherit = $dialog.find(\'#Config_Flag_Permissions_Inherit\');\r\n     " +
"                               const $input = $dialog.find(\'#Config_Flag_Permiss" +
"ions_Subject_Input\');\r\n                                    const $add = $dialog." +
"find(\'#Config_Flag_Permissions_Subject_Add\');\r\n\r\n                               " +
"     $dialog.dialog({\r\n                                        resizable: false," +
"\r\n                                        modal: true,\r\n                        " +
"                autoOpen: false,\r\n                                        width:" +
" 550,\r\n                                        height: 420,\r\n                   " +
"                     buttons: {\r\n                                            Can" +
"cel: function () {\r\n                                                $(this).dial" +
"og(\'close\');\r\n                                                $tbody.html(origin" +
"alSubjects);\r\n                                                $inherit.prop(\'che" +
"cked\', originalInherit);\r\n                                            },\r\n      " +
"                                      \'Remove Override\': function () {\r\n        " +
"                                        const $this = $(this);\r\n                " +
"                                $(this).dialog(\'option\', \'buttons\', null);\r\n    " +
"                                            $this.find(\'input[name=\"IsOverride\"]" +
"\').val(\'false\');\r\n                                                $this.find(\'fo" +
"rm\').trigger(\'submit\');\r\n                                            },\r\n       " +
"                                     \'Save Changes\': function () {\r\n            " +
"                                    $(this).dialog(\'option\', \'buttons\', null);\r\n" +
"                                                $(this).find(\'form\').trigger(\'su" +
"bmit\');\r\n                                            }\r\n                        " +
"                }\r\n                                    });\r\n\r\n                  " +
"                  $tbody.on(\'click\', \'i.remove\', function () {\r\n                " +
"                        $(this).closest(\'tr\').remove();\r\n                       " +
"             });\r\n\r\n                                    $input\r\n                " +
"                        .autocomplete({\r\n                                       " +
"     source: $input.attr(\'data-autocompleteurl\'),\r\n                             " +
"               minLength: 2,\r\n                                            focus:" +
" function (e, ui) {\r\n                                                $input.val(" +
"ui.item.Id);\r\n                                                return false;\r\n   " +
"                                         },\r\n                                   " +
"         select: function (e, ui) {\r\n                                           " +
"     $input.val(ui.item.Id).blur();\r\n                                           " +
"     $add.trigger(\'click\');\r\n                                                $in" +
"put.val(\'\');\r\n                                                return false;\r\n   " +
"                                         }\r\n                                    " +
"    }).data(\'ui-autocomplete\')._renderItem = function (ul, item) {\r\n            " +
"                                return $(\"<li></li>\")\r\n                         " +
"                       .data(\'item.autocomplete\', item)\r\n                       " +
"                         .append(\'<a><strong>\' + item.Name + \'</strong><br>\' + i" +
"tem.Id + \' (\' + item.Type + \')</a>\')\r\n                                          " +
"      .appendTo(ul);\r\n                                        };\r\n\r\n            " +
"                        $add.on(\'click\', async function () {\r\n                  " +
"                      const value = $input.val();\r\n                             " +
"           if (!value) {\r\n                                            $input.foc" +
"us();\r\n                                            return;\r\n                    " +
"                    }\r\n                                        const existing = " +
"$tbody.find(\'tr\').filter(function () {\r\n                                        " +
"    return $(this).attr(\'data-subjectid\') === value;\r\n                          " +
"              });\r\n                                        if (existing.length !" +
"== 0) {\r\n                                            $input.val(\'\');\r\n          " +
"                                  $input.focus();\r\n                             " +
"               return;\r\n                                        }\r\n\r\n           " +
"                             const body = new FormData();\r\n                     " +
"                   body.append(\'id\', value);\r\n                                  " +
"      const response = await fetch($add.attr(\'data-subjecturl\'), {\r\n            " +
"                                body: body,\r\n                                   " +
"         method: \'POST\'\r\n                                        });\r\n\r\n        " +
"                                if (!response.ok) {\r\n                           " +
"                 alert(\'Unable to lookup User/Group/Role: \' + response.statusTex" +
"t);\r\n                                            $input.focus();\r\n              " +
"                              return;\r\n                                        }" +
"\r\n\r\n                                        const subject = await response.json(" +
");\r\n\r\n                                        if (!subject) {\r\n                 " +
"                           alert(\'Invalid User/Group\');\r\n                       " +
"                     $input.focus();\r\n                                          " +
"  return;\r\n                                        }\r\n\r\n                        " +
"                const $record = $(\'<tr><td><i class=\"fa type\"></i> <span></span>" +
"<i class=\"fa fa-times-circle remove\"></i></td><td><input type=\"checkbox\" name=\"C" +
"anShow\" checked /></td><td><input type=\"checkbox\" name=\"CanAssign\" checked /></t" +
"d><td><input type=\"checkbox\" name=\"CanEdit\" checked /></td><td><input type=\"chec" +
"kbox\" name=\"CanRemove\" checked /></td></tr>\');\r\n                                " +
"        $record.attr(\'data-subjectid\', subject.Id);\r\n                           " +
"             $record.find(\'span\').text(subject.Name + \' \' + subject.Id);\r\n      " +
"                                  $record.find(\'i.type\').addClass(subject.Type =" +
"== \'role\' ? \'fa-lock\' : subject.IsGroup ? \'fa-users\' : \'fa-user\');\r\n            " +
"                            $record.find(\'input\').val(subject.Id);\r\n            " +
"                            $tbody.append($record);\r\n                           " +
"             $input.val(\'\');\r\n                                        $input.foc" +
"us();\r\n                                    });\r\n\r\n                              " +
"      const $records = $tbody.find(\'tr\');\r\n                                    f" +
"or (var i = 0; i < $records.length; i++) {\r\n                                    " +
"    const $record = $($records[i]);\r\n                                        con" +
"st body = new FormData();\r\n                                        body.append(\'" +
"id\', $record.attr(\'data-subjectid\'));\r\n                                        c" +
"onst response = await fetch($add.attr(\'data-subjecturl\'), {\r\n                   " +
"                         body: body,\r\n                                          " +
"  method: \'POST\'\r\n                                        });\r\n                 " +
"                       if (response.ok) {\r\n                                     " +
"       const subject = await response.json();\r\n                                 " +
"           if (subject) {\r\n                                                $reco" +
"rd.find(\'span\').text(subject.Name + \' \' + subject.Id);\r\n                        " +
"                        $record.find(\'i.type\').addClass(subject.Type === \'role\' " +
"? \'fa-lock\' : subject.IsGroup ? \'fa-users\' : \'fa-user\');\r\n                      " +
"                          continue;\r\n                                           " +
" }\r\n                                        }\r\n                                 " +
"       $record.remove();\r\n                                    }\r\n               " +
"                     originalInherit = $inherit.prop(\'checked\');\r\n              " +
"                      originalSubjects = $tbody.html();\r\n                       " +
"             $dialog.dialog(\'open\');\r\n                                } else {\r\n" +
"                                    $dialog.dialog(\'open\');\r\n                   " +
"             }\r\n                            });\r\n                        });\r\n  " +
"                  </script>\r\n");

            
            #line 550 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                    <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                        <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral("></i> Flag actions are normally authorized globally by\r\n");

            
            #line 554 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        
            
            #line default
            #line hidden
            
            #line 554 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                         if (Authorization.Has(Claims.DiscoAdminAccount))
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <span><a");

WriteAttribute("href", Tuple.Create(" href=\"", 31288), Tuple.Create("\"", 31348)
            
            #line 556 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
, Tuple.Create(Tuple.Create("", 31295), Tuple.Create<System.Object, System.Int32>(Url.Action(MVC.Config.AuthorizationRole.Index(null))
            
            #line default
            #line hidden
, 31295), false)
);

WriteLiteral(">Authorization Roles</a>.</span>\r\n");

            
            #line 557 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        }
                        else
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <span>Authorization Roles.</span>\r\n");

            
            #line 561 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        }

            
            #line default
            #line hidden
WriteLiteral("                        Overriding individual flag permissions allows for targete" +
"d authorization.\r\n                    </p>\r\n                </div>\r\n            " +
"</td>\r\n        </tr>\r\n        <tr");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n            <th>\r\n                On Assignment<br />Expression:\r\n            " +
"</th>\r\n            <td>\r\n");

            
            #line 572 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 572 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 if (canConfig)
                {
                    
            
            #line default
            #line hidden
            
            #line 574 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.EditorFor(model => model.UserFlag.OnAssignmentExpression));

            
            #line default
            #line hidden
            
            #line 574 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                   
                    
            
            #line default
            #line hidden
            
            #line 575 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxRemove());

            
            #line default
            #line hidden
            
            #line 575 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                             
                    
            
            #line default
            #line hidden
            
            #line 576 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 576 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 577 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 577 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                            $(function () {
                                var field = $('#UserFlag_OnAssignmentExpression');
                                var fieldRemove = field.next('.ajaxRemove');
                                var fieldOriginalWidth, fieldOriginalHeight;

                                document.DiscoFunctions.PropertyChangeHelper(
                                    field,
                                    'None',
                                    '");

            
            #line 587 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                Write(Url.Action(MVC.API.UserFlag.UpdateOnAssignmentExpression(Model.UserFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                                    \'OnAssignmentExpression\'\r\n               " +
"                 );\r\n\r\n                                field.focus(function () {" +
"\r\n                                    fieldOriginalWidth = field.width();\r\n     " +
"                               fieldOriginalHeight = field.height();\r\n          " +
"                          field.css(\'overflow\', \'visible\').animate({ width: fiel" +
"d.parent().width() - 42, height: 75 }, 200);\r\n                                })" +
".blur(function () {\r\n                                    field.css(\'overflow\', \'" +
"hidden\').animate({ width: fieldOriginalWidth, height: fieldOriginalHeight }, 200" +
");\r\n                                }).change(function () {\r\n                   " +
"                 if (!!field.val()) {\r\n                                        f" +
"ieldRemove.show();\r\n                                    } else {\r\n              " +
"                          fieldRemove.hide();\r\n                                 " +
"   }\r\n                                }).attr(\'placeholder\', \'None\').attr(\'spell" +
"check\', \'false\');\r\n\r\n                                fieldRemove.click(function " +
"() {\r\n                                    field.val(\'\').change();\r\n             " +
"                   });\r\n\r\n                                if (!!field.val()) {\r\n" +
"                                    fieldRemove.show();\r\n                       " +
"         } else {\r\n                                    fieldRemove.hide();\r\n    " +
"                            }\r\n                            });\r\n                " +
"    </script>\r\n");

            
            #line 616 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                }
                else
                {
                    if (string.IsNullOrWhiteSpace(Model.UserFlag.OnAssignmentExpression))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 622 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    }
                    else
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 626 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                       Write(Model.UserFlag.OnAssignmentExpression);

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n");

            
            #line 628 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                    <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                        <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral("></i>This expression will be evaluated whenever the user flag is assigned to a us" +
"er. The output of the expression will be shown with the flag assignment.\r\n      " +
"              </p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n  " +
"      <tr");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n            <th>\r\n                On Unassignment<br />Expression:\r\n          " +
"  </th>\r\n            <td>\r\n");

            
            #line 642 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 642 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 if (canConfig)
                {
                    
            
            #line default
            #line hidden
            
            #line 644 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.EditorFor(model => model.UserFlag.OnUnassignmentExpression));

            
            #line default
            #line hidden
            
            #line 644 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                     
                    
            
            #line default
            #line hidden
            
            #line 645 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxRemove());

            
            #line default
            #line hidden
            
            #line 645 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                             
                    
            
            #line default
            #line hidden
            
            #line 646 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxSave());

            
            #line default
            #line hidden
            
            #line 646 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                           
                    
            
            #line default
            #line hidden
            
            #line 647 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(AjaxHelpers.AjaxLoader());

            
            #line default
            #line hidden
            
            #line 647 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                             

            
            #line default
            #line hidden
WriteLiteral("                    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                        $(function () {
                            var field = $('#UserFlag_OnUnassignmentExpression');
                            var fieldRemove = field.next('.ajaxRemove');
                            var fieldOriginalWidth, fieldOriginalHeight;

                            document.DiscoFunctions.PropertyChangeHelper(
                                field,
                                'None',
                                '");

            
            #line 657 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                            Write(Url.Action(MVC.API.UserFlag.UpdateOnUnassignmentExpression(Model.UserFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral(@"',
                                'OnUnassignmentExpression'
                            );

                            field.focus(function () {
                                fieldOriginalWidth = field.width();
                                fieldOriginalHeight = field.height();
                                field.css('overflow', 'visible').animate({ width: field.parent().width() - 42, height: 75 }, 200);
                            }).blur(function () {
                                field.css('overflow', 'hidden').animate({ width: fieldOriginalWidth, height: fieldOriginalHeight }, 200);
                            }).change(function () {
                                if (!!field.val()) {
                                    fieldRemove.show();
                                } else {
                                    fieldRemove.hide();
                                }
                            }).attr('placeholder', 'None').attr('spellcheck', 'false');

                            fieldRemove.click(function () {
                                field.val('').change();
                            });

                            if (!!field.val()) {
                                fieldRemove.show();
                            } else {
                                fieldRemove.hide();
                            }
                        });
                    </script>
");

            
            #line 686 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                }
                else
                {
                    if (string.IsNullOrWhiteSpace(Model.UserFlag.OnUnassignmentExpression))
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <span");

WriteLiteral(" class=\"smallMessage\"");

WriteLiteral(">&lt;None Specified&gt;</span>\r\n");

            
            #line 692 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    }
                    else
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 696 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                       Write(Model.UserFlag.OnUnassignmentExpression);

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n");

            
            #line 698 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    }
                }

            
            #line default
            #line hidden
WriteLiteral("                <div");

WriteLiteral(" class=\"info-box\"");

WriteLiteral(">\r\n                    <p");

WriteLiteral(" class=\"fa-p\"");

WriteLiteral(">\r\n                        <i");

WriteLiteral(" class=\"fa fa-fw fa-info-circle\"");

WriteLiteral("></i>This expression will be evaluated whenever the user flag is removed from a u" +
"ser. The output of the expression will be shown with the flag assignment.\r\n     " +
"               </p>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n " +
"       <tr");

WriteLiteral(" class=\"Config_HideAdvanced_Item\"");

WriteLiteral(">\r\n            <th>\r\n                Linked Groups:\r\n            </th>\r\n         " +
"   <td>\r\n                <div>\r\n");

WriteLiteral("                    ");

            
            #line 713 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupInstance, new LinkedGroupModel()
               {
                   CanConfigure = canConfig,
                   CategoryDescription = UserFlagUsersManagedGroup.GetCategoryDescription(Model.UserFlag),
                   Description = UserFlagUsersManagedGroup.GetDescription(Model.UserFlag),
                   ManagedGroup = Model.UsersLinkedGroup,
                   IncludeFilterBeginDate = true,
                   UpdateUrl = Url.Action(MVC.API.UserFlag.UpdateAssignedUsersLinkedGroup(Model.UserFlag.Id, redirect: true))
               }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("                    ");

            
            #line 722 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupInstance, new LinkedGroupModel()
               {
                   CanConfigure = canConfig,
                   CategoryDescription = UserFlagUserDevicesManagedGroup.GetCategoryDescription(Model.UserFlag),
                   Description = UserFlagUserDevicesManagedGroup.GetDescription(Model.UserFlag),
                   ManagedGroup = Model.UserDevicesLinkedGroup,
                   IncludeFilterBeginDate = true,
                   UpdateUrl = Url.Action(MVC.API.UserFlag.UpdateAssignedUserDevicesLinkedGroup(Model.UserFlag.Id, redirect: true))
               }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 731 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 731 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                     if (canConfig)
                    {
                        
            
            #line default
            #line hidden
            
            #line 733 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                   Write(Html.Partial(MVC.Config.Shared.Views.LinkedGroupShared));

            
            #line default
            #line hidden
            
            #line 733 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n");

            
            #line 740 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
 if (canBulkAssignment || canDelete || canShowUsers || canExportCurrent || canExportAll)
{

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"actionBar\"");

WriteLiteral(">\r\n");

            
            #line 743 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
        
            
            #line default
            #line hidden
            
            #line 743 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
         if (canExportCurrent)
        {
            
            
            #line default
            #line hidden
            
            #line 745 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
       Write(Html.ActionLinkButton("Export Current Assignments", MVC.Config.UserFlag.Export(null, Model.UserFlag.Id, true), "Config_UserFlags_Actions_ExportCurrent_Button"));

            
            #line default
            #line hidden
            
            #line 745 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                                                                            
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 747 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
         if (canExportAll)
        {
            
            
            #line default
            #line hidden
            
            #line 749 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
       Write(Html.ActionLinkButton("Export All Assignments", MVC.Config.UserFlag.Export(null, Model.UserFlag.Id, false), "Config_UserFlags_Actions_ExportAll_Button"));

            
            #line default
            #line hidden
            
            #line 749 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                                                                     
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 751 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
         if (canBulkAssignment)
        {

            
            #line default
            #line hidden
WriteLiteral("            <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" id=\"Config_UserFlags_BulkAssign_Button\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(">Bulk Assign Users</a>\r\n");

WriteLiteral("            <div");

WriteLiteral(" id=\"Config_UserFlags_BulkAssign_ModeDialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Bulk Assign User Mode\"");

WriteLiteral(">\r\n                <p>\r\n                    Select the mode used to assign users:" +
"\r\n                </p>\r\n                <div>\r\n                    <div");

WriteLiteral(" class=\"add\"");

WriteLiteral(">\r\n                        <h5><i");

WriteLiteral(" class=\"fa fa-plus fa-fw\"");

WriteLiteral(@"></i>Add</h5>
                        <p>
                            Specified users will have this flag <strong>added</strong>. Users who already have this flag will be skipped.
                        </p>
                    </div>
                    <div");

WriteLiteral(" class=\"override\"");

WriteLiteral(">\r\n                        <h5><i");

WriteLiteral(" class=\"fa fa-repeat fa-fw\"");

WriteLiteral(@"></i>Override</h5>
                        <p>
                            Specified users will have this flag <strong>added</strong>. Specified users which already have this flag will be skipped.
                            Users who already have this flag but are not specified will have the flag <strong>removed</strong>.
                        </p>
                    </div>
                </div>
            </div>
");

WriteLiteral("            <div");

WriteLiteral(" id=\"Config_UserFlags_BulkAssign_AssignDialog\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(" title=\"Bulk Assign Users\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"brief\"");

WriteLiteral(">\r\n                    <div>\r\n                        Enter multiple <strong>User" +
" Ids</strong> separated by <code>&lt;new line&gt;</code>, commas (<code>,</code>" +
") or semicolons (<code>;</code>).\r\n                    </div>\r\n                 " +
"   <div");

WriteLiteral(" class=\"examples clearfix\"");

WriteLiteral(">\r\n                        <h4>Examples:</h4>\r\n                        <div");

WriteLiteral(" class=\"code example1\"");

WriteLiteral(">\r\n                            user6<br />\r\n                            smi0099<b" +
"r />\r\n");

WriteLiteral("                            ");

            
            #line 784 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                        Write(ActiveDirectory.Context.PrimaryDomain.NetBiosName);

            
            #line default
            #line hidden
WriteLiteral("\\rsmith\r\n                        </div>\r\n                        <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">user6,smi0099,");

            
            #line 786 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    Write(ActiveDirectory.Context.PrimaryDomain.NetBiosName);

            
            #line default
            #line hidden
WriteLiteral("\\rsmith</div>\r\n                        <div");

WriteLiteral(" class=\"code\"");

WriteLiteral(">user6;smi0099;");

            
            #line 787 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                    Write(ActiveDirectory.Context.PrimaryDomain.NetBiosName);

            
            #line default
            #line hidden
WriteLiteral("\\rsmith</div>\r\n                    </div>\r\n                </div>\r\n              " +
"  <div");

WriteLiteral(" class=\"loading\"");

WriteLiteral(">\r\n                    <h4><i");

WriteLiteral(" class=\"fa fa-lg fa-cog fa-spin\"");

WriteLiteral(" title=\"Please Wait\"");

WriteLiteral("></i>Loading current assignments...</h4>\r\n                </div>\r\n               " +
" <form");

WriteLiteral(" action=\"#\"");

WriteLiteral(" method=\"post\"");

WriteLiteral(" data-overrideaction=\"");

            
            #line 793 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                Write(Url.Action(MVC.API.UserFlag.BulkAssignUsers(Model.UserFlag.Id, true)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(" data-addaction=\"");

            
            #line 793 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                                                          Write(Url.Action(MVC.API.UserFlag.BulkAssignUsers(Model.UserFlag.Id, false)));

            
            #line default
            #line hidden
WriteLiteral("\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 794 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
WriteLiteral("\r\n                    <textarea");

WriteLiteral(" id=\"Config_UserFlags_BulkAssign_AssignDialog_UserIds\"");

WriteLiteral(" name=\"UserIds\"");

WriteLiteral("></textarea>\r\n                    <h4>Comments:</h4>\r\n                    <textar" +
"ea");

WriteLiteral(" id=\"Config_UserFlags_BulkAssign_AssignDialog_Comments\"");

WriteLiteral(" name=\"Comments\"");

WriteLiteral("></textarea>\r\n                </form>\r\n            </div>\r\n");

WriteLiteral("            <script>\r\n                $(function () {\r\n                    var mo" +
"deDialog, assignDialog, assignUserIds;\r\n\r\n                    function showModeD" +
"ialog() {\r\n                        if (!modeDialog) {\r\n                         " +
"   modeDialog = $(\'#Config_UserFlags_BulkAssign_ModeDialog\').dialog({\r\n         " +
"                       resizable: false,\r\n                                modal:" +
" true,\r\n                                autoOpen: false,\r\n                      " +
"          width: 400,\r\n                                buttons: {\r\n             " +
"                       Cancel: function () {\r\n                                  " +
"      $(this).dialog(\'close\');\r\n                                    }\r\n         " +
"                       }\r\n                            });\r\n\r\n                   " +
"         modeDialog.find(\'.add\').click(function () {\r\n                          " +
"      modeDialog.dialog(\'close\');\r\n                                showAssignDia" +
"log(\'Add\');\r\n                            });\r\n                            modeDi" +
"alog.find(\'.override\').click(function () {\r\n                                mode" +
"Dialog.dialog(\'close\');\r\n                                showAssignDialog(\'Overr" +
"ide\');\r\n                            });\r\n                        }\r\n            " +
"            modeDialog.dialog(\'open\');\r\n                    }\r\n                 " +
"   function showAssignDialog(mode) {\r\n                        if (!assignDialog)" +
" {\r\n                            assignDialog = $(\'#Config_UserFlags_BulkAssign_A" +
"ssignDialog\').dialog({\r\n                                resizable: false,\r\n     " +
"                           modal: true,\r\n                                autoOpe" +
"n: false,\r\n                                width: 460\r\n                         " +
"   });\r\n\r\n                            assignUserIds = $(\'#Config_UserFlags_BulkA" +
"ssign_AssignDialog_UserIds\');\r\n                        }\r\n\r\n                    " +
"    assignDialog.removeClass(\'loading\');\r\n\r\n                        var buttons " +
"= {};\r\n                        buttons[mode + \" User Flags\"] = function () {\r\n  " +
"                          $(this).find(\'form\').submit();\r\n                      " +
"      $(this).dialog(\"disable\");\r\n                        }\r\n                   " +
"     buttons[\'Cancel\'] = function () {\r\n                            $(this).dial" +
"og(\'close\');\r\n                        }\r\n                        assignDialog.di" +
"alog(\'option\', \'buttons\', buttons);\r\n                        assignDialog.dialog" +
"(\'option\', \'title\', \'Bulk Assign Users: \' + mode);\r\n\r\n                        co" +
"nst $form = assignUserIds.closest(\'form\');\r\n                        if (mode == " +
"\"Override\") {\r\n                            $form.attr(\'action\', $form.attr(\'data" +
"-overrideaction\'));\r\n\r\n                            assignDialog.addClass(\'loadin" +
"g\');\r\n                            $.getJSON(\'");

            
            #line 859 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                  Write(Url.Action(MVC.API.UserFlag.AssignedUsers(Model.UserFlag.Id)));

            
            #line default
            #line hidden
WriteLiteral(@"', function (response, result) {
                                assignDialog.removeClass('loading');

                                if (result != 'success') {
                                    alert('Unable to load current assignments:\n' + response);
                                    assignDialog.dialog('close');
                                } else {
                                    if (!!response) {
                                        assignUserIds.val(response.join('\n'));
                                    } else {
                                        assignUserIds.val('');
                                    }
                                }
                            });
                        }
                        else // Assume Add
                        {
                            $form.attr('action', $form.attr('data-addaction'));
                        }

                        assignDialog.dialog('open');
                    }

                    $('#Config_UserFlags_BulkAssign_Button').click(function () {
                        showModeDialog();
                        return false;
                    });
                });
            </script>
");

            
            #line 888 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 889 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
         if (canDelete)
        {

            
            #line default
            #line hidden
WriteLiteral("            <button");

WriteLiteral(" id=\"Config_UserFlags_Actions_Delete_Button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" class=\"button\"");

WriteLiteral(">Delete</button>\r\n");

WriteLiteral("            <div");

WriteLiteral(" id=\"Config_UserFlags_Actions_Delete_Dialog\"");

WriteLiteral(" title=\"Delete this User Flag?\"");

WriteLiteral(" class=\"dialog\"");

WriteLiteral(">\r\n");

            
            #line 893 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                
            
            #line default
            #line hidden
            
            #line 893 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                 using (Html.BeginForm(MVC.API.UserFlag.Delete(Model.UserFlag.Id, true)))
                {
                    
            
            #line default
            #line hidden
            
            #line 895 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
               Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 895 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                            
                }

            
            #line default
            #line hidden
WriteLiteral("                <p>\r\n                    <i");

WriteLiteral(" class=\"fa fa-exclamation-triangle fa-lg warning\"");

WriteLiteral("></i>\r\n                    This item will be permanently deleted and cannot be re" +
"covered.<br />\r\n                    <br />\r\n");

            
            #line 901 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 901 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                     if (Model.CurrentAssignmentCount > 0)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <strong>");

            
            #line 903 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                           Write(Model.CurrentAssignmentCount);

            
            #line default
            #line hidden
WriteLiteral(" user");

            
            #line 903 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                              Write(Model.CurrentAssignmentCount != 1 ? "s are" : " is");

            
            #line default
            #line hidden
WriteLiteral(" currently assigned</strong>\r\n");

WriteLiteral("                        <br />\r\n");

WriteLiteral("                        <br />\r\n");

            
            #line 906 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    Are you sure?\r\n                </p>\r\n            </div>\r\n");

WriteLiteral("            <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">
                $(function () {
                    let buttonDialog = null;
                    $('#Config_UserFlags_Actions_Delete_Button').on('click', function () {
                        const $button = $(this);
                        if (!buttonDialog) {
                            buttonDialog = $('#Config_UserFlags_Actions_Delete_Dialog').dialog({
                                resizable: false,
                                modal: true,
                                autoOpen: false,
                                buttons: {
                                    ""Delete"": function () {
                                        $(this)
                                            .dialog(""option"", ""buttons"", null)
                                            .find('form').trigger('submit');
                                    },
                                    Cancel: function () {
                                        $(this).dialog(""close"");
                                    }
                                }
                            });
                        }
                        buttonDialog.dialog('open');
                    });
                });
            </script>
");

            
            #line 936 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        ");

            
            #line 937 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
         if (canShowUsers)
        {
            
            
            #line default
            #line hidden
            
            #line 939 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
       Write(Html.ActionLinkButton(string.Format("Show {0} user{1}", Model.CurrentAssignmentCount, (Model.CurrentAssignmentCount == 1 ? null : "s")), MVC.Search.Query(Model.UserFlag.Id.ToString(), "UserFlag"), "Config_UserFlags_Actions_ShowUsers_Button"));

            
            #line default
            #line hidden
            
            #line 939 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
                                                                                                                                                                                                                                                              
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n");

            
            #line 942 "..\..\Areas\Config\Views\UserFlag\Show.cshtml"
}

            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
