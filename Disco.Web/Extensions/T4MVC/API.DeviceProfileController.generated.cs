// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Disco.Web.Areas.API.Controllers
{
    public partial class DeviceProfileController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DeviceProfileController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DeviceProfileController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Update()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDescription()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDescription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateName()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateName);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateShortName()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateShortName);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDistributionType()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDistributionType);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateCertificateProviders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCertificateProviders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateCertificateAuthorityProviders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCertificateAuthorityProviders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateWirelessProfileProviders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWirelessProfileProviders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateOrganisationalUnit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateOrganisationalUnit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDefaultOrganisationAddress()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDefaultOrganisationAddress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateComputerNameTemplate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateComputerNameTemplate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateEnforceComputerNameConvention()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateEnforceComputerNameConvention);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateEnforceOrganisationalUnit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateEnforceOrganisationalUnit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateProvisionADAccount()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateProvisionADAccount);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateAssignedUserLocalAdmin()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAssignedUserLocalAdmin);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateAllowUntrustedReimageJobEnrolment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAllowUntrustedReimageJobEnrolment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDevicesLinkedGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDevicesLinkedGroup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateAssignedUsersLinkedGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAssignedUsersLinkedGroup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Default()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Default);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DefaultAddDeviceOffline()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DefaultAddDeviceOffline);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DeviceProfileController Actions { get { return MVC.API.DeviceProfile; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "API";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "DeviceProfile";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "DeviceProfile";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Update = "Update";
            public readonly string UpdateDescription = "UpdateDescription";
            public readonly string UpdateName = "UpdateName";
            public readonly string UpdateShortName = "UpdateShortName";
            public readonly string UpdateDistributionType = "UpdateDistributionType";
            public readonly string UpdateCertificateProviders = "UpdateCertificateProviders";
            public readonly string UpdateCertificateAuthorityProviders = "UpdateCertificateAuthorityProviders";
            public readonly string UpdateWirelessProfileProviders = "UpdateWirelessProfileProviders";
            public readonly string UpdateOrganisationalUnit = "UpdateOrganisationalUnit";
            public readonly string UpdateDefaultOrganisationAddress = "UpdateDefaultOrganisationAddress";
            public readonly string UpdateComputerNameTemplate = "UpdateComputerNameTemplate";
            public readonly string UpdateEnforceComputerNameConvention = "UpdateEnforceComputerNameConvention";
            public readonly string UpdateEnforceOrganisationalUnit = "UpdateEnforceOrganisationalUnit";
            public readonly string UpdateProvisionADAccount = "UpdateProvisionADAccount";
            public readonly string UpdateAssignedUserLocalAdmin = "UpdateAssignedUserLocalAdmin";
            public readonly string UpdateAllowUntrustedReimageJobEnrolment = "UpdateAllowUntrustedReimageJobEnrolment";
            public readonly string UpdateDevicesLinkedGroup = "UpdateDevicesLinkedGroup";
            public readonly string UpdateAssignedUsersLinkedGroup = "UpdateAssignedUsersLinkedGroup";
            public readonly string Delete = "Delete";
            public readonly string Default = "Default";
            public readonly string DefaultAddDeviceOffline = "DefaultAddDeviceOffline";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Update = "Update";
            public const string UpdateDescription = "UpdateDescription";
            public const string UpdateName = "UpdateName";
            public const string UpdateShortName = "UpdateShortName";
            public const string UpdateDistributionType = "UpdateDistributionType";
            public const string UpdateCertificateProviders = "UpdateCertificateProviders";
            public const string UpdateCertificateAuthorityProviders = "UpdateCertificateAuthorityProviders";
            public const string UpdateWirelessProfileProviders = "UpdateWirelessProfileProviders";
            public const string UpdateOrganisationalUnit = "UpdateOrganisationalUnit";
            public const string UpdateDefaultOrganisationAddress = "UpdateDefaultOrganisationAddress";
            public const string UpdateComputerNameTemplate = "UpdateComputerNameTemplate";
            public const string UpdateEnforceComputerNameConvention = "UpdateEnforceComputerNameConvention";
            public const string UpdateEnforceOrganisationalUnit = "UpdateEnforceOrganisationalUnit";
            public const string UpdateProvisionADAccount = "UpdateProvisionADAccount";
            public const string UpdateAssignedUserLocalAdmin = "UpdateAssignedUserLocalAdmin";
            public const string UpdateAllowUntrustedReimageJobEnrolment = "UpdateAllowUntrustedReimageJobEnrolment";
            public const string UpdateDevicesLinkedGroup = "UpdateDevicesLinkedGroup";
            public const string UpdateAssignedUsersLinkedGroup = "UpdateAssignedUsersLinkedGroup";
            public const string Delete = "Delete";
            public const string Default = "Default";
            public const string DefaultAddDeviceOffline = "DefaultAddDeviceOffline";
        }


        static readonly ActionParamsClass_Update s_params_Update = new ActionParamsClass_Update();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Update UpdateParams { get { return s_params_Update; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Update
        {
            public readonly string id = "id";
            public readonly string key = "key";
            public readonly string value = "value";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateDescription s_params_UpdateDescription = new ActionParamsClass_UpdateDescription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDescription UpdateDescriptionParams { get { return s_params_UpdateDescription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDescription
        {
            public readonly string id = "id";
            public readonly string Description = "Description";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateName s_params_UpdateName = new ActionParamsClass_UpdateName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateName UpdateNameParams { get { return s_params_UpdateName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateName
        {
            public readonly string id = "id";
            public readonly string ProfileName = "ProfileName";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateShortName s_params_UpdateShortName = new ActionParamsClass_UpdateShortName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateShortName UpdateShortNameParams { get { return s_params_UpdateShortName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateShortName
        {
            public readonly string id = "id";
            public readonly string ShortName = "ShortName";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateDistributionType s_params_UpdateDistributionType = new ActionParamsClass_UpdateDistributionType();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDistributionType UpdateDistributionTypeParams { get { return s_params_UpdateDistributionType; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDistributionType
        {
            public readonly string id = "id";
            public readonly string DistributionType = "DistributionType";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateCertificateProviders s_params_UpdateCertificateProviders = new ActionParamsClass_UpdateCertificateProviders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateCertificateProviders UpdateCertificateProvidersParams { get { return s_params_UpdateCertificateProviders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateCertificateProviders
        {
            public readonly string id = "id";
            public readonly string CertificateProviders = "CertificateProviders";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateCertificateAuthorityProviders s_params_UpdateCertificateAuthorityProviders = new ActionParamsClass_UpdateCertificateAuthorityProviders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateCertificateAuthorityProviders UpdateCertificateAuthorityProvidersParams { get { return s_params_UpdateCertificateAuthorityProviders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateCertificateAuthorityProviders
        {
            public readonly string id = "id";
            public readonly string CertificateAuthorityProviders = "CertificateAuthorityProviders";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateWirelessProfileProviders s_params_UpdateWirelessProfileProviders = new ActionParamsClass_UpdateWirelessProfileProviders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateWirelessProfileProviders UpdateWirelessProfileProvidersParams { get { return s_params_UpdateWirelessProfileProviders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateWirelessProfileProviders
        {
            public readonly string id = "id";
            public readonly string WirelessProfileProviders = "WirelessProfileProviders";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateOrganisationalUnit s_params_UpdateOrganisationalUnit = new ActionParamsClass_UpdateOrganisationalUnit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateOrganisationalUnit UpdateOrganisationalUnitParams { get { return s_params_UpdateOrganisationalUnit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateOrganisationalUnit
        {
            public readonly string id = "id";
            public readonly string OrganisationalUnit = "OrganisationalUnit";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateDefaultOrganisationAddress s_params_UpdateDefaultOrganisationAddress = new ActionParamsClass_UpdateDefaultOrganisationAddress();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDefaultOrganisationAddress UpdateDefaultOrganisationAddressParams { get { return s_params_UpdateDefaultOrganisationAddress; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDefaultOrganisationAddress
        {
            public readonly string id = "id";
            public readonly string DefaultOrganisationAddress = "DefaultOrganisationAddress";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateComputerNameTemplate s_params_UpdateComputerNameTemplate = new ActionParamsClass_UpdateComputerNameTemplate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateComputerNameTemplate UpdateComputerNameTemplateParams { get { return s_params_UpdateComputerNameTemplate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateComputerNameTemplate
        {
            public readonly string id = "id";
            public readonly string ComputerNameTemplate = "ComputerNameTemplate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateEnforceComputerNameConvention s_params_UpdateEnforceComputerNameConvention = new ActionParamsClass_UpdateEnforceComputerNameConvention();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateEnforceComputerNameConvention UpdateEnforceComputerNameConventionParams { get { return s_params_UpdateEnforceComputerNameConvention; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateEnforceComputerNameConvention
        {
            public readonly string id = "id";
            public readonly string EnforceComputerNameConvention = "EnforceComputerNameConvention";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateEnforceOrganisationalUnit s_params_UpdateEnforceOrganisationalUnit = new ActionParamsClass_UpdateEnforceOrganisationalUnit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateEnforceOrganisationalUnit UpdateEnforceOrganisationalUnitParams { get { return s_params_UpdateEnforceOrganisationalUnit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateEnforceOrganisationalUnit
        {
            public readonly string id = "id";
            public readonly string EnforceOrganisationalUnit = "EnforceOrganisationalUnit";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateProvisionADAccount s_params_UpdateProvisionADAccount = new ActionParamsClass_UpdateProvisionADAccount();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateProvisionADAccount UpdateProvisionADAccountParams { get { return s_params_UpdateProvisionADAccount; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateProvisionADAccount
        {
            public readonly string id = "id";
            public readonly string ProvisionADAccount = "ProvisionADAccount";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateAssignedUserLocalAdmin s_params_UpdateAssignedUserLocalAdmin = new ActionParamsClass_UpdateAssignedUserLocalAdmin();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateAssignedUserLocalAdmin UpdateAssignedUserLocalAdminParams { get { return s_params_UpdateAssignedUserLocalAdmin; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateAssignedUserLocalAdmin
        {
            public readonly string id = "id";
            public readonly string AssignedUserLocalAdmin = "AssignedUserLocalAdmin";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateAllowUntrustedReimageJobEnrolment s_params_UpdateAllowUntrustedReimageJobEnrolment = new ActionParamsClass_UpdateAllowUntrustedReimageJobEnrolment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateAllowUntrustedReimageJobEnrolment UpdateAllowUntrustedReimageJobEnrolmentParams { get { return s_params_UpdateAllowUntrustedReimageJobEnrolment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateAllowUntrustedReimageJobEnrolment
        {
            public readonly string id = "id";
            public readonly string AllowUntrustedReimageJobEnrolment = "AllowUntrustedReimageJobEnrolment";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateDevicesLinkedGroup s_params_UpdateDevicesLinkedGroup = new ActionParamsClass_UpdateDevicesLinkedGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDevicesLinkedGroup UpdateDevicesLinkedGroupParams { get { return s_params_UpdateDevicesLinkedGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDevicesLinkedGroup
        {
            public readonly string id = "id";
            public readonly string GroupId = "GroupId";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateAssignedUsersLinkedGroup s_params_UpdateAssignedUsersLinkedGroup = new ActionParamsClass_UpdateAssignedUsersLinkedGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateAssignedUsersLinkedGroup UpdateAssignedUsersLinkedGroupParams { get { return s_params_UpdateAssignedUsersLinkedGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateAssignedUsersLinkedGroup
        {
            public readonly string id = "id";
            public readonly string GroupId = "GroupId";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Default s_params_Default = new ActionParamsClass_Default();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Default DefaultParams { get { return s_params_Default; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Default
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_DefaultAddDeviceOffline s_params_DefaultAddDeviceOffline = new ActionParamsClass_DefaultAddDeviceOffline();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DefaultAddDeviceOffline DefaultAddDeviceOfflineParams { get { return s_params_DefaultAddDeviceOffline; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DefaultAddDeviceOffline
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DeviceProfileController : Disco.Web.Areas.API.Controllers.DeviceProfileController
    {
        public T4MVC_DeviceProfileController() : base(Dummy.Instance) { }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string key, string value, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(int id, string key, string value, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateOverride(callInfo, id, key, value, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDescriptionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Description, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDescription(int id, string Description, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDescription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Description", Description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateDescriptionOverride(callInfo, id, Description, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ProfileName, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateName(int id, string ProfileName, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProfileName", ProfileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNameOverride(callInfo, id, ProfileName, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateShortNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ShortName, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateShortName(int id, string ShortName, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateShortName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ShortName", ShortName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateShortNameOverride(callInfo, id, ShortName, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDistributionTypeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string DistributionType, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDistributionType(int id, string DistributionType, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDistributionType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DistributionType", DistributionType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateDistributionTypeOverride(callInfo, id, DistributionType, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCertificateProvidersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string CertificateProviders, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCertificateProviders(int id, string CertificateProviders, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCertificateProviders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "CertificateProviders", CertificateProviders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateCertificateProvidersOverride(callInfo, id, CertificateProviders, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCertificateAuthorityProvidersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string CertificateAuthorityProviders, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCertificateAuthorityProviders(int id, string CertificateAuthorityProviders, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCertificateAuthorityProviders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "CertificateAuthorityProviders", CertificateAuthorityProviders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateCertificateAuthorityProvidersOverride(callInfo, id, CertificateAuthorityProviders, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateWirelessProfileProvidersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string WirelessProfileProviders, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateWirelessProfileProviders(int id, string WirelessProfileProviders, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWirelessProfileProviders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "WirelessProfileProviders", WirelessProfileProviders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateWirelessProfileProvidersOverride(callInfo, id, WirelessProfileProviders, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOrganisationalUnitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string OrganisationalUnit, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateOrganisationalUnit(int id, string OrganisationalUnit, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateOrganisationalUnit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "OrganisationalUnit", OrganisationalUnit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateOrganisationalUnitOverride(callInfo, id, OrganisationalUnit, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDefaultOrganisationAddressOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string DefaultOrganisationAddress, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDefaultOrganisationAddress(int id, string DefaultOrganisationAddress, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDefaultOrganisationAddress);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DefaultOrganisationAddress", DefaultOrganisationAddress);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateDefaultOrganisationAddressOverride(callInfo, id, DefaultOrganisationAddress, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateComputerNameTemplateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ComputerNameTemplate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateComputerNameTemplate(int id, string ComputerNameTemplate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateComputerNameTemplate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ComputerNameTemplate", ComputerNameTemplate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateComputerNameTemplateOverride(callInfo, id, ComputerNameTemplate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateEnforceComputerNameConventionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string EnforceComputerNameConvention, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateEnforceComputerNameConvention(int id, string EnforceComputerNameConvention, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateEnforceComputerNameConvention);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EnforceComputerNameConvention", EnforceComputerNameConvention);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateEnforceComputerNameConventionOverride(callInfo, id, EnforceComputerNameConvention, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateEnforceOrganisationalUnitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string EnforceOrganisationalUnit, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateEnforceOrganisationalUnit(int id, string EnforceOrganisationalUnit, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateEnforceOrganisationalUnit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EnforceOrganisationalUnit", EnforceOrganisationalUnit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateEnforceOrganisationalUnitOverride(callInfo, id, EnforceOrganisationalUnit, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateProvisionADAccountOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ProvisionADAccount, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateProvisionADAccount(int id, string ProvisionADAccount, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateProvisionADAccount);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ProvisionADAccount", ProvisionADAccount);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateProvisionADAccountOverride(callInfo, id, ProvisionADAccount, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateAssignedUserLocalAdminOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string AssignedUserLocalAdmin, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateAssignedUserLocalAdmin(int id, string AssignedUserLocalAdmin, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAssignedUserLocalAdmin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AssignedUserLocalAdmin", AssignedUserLocalAdmin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateAssignedUserLocalAdminOverride(callInfo, id, AssignedUserLocalAdmin, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateAllowUntrustedReimageJobEnrolmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string AllowUntrustedReimageJobEnrolment, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateAllowUntrustedReimageJobEnrolment(int id, string AllowUntrustedReimageJobEnrolment, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAllowUntrustedReimageJobEnrolment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AllowUntrustedReimageJobEnrolment", AllowUntrustedReimageJobEnrolment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateAllowUntrustedReimageJobEnrolmentOverride(callInfo, id, AllowUntrustedReimageJobEnrolment, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDevicesLinkedGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string GroupId, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDevicesLinkedGroup(int id, string GroupId, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDevicesLinkedGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "GroupId", GroupId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateDevicesLinkedGroupOverride(callInfo, id, GroupId, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateAssignedUsersLinkedGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string GroupId, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateAssignedUsersLinkedGroup(int id, string GroupId, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAssignedUsersLinkedGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "GroupId", GroupId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateAssignedUsersLinkedGroupOverride(callInfo, id, GroupId, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(int id, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DeleteOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DefaultOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Default(int id, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Default);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DefaultOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DefaultAddDeviceOfflineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult DefaultAddDeviceOffline(int id, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DefaultAddDeviceOffline);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DefaultAddDeviceOfflineOverride(callInfo, id, redirect);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
