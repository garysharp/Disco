// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Disco.Web.Areas.API.Controllers
{
    public partial class JobController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public JobController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected JobController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Update()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateExpectedClosedDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateExpectedClosedDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDeviceHeldLocation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDeviceHeldLocation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateFlags()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFlags);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyAccountingChargeRequired()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyAccountingChargeRequired);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyAccountingChargeAdded()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyAccountingChargeAdded);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyAccountingChargePaid()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyAccountingChargePaid);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyPurchaseOrderRaised()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyPurchaseOrderRaised);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyPurchaseOrderReference()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyPurchaseOrderReference);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyPurchaseOrderSent()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyPurchaseOrderSent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyInvoiceReceived()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyInvoiceReceived);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerName()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerName);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerLoggedDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerLoggedDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerReference()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerReference);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerCompletedDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerCompletedDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateNonWarrantyIsInsuranceClaim()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyIsInsuranceClaim);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceLossOrDamageDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceLossOrDamageDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceEventLocation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceEventLocation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceDescription()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceDescription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceThirdPartyCaused()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceThirdPartyCaused);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceThirdPartyCausedName()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceThirdPartyCausedName);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceThirdPartyCausedWhy()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceThirdPartyCausedWhy);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceWitnessesNamesAddresses()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceWitnessesNamesAddresses);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceBurglaryTheftMethodOfEntry()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceBurglaryTheftMethodOfEntry);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsurancePropertyLastSeenDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePropertyLastSeenDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsurancePoliceNotified()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotified);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsurancePoliceNotifiedStation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotifiedStation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsurancePoliceNotifiedDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotifiedDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsurancePoliceNotifiedCrimeReportNo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotifiedCrimeReportNo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceRecoverReduceAction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceRecoverReduceAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceOtherInterestedParties()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceOtherInterestedParties);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceDateOfPurchase()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceDateOfPurchase);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceClaimFormSentDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceClaimFormSentDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceClaimFormSentUserId()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceClaimFormSentUserId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateWarrantyExternalName()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalName);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateWarrantyExternalLoggedDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalLoggedDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateWarrantyExternalReference()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalReference);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateWarrantyExternalCompletedDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalCompletedDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateSubTypes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSubTypes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateFlag()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFlag);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult WaitingForUserAction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WaitingForUserAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult NotWaitingForUserAction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NotWaitingForUserAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeviceReadyForReturn()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeviceReadyForReturn);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeviceHeld()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeviceHeld);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeviceReturned()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeviceReturned);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForceClose()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForceClose);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Close()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Close);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Reopen()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Reopen);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ConvertHWarToHNWar()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConvertHWarToHNWar);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Comments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Comments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Comment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Comment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CommentPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CommentPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CommentRemove()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CommentRemove);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AttachmentDownload()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentDownload);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AttachmentThumbnail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentThumbnail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AttachmentUpload()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentUpload);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Attachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Attachments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AttachmentRemove()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentRemove);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ComponentAdd()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ComponentAdd);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ComponentUpdate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ComponentUpdate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ComponentRemove()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ComponentRemove);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GeneratePdf()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GeneratePdf);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GeneratePdfPackage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GeneratePdfPackage);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public JobController Actions { get { return MVC.API.Job; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "API";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Job";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Job";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Update = "Update";
            public readonly string UpdateExpectedClosedDate = "UpdateExpectedClosedDate";
            public readonly string UpdateDeviceHeldLocation = "UpdateDeviceHeldLocation";
            public readonly string UpdateFlags = "UpdateFlags";
            public readonly string UpdateNonWarrantyAccountingChargeRequired = "UpdateNonWarrantyAccountingChargeRequired";
            public readonly string UpdateNonWarrantyAccountingChargeAdded = "UpdateNonWarrantyAccountingChargeAdded";
            public readonly string UpdateNonWarrantyAccountingChargePaid = "UpdateNonWarrantyAccountingChargePaid";
            public readonly string UpdateNonWarrantyPurchaseOrderRaised = "UpdateNonWarrantyPurchaseOrderRaised";
            public readonly string UpdateNonWarrantyPurchaseOrderReference = "UpdateNonWarrantyPurchaseOrderReference";
            public readonly string UpdateNonWarrantyPurchaseOrderSent = "UpdateNonWarrantyPurchaseOrderSent";
            public readonly string UpdateNonWarrantyInvoiceReceived = "UpdateNonWarrantyInvoiceReceived";
            public readonly string UpdateNonWarrantyRepairerName = "UpdateNonWarrantyRepairerName";
            public readonly string UpdateNonWarrantyRepairerLoggedDate = "UpdateNonWarrantyRepairerLoggedDate";
            public readonly string UpdateNonWarrantyRepairerReference = "UpdateNonWarrantyRepairerReference";
            public readonly string UpdateNonWarrantyRepairerCompletedDate = "UpdateNonWarrantyRepairerCompletedDate";
            public readonly string UpdateNonWarrantyIsInsuranceClaim = "UpdateNonWarrantyIsInsuranceClaim";
            public readonly string UpdateInsuranceLossOrDamageDate = "UpdateInsuranceLossOrDamageDate";
            public readonly string UpdateInsuranceEventLocation = "UpdateInsuranceEventLocation";
            public readonly string UpdateInsuranceDescription = "UpdateInsuranceDescription";
            public readonly string UpdateInsuranceThirdPartyCaused = "UpdateInsuranceThirdPartyCaused";
            public readonly string UpdateInsuranceThirdPartyCausedName = "UpdateInsuranceThirdPartyCausedName";
            public readonly string UpdateInsuranceThirdPartyCausedWhy = "UpdateInsuranceThirdPartyCausedWhy";
            public readonly string UpdateInsuranceWitnessesNamesAddresses = "UpdateInsuranceWitnessesNamesAddresses";
            public readonly string UpdateInsuranceBurglaryTheftMethodOfEntry = "UpdateInsuranceBurglaryTheftMethodOfEntry";
            public readonly string UpdateInsurancePropertyLastSeenDate = "UpdateInsurancePropertyLastSeenDate";
            public readonly string UpdateInsurancePoliceNotified = "UpdateInsurancePoliceNotified";
            public readonly string UpdateInsurancePoliceNotifiedStation = "UpdateInsurancePoliceNotifiedStation";
            public readonly string UpdateInsurancePoliceNotifiedDate = "UpdateInsurancePoliceNotifiedDate";
            public readonly string UpdateInsurancePoliceNotifiedCrimeReportNo = "UpdateInsurancePoliceNotifiedCrimeReportNo";
            public readonly string UpdateInsuranceRecoverReduceAction = "UpdateInsuranceRecoverReduceAction";
            public readonly string UpdateInsuranceOtherInterestedParties = "UpdateInsuranceOtherInterestedParties";
            public readonly string UpdateInsuranceDateOfPurchase = "UpdateInsuranceDateOfPurchase";
            public readonly string UpdateInsuranceClaimFormSentDate = "UpdateInsuranceClaimFormSentDate";
            public readonly string UpdateInsuranceClaimFormSentUserId = "UpdateInsuranceClaimFormSentUserId";
            public readonly string UpdateWarrantyExternalName = "UpdateWarrantyExternalName";
            public readonly string UpdateWarrantyExternalLoggedDate = "UpdateWarrantyExternalLoggedDate";
            public readonly string UpdateWarrantyExternalReference = "UpdateWarrantyExternalReference";
            public readonly string UpdateWarrantyExternalCompletedDate = "UpdateWarrantyExternalCompletedDate";
            public readonly string UpdateSubTypes = "UpdateSubTypes";
            public readonly string UpdateFlag = "UpdateFlag";
            public readonly string WaitingForUserAction = "WaitingForUserAction";
            public readonly string NotWaitingForUserAction = "NotWaitingForUserAction";
            public readonly string DeviceReadyForReturn = "DeviceReadyForReturn";
            public readonly string DeviceHeld = "DeviceHeld";
            public readonly string DeviceReturned = "DeviceReturned";
            public readonly string ForceClose = "ForceClose";
            public readonly string Close = "Close";
            public readonly string Reopen = "Reopen";
            public readonly string Delete = "Delete";
            public readonly string ConvertHWarToHNWar = "ConvertHWarToHNWar";
            public readonly string Comments = "Comments";
            public readonly string Comment = "Comment";
            public readonly string CommentPost = "CommentPost";
            public readonly string CommentRemove = "CommentRemove";
            public readonly string AttachmentDownload = "AttachmentDownload";
            public readonly string AttachmentThumbnail = "AttachmentThumbnail";
            public readonly string AttachmentUpload = "AttachmentUpload";
            public readonly string Attachment = "Attachment";
            public readonly string Attachments = "Attachments";
            public readonly string AttachmentRemove = "AttachmentRemove";
            public readonly string ComponentAdd = "ComponentAdd";
            public readonly string ComponentUpdate = "ComponentUpdate";
            public readonly string ComponentRemove = "ComponentRemove";
            public readonly string StatisticsDailyOpenedClosed = "StatisticsDailyOpenedClosed";
            public readonly string GeneratePdf = "GeneratePdf";
            public readonly string GeneratePdfPackage = "GeneratePdfPackage";
            public readonly string DeviceHeldLocations = "DeviceHeldLocations";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Update = "Update";
            public const string UpdateExpectedClosedDate = "UpdateExpectedClosedDate";
            public const string UpdateDeviceHeldLocation = "UpdateDeviceHeldLocation";
            public const string UpdateFlags = "UpdateFlags";
            public const string UpdateNonWarrantyAccountingChargeRequired = "UpdateNonWarrantyAccountingChargeRequired";
            public const string UpdateNonWarrantyAccountingChargeAdded = "UpdateNonWarrantyAccountingChargeAdded";
            public const string UpdateNonWarrantyAccountingChargePaid = "UpdateNonWarrantyAccountingChargePaid";
            public const string UpdateNonWarrantyPurchaseOrderRaised = "UpdateNonWarrantyPurchaseOrderRaised";
            public const string UpdateNonWarrantyPurchaseOrderReference = "UpdateNonWarrantyPurchaseOrderReference";
            public const string UpdateNonWarrantyPurchaseOrderSent = "UpdateNonWarrantyPurchaseOrderSent";
            public const string UpdateNonWarrantyInvoiceReceived = "UpdateNonWarrantyInvoiceReceived";
            public const string UpdateNonWarrantyRepairerName = "UpdateNonWarrantyRepairerName";
            public const string UpdateNonWarrantyRepairerLoggedDate = "UpdateNonWarrantyRepairerLoggedDate";
            public const string UpdateNonWarrantyRepairerReference = "UpdateNonWarrantyRepairerReference";
            public const string UpdateNonWarrantyRepairerCompletedDate = "UpdateNonWarrantyRepairerCompletedDate";
            public const string UpdateNonWarrantyIsInsuranceClaim = "UpdateNonWarrantyIsInsuranceClaim";
            public const string UpdateInsuranceLossOrDamageDate = "UpdateInsuranceLossOrDamageDate";
            public const string UpdateInsuranceEventLocation = "UpdateInsuranceEventLocation";
            public const string UpdateInsuranceDescription = "UpdateInsuranceDescription";
            public const string UpdateInsuranceThirdPartyCaused = "UpdateInsuranceThirdPartyCaused";
            public const string UpdateInsuranceThirdPartyCausedName = "UpdateInsuranceThirdPartyCausedName";
            public const string UpdateInsuranceThirdPartyCausedWhy = "UpdateInsuranceThirdPartyCausedWhy";
            public const string UpdateInsuranceWitnessesNamesAddresses = "UpdateInsuranceWitnessesNamesAddresses";
            public const string UpdateInsuranceBurglaryTheftMethodOfEntry = "UpdateInsuranceBurglaryTheftMethodOfEntry";
            public const string UpdateInsurancePropertyLastSeenDate = "UpdateInsurancePropertyLastSeenDate";
            public const string UpdateInsurancePoliceNotified = "UpdateInsurancePoliceNotified";
            public const string UpdateInsurancePoliceNotifiedStation = "UpdateInsurancePoliceNotifiedStation";
            public const string UpdateInsurancePoliceNotifiedDate = "UpdateInsurancePoliceNotifiedDate";
            public const string UpdateInsurancePoliceNotifiedCrimeReportNo = "UpdateInsurancePoliceNotifiedCrimeReportNo";
            public const string UpdateInsuranceRecoverReduceAction = "UpdateInsuranceRecoverReduceAction";
            public const string UpdateInsuranceOtherInterestedParties = "UpdateInsuranceOtherInterestedParties";
            public const string UpdateInsuranceDateOfPurchase = "UpdateInsuranceDateOfPurchase";
            public const string UpdateInsuranceClaimFormSentDate = "UpdateInsuranceClaimFormSentDate";
            public const string UpdateInsuranceClaimFormSentUserId = "UpdateInsuranceClaimFormSentUserId";
            public const string UpdateWarrantyExternalName = "UpdateWarrantyExternalName";
            public const string UpdateWarrantyExternalLoggedDate = "UpdateWarrantyExternalLoggedDate";
            public const string UpdateWarrantyExternalReference = "UpdateWarrantyExternalReference";
            public const string UpdateWarrantyExternalCompletedDate = "UpdateWarrantyExternalCompletedDate";
            public const string UpdateSubTypes = "UpdateSubTypes";
            public const string UpdateFlag = "UpdateFlag";
            public const string WaitingForUserAction = "WaitingForUserAction";
            public const string NotWaitingForUserAction = "NotWaitingForUserAction";
            public const string DeviceReadyForReturn = "DeviceReadyForReturn";
            public const string DeviceHeld = "DeviceHeld";
            public const string DeviceReturned = "DeviceReturned";
            public const string ForceClose = "ForceClose";
            public const string Close = "Close";
            public const string Reopen = "Reopen";
            public const string Delete = "Delete";
            public const string ConvertHWarToHNWar = "ConvertHWarToHNWar";
            public const string Comments = "Comments";
            public const string Comment = "Comment";
            public const string CommentPost = "CommentPost";
            public const string CommentRemove = "CommentRemove";
            public const string AttachmentDownload = "AttachmentDownload";
            public const string AttachmentThumbnail = "AttachmentThumbnail";
            public const string AttachmentUpload = "AttachmentUpload";
            public const string Attachment = "Attachment";
            public const string Attachments = "Attachments";
            public const string AttachmentRemove = "AttachmentRemove";
            public const string ComponentAdd = "ComponentAdd";
            public const string ComponentUpdate = "ComponentUpdate";
            public const string ComponentRemove = "ComponentRemove";
            public const string StatisticsDailyOpenedClosed = "StatisticsDailyOpenedClosed";
            public const string GeneratePdf = "GeneratePdf";
            public const string GeneratePdfPackage = "GeneratePdfPackage";
            public const string DeviceHeldLocations = "DeviceHeldLocations";
        }


        static readonly ActionParamsClass_Update s_params_Update = new ActionParamsClass_Update();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Update UpdateParams { get { return s_params_Update; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Update
        {
            public readonly string id = "id";
            public readonly string key = "key";
            public readonly string value = "value";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateExpectedClosedDate s_params_UpdateExpectedClosedDate = new ActionParamsClass_UpdateExpectedClosedDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateExpectedClosedDate UpdateExpectedClosedDateParams { get { return s_params_UpdateExpectedClosedDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateExpectedClosedDate
        {
            public readonly string id = "id";
            public readonly string ExpectedClosedDate = "ExpectedClosedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateDeviceHeldLocation s_params_UpdateDeviceHeldLocation = new ActionParamsClass_UpdateDeviceHeldLocation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDeviceHeldLocation UpdateDeviceHeldLocationParams { get { return s_params_UpdateDeviceHeldLocation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDeviceHeldLocation
        {
            public readonly string id = "id";
            public readonly string DeviceHeldLocation = "DeviceHeldLocation";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateFlags s_params_UpdateFlags = new ActionParamsClass_UpdateFlags();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateFlags UpdateFlagsParams { get { return s_params_UpdateFlags; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateFlags
        {
            public readonly string id = "id";
            public readonly string Flags = "Flags";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyAccountingChargeRequired s_params_UpdateNonWarrantyAccountingChargeRequired = new ActionParamsClass_UpdateNonWarrantyAccountingChargeRequired();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyAccountingChargeRequired UpdateNonWarrantyAccountingChargeRequiredParams { get { return s_params_UpdateNonWarrantyAccountingChargeRequired; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyAccountingChargeRequired
        {
            public readonly string id = "id";
            public readonly string AccountingChargeRequiredDate = "AccountingChargeRequiredDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyAccountingChargeAdded s_params_UpdateNonWarrantyAccountingChargeAdded = new ActionParamsClass_UpdateNonWarrantyAccountingChargeAdded();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyAccountingChargeAdded UpdateNonWarrantyAccountingChargeAddedParams { get { return s_params_UpdateNonWarrantyAccountingChargeAdded; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyAccountingChargeAdded
        {
            public readonly string id = "id";
            public readonly string AccountingChargeAddedDate = "AccountingChargeAddedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyAccountingChargePaid s_params_UpdateNonWarrantyAccountingChargePaid = new ActionParamsClass_UpdateNonWarrantyAccountingChargePaid();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyAccountingChargePaid UpdateNonWarrantyAccountingChargePaidParams { get { return s_params_UpdateNonWarrantyAccountingChargePaid; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyAccountingChargePaid
        {
            public readonly string id = "id";
            public readonly string AccountingChargePaidDate = "AccountingChargePaidDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyPurchaseOrderRaised s_params_UpdateNonWarrantyPurchaseOrderRaised = new ActionParamsClass_UpdateNonWarrantyPurchaseOrderRaised();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyPurchaseOrderRaised UpdateNonWarrantyPurchaseOrderRaisedParams { get { return s_params_UpdateNonWarrantyPurchaseOrderRaised; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyPurchaseOrderRaised
        {
            public readonly string id = "id";
            public readonly string PurchaseOrderRaisedDate = "PurchaseOrderRaisedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyPurchaseOrderReference s_params_UpdateNonWarrantyPurchaseOrderReference = new ActionParamsClass_UpdateNonWarrantyPurchaseOrderReference();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyPurchaseOrderReference UpdateNonWarrantyPurchaseOrderReferenceParams { get { return s_params_UpdateNonWarrantyPurchaseOrderReference; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyPurchaseOrderReference
        {
            public readonly string id = "id";
            public readonly string PurchaseOrderReference = "PurchaseOrderReference";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyPurchaseOrderSent s_params_UpdateNonWarrantyPurchaseOrderSent = new ActionParamsClass_UpdateNonWarrantyPurchaseOrderSent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyPurchaseOrderSent UpdateNonWarrantyPurchaseOrderSentParams { get { return s_params_UpdateNonWarrantyPurchaseOrderSent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyPurchaseOrderSent
        {
            public readonly string id = "id";
            public readonly string PurchaseOrderSentDate = "PurchaseOrderSentDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyInvoiceReceived s_params_UpdateNonWarrantyInvoiceReceived = new ActionParamsClass_UpdateNonWarrantyInvoiceReceived();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyInvoiceReceived UpdateNonWarrantyInvoiceReceivedParams { get { return s_params_UpdateNonWarrantyInvoiceReceived; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyInvoiceReceived
        {
            public readonly string id = "id";
            public readonly string InvoiceReceivedDate = "InvoiceReceivedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyRepairerName s_params_UpdateNonWarrantyRepairerName = new ActionParamsClass_UpdateNonWarrantyRepairerName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyRepairerName UpdateNonWarrantyRepairerNameParams { get { return s_params_UpdateNonWarrantyRepairerName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyRepairerName
        {
            public readonly string id = "id";
            public readonly string RepairerName = "RepairerName";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyRepairerLoggedDate s_params_UpdateNonWarrantyRepairerLoggedDate = new ActionParamsClass_UpdateNonWarrantyRepairerLoggedDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyRepairerLoggedDate UpdateNonWarrantyRepairerLoggedDateParams { get { return s_params_UpdateNonWarrantyRepairerLoggedDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyRepairerLoggedDate
        {
            public readonly string id = "id";
            public readonly string RepairerLoggedDate = "RepairerLoggedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyRepairerReference s_params_UpdateNonWarrantyRepairerReference = new ActionParamsClass_UpdateNonWarrantyRepairerReference();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyRepairerReference UpdateNonWarrantyRepairerReferenceParams { get { return s_params_UpdateNonWarrantyRepairerReference; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyRepairerReference
        {
            public readonly string id = "id";
            public readonly string RepairerReference = "RepairerReference";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyRepairerCompletedDate s_params_UpdateNonWarrantyRepairerCompletedDate = new ActionParamsClass_UpdateNonWarrantyRepairerCompletedDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyRepairerCompletedDate UpdateNonWarrantyRepairerCompletedDateParams { get { return s_params_UpdateNonWarrantyRepairerCompletedDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyRepairerCompletedDate
        {
            public readonly string id = "id";
            public readonly string RepairerCompletedDate = "RepairerCompletedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateNonWarrantyIsInsuranceClaim s_params_UpdateNonWarrantyIsInsuranceClaim = new ActionParamsClass_UpdateNonWarrantyIsInsuranceClaim();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateNonWarrantyIsInsuranceClaim UpdateNonWarrantyIsInsuranceClaimParams { get { return s_params_UpdateNonWarrantyIsInsuranceClaim; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateNonWarrantyIsInsuranceClaim
        {
            public readonly string id = "id";
            public readonly string IsInsuranceClaim = "IsInsuranceClaim";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceLossOrDamageDate s_params_UpdateInsuranceLossOrDamageDate = new ActionParamsClass_UpdateInsuranceLossOrDamageDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceLossOrDamageDate UpdateInsuranceLossOrDamageDateParams { get { return s_params_UpdateInsuranceLossOrDamageDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceLossOrDamageDate
        {
            public readonly string id = "id";
            public readonly string LossOrDamageDate = "LossOrDamageDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceEventLocation s_params_UpdateInsuranceEventLocation = new ActionParamsClass_UpdateInsuranceEventLocation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceEventLocation UpdateInsuranceEventLocationParams { get { return s_params_UpdateInsuranceEventLocation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceEventLocation
        {
            public readonly string id = "id";
            public readonly string EventLocation = "EventLocation";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceDescription s_params_UpdateInsuranceDescription = new ActionParamsClass_UpdateInsuranceDescription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceDescription UpdateInsuranceDescriptionParams { get { return s_params_UpdateInsuranceDescription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceDescription
        {
            public readonly string id = "id";
            public readonly string Description = "Description";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceThirdPartyCaused s_params_UpdateInsuranceThirdPartyCaused = new ActionParamsClass_UpdateInsuranceThirdPartyCaused();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceThirdPartyCaused UpdateInsuranceThirdPartyCausedParams { get { return s_params_UpdateInsuranceThirdPartyCaused; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceThirdPartyCaused
        {
            public readonly string id = "id";
            public readonly string ThirdPartyCaused = "ThirdPartyCaused";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceThirdPartyCausedName s_params_UpdateInsuranceThirdPartyCausedName = new ActionParamsClass_UpdateInsuranceThirdPartyCausedName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceThirdPartyCausedName UpdateInsuranceThirdPartyCausedNameParams { get { return s_params_UpdateInsuranceThirdPartyCausedName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceThirdPartyCausedName
        {
            public readonly string id = "id";
            public readonly string ThirdPartyCausedName = "ThirdPartyCausedName";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceThirdPartyCausedWhy s_params_UpdateInsuranceThirdPartyCausedWhy = new ActionParamsClass_UpdateInsuranceThirdPartyCausedWhy();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceThirdPartyCausedWhy UpdateInsuranceThirdPartyCausedWhyParams { get { return s_params_UpdateInsuranceThirdPartyCausedWhy; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceThirdPartyCausedWhy
        {
            public readonly string id = "id";
            public readonly string ThirdPartyCausedWhy = "ThirdPartyCausedWhy";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceWitnessesNamesAddresses s_params_UpdateInsuranceWitnessesNamesAddresses = new ActionParamsClass_UpdateInsuranceWitnessesNamesAddresses();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceWitnessesNamesAddresses UpdateInsuranceWitnessesNamesAddressesParams { get { return s_params_UpdateInsuranceWitnessesNamesAddresses; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceWitnessesNamesAddresses
        {
            public readonly string id = "id";
            public readonly string WitnessesNamesAddresses = "WitnessesNamesAddresses";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceBurglaryTheftMethodOfEntry s_params_UpdateInsuranceBurglaryTheftMethodOfEntry = new ActionParamsClass_UpdateInsuranceBurglaryTheftMethodOfEntry();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceBurglaryTheftMethodOfEntry UpdateInsuranceBurglaryTheftMethodOfEntryParams { get { return s_params_UpdateInsuranceBurglaryTheftMethodOfEntry; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceBurglaryTheftMethodOfEntry
        {
            public readonly string id = "id";
            public readonly string BurglaryTheftMethodOfEntry = "BurglaryTheftMethodOfEntry";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsurancePropertyLastSeenDate s_params_UpdateInsurancePropertyLastSeenDate = new ActionParamsClass_UpdateInsurancePropertyLastSeenDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsurancePropertyLastSeenDate UpdateInsurancePropertyLastSeenDateParams { get { return s_params_UpdateInsurancePropertyLastSeenDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsurancePropertyLastSeenDate
        {
            public readonly string id = "id";
            public readonly string PropertyLastSeenDate = "PropertyLastSeenDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsurancePoliceNotified s_params_UpdateInsurancePoliceNotified = new ActionParamsClass_UpdateInsurancePoliceNotified();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsurancePoliceNotified UpdateInsurancePoliceNotifiedParams { get { return s_params_UpdateInsurancePoliceNotified; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsurancePoliceNotified
        {
            public readonly string id = "id";
            public readonly string PoliceNotified = "PoliceNotified";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsurancePoliceNotifiedStation s_params_UpdateInsurancePoliceNotifiedStation = new ActionParamsClass_UpdateInsurancePoliceNotifiedStation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsurancePoliceNotifiedStation UpdateInsurancePoliceNotifiedStationParams { get { return s_params_UpdateInsurancePoliceNotifiedStation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsurancePoliceNotifiedStation
        {
            public readonly string id = "id";
            public readonly string PoliceNotifiedStation = "PoliceNotifiedStation";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsurancePoliceNotifiedDate s_params_UpdateInsurancePoliceNotifiedDate = new ActionParamsClass_UpdateInsurancePoliceNotifiedDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsurancePoliceNotifiedDate UpdateInsurancePoliceNotifiedDateParams { get { return s_params_UpdateInsurancePoliceNotifiedDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsurancePoliceNotifiedDate
        {
            public readonly string id = "id";
            public readonly string PoliceNotifiedDate = "PoliceNotifiedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsurancePoliceNotifiedCrimeReportNo s_params_UpdateInsurancePoliceNotifiedCrimeReportNo = new ActionParamsClass_UpdateInsurancePoliceNotifiedCrimeReportNo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsurancePoliceNotifiedCrimeReportNo UpdateInsurancePoliceNotifiedCrimeReportNoParams { get { return s_params_UpdateInsurancePoliceNotifiedCrimeReportNo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsurancePoliceNotifiedCrimeReportNo
        {
            public readonly string id = "id";
            public readonly string PoliceNotifiedCrimeReportNo = "PoliceNotifiedCrimeReportNo";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceRecoverReduceAction s_params_UpdateInsuranceRecoverReduceAction = new ActionParamsClass_UpdateInsuranceRecoverReduceAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceRecoverReduceAction UpdateInsuranceRecoverReduceActionParams { get { return s_params_UpdateInsuranceRecoverReduceAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceRecoverReduceAction
        {
            public readonly string id = "id";
            public readonly string RecoverReduceAction = "RecoverReduceAction";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceOtherInterestedParties s_params_UpdateInsuranceOtherInterestedParties = new ActionParamsClass_UpdateInsuranceOtherInterestedParties();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceOtherInterestedParties UpdateInsuranceOtherInterestedPartiesParams { get { return s_params_UpdateInsuranceOtherInterestedParties; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceOtherInterestedParties
        {
            public readonly string id = "id";
            public readonly string OtherInterestedParties = "OtherInterestedParties";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceDateOfPurchase s_params_UpdateInsuranceDateOfPurchase = new ActionParamsClass_UpdateInsuranceDateOfPurchase();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceDateOfPurchase UpdateInsuranceDateOfPurchaseParams { get { return s_params_UpdateInsuranceDateOfPurchase; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceDateOfPurchase
        {
            public readonly string id = "id";
            public readonly string DateOfPurchase = "DateOfPurchase";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceClaimFormSentDate s_params_UpdateInsuranceClaimFormSentDate = new ActionParamsClass_UpdateInsuranceClaimFormSentDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceClaimFormSentDate UpdateInsuranceClaimFormSentDateParams { get { return s_params_UpdateInsuranceClaimFormSentDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceClaimFormSentDate
        {
            public readonly string id = "id";
            public readonly string ClaimFormSentDate = "ClaimFormSentDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceClaimFormSentUserId s_params_UpdateInsuranceClaimFormSentUserId = new ActionParamsClass_UpdateInsuranceClaimFormSentUserId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceClaimFormSentUserId UpdateInsuranceClaimFormSentUserIdParams { get { return s_params_UpdateInsuranceClaimFormSentUserId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceClaimFormSentUserId
        {
            public readonly string id = "id";
            public readonly string ClaimFormSentUserId = "ClaimFormSentUserId";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateWarrantyExternalName s_params_UpdateWarrantyExternalName = new ActionParamsClass_UpdateWarrantyExternalName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateWarrantyExternalName UpdateWarrantyExternalNameParams { get { return s_params_UpdateWarrantyExternalName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateWarrantyExternalName
        {
            public readonly string id = "id";
            public readonly string ExternalName = "ExternalName";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateWarrantyExternalLoggedDate s_params_UpdateWarrantyExternalLoggedDate = new ActionParamsClass_UpdateWarrantyExternalLoggedDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateWarrantyExternalLoggedDate UpdateWarrantyExternalLoggedDateParams { get { return s_params_UpdateWarrantyExternalLoggedDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateWarrantyExternalLoggedDate
        {
            public readonly string id = "id";
            public readonly string ExternalLoggedDate = "ExternalLoggedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateWarrantyExternalReference s_params_UpdateWarrantyExternalReference = new ActionParamsClass_UpdateWarrantyExternalReference();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateWarrantyExternalReference UpdateWarrantyExternalReferenceParams { get { return s_params_UpdateWarrantyExternalReference; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateWarrantyExternalReference
        {
            public readonly string id = "id";
            public readonly string ExternalReference = "ExternalReference";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateWarrantyExternalCompletedDate s_params_UpdateWarrantyExternalCompletedDate = new ActionParamsClass_UpdateWarrantyExternalCompletedDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateWarrantyExternalCompletedDate UpdateWarrantyExternalCompletedDateParams { get { return s_params_UpdateWarrantyExternalCompletedDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateWarrantyExternalCompletedDate
        {
            public readonly string id = "id";
            public readonly string ExternalCompletedDate = "ExternalCompletedDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateSubTypes s_params_UpdateSubTypes = new ActionParamsClass_UpdateSubTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateSubTypes UpdateSubTypesParams { get { return s_params_UpdateSubTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateSubTypes
        {
            public readonly string id = "id";
            public readonly string SubTypes = "SubTypes";
            public readonly string AddComponents = "AddComponents";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateFlag s_params_UpdateFlag = new ActionParamsClass_UpdateFlag();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateFlag UpdateFlagParams { get { return s_params_UpdateFlag; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateFlag
        {
            public readonly string id = "id";
            public readonly string Flag = "Flag";
            public readonly string Reason = "Reason";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_WaitingForUserAction s_params_WaitingForUserAction = new ActionParamsClass_WaitingForUserAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_WaitingForUserAction WaitingForUserActionParams { get { return s_params_WaitingForUserAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_WaitingForUserAction
        {
            public readonly string id = "id";
            public readonly string Reason = "Reason";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_NotWaitingForUserAction s_params_NotWaitingForUserAction = new ActionParamsClass_NotWaitingForUserAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NotWaitingForUserAction NotWaitingForUserActionParams { get { return s_params_NotWaitingForUserAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NotWaitingForUserAction
        {
            public readonly string id = "id";
            public readonly string Resolution = "Resolution";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_DeviceReadyForReturn s_params_DeviceReadyForReturn = new ActionParamsClass_DeviceReadyForReturn();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeviceReadyForReturn DeviceReadyForReturnParams { get { return s_params_DeviceReadyForReturn; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeviceReadyForReturn
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_DeviceHeld s_params_DeviceHeld = new ActionParamsClass_DeviceHeld();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeviceHeld DeviceHeldParams { get { return s_params_DeviceHeld; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeviceHeld
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_DeviceReturned s_params_DeviceReturned = new ActionParamsClass_DeviceReturned();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeviceReturned DeviceReturnedParams { get { return s_params_DeviceReturned; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeviceReturned
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_ForceClose s_params_ForceClose = new ActionParamsClass_ForceClose();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForceClose ForceCloseParams { get { return s_params_ForceClose; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForceClose
        {
            public readonly string id = "id";
            public readonly string Reason = "Reason";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Close s_params_Close = new ActionParamsClass_Close();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Close CloseParams { get { return s_params_Close; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Close
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Reopen s_params_Reopen = new ActionParamsClass_Reopen();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Reopen ReopenParams { get { return s_params_Reopen; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Reopen
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_ConvertHWarToHNWar s_params_ConvertHWarToHNWar = new ActionParamsClass_ConvertHWarToHNWar();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ConvertHWarToHNWar ConvertHWarToHNWarParams { get { return s_params_ConvertHWarToHNWar; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ConvertHWarToHNWar
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Comments s_params_Comments = new ActionParamsClass_Comments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Comments CommentsParams { get { return s_params_Comments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Comments
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Comment s_params_Comment = new ActionParamsClass_Comment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Comment CommentParams { get { return s_params_Comment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Comment
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CommentPost s_params_CommentPost = new ActionParamsClass_CommentPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CommentPost CommentPostParams { get { return s_params_CommentPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CommentPost
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ActionParamsClass_CommentRemove s_params_CommentRemove = new ActionParamsClass_CommentRemove();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CommentRemove CommentRemoveParams { get { return s_params_CommentRemove; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CommentRemove
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AttachmentDownload s_params_AttachmentDownload = new ActionParamsClass_AttachmentDownload();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AttachmentDownload AttachmentDownloadParams { get { return s_params_AttachmentDownload; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AttachmentDownload
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AttachmentThumbnail s_params_AttachmentThumbnail = new ActionParamsClass_AttachmentThumbnail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AttachmentThumbnail AttachmentThumbnailParams { get { return s_params_AttachmentThumbnail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AttachmentThumbnail
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AttachmentUpload s_params_AttachmentUpload = new ActionParamsClass_AttachmentUpload();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AttachmentUpload AttachmentUploadParams { get { return s_params_AttachmentUpload; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AttachmentUpload
        {
            public readonly string id = "id";
            public readonly string Comments = "Comments";
        }
        static readonly ActionParamsClass_Attachment s_params_Attachment = new ActionParamsClass_Attachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Attachment AttachmentParams { get { return s_params_Attachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Attachment
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Attachments s_params_Attachments = new ActionParamsClass_Attachments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Attachments AttachmentsParams { get { return s_params_Attachments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Attachments
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AttachmentRemove s_params_AttachmentRemove = new ActionParamsClass_AttachmentRemove();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AttachmentRemove AttachmentRemoveParams { get { return s_params_AttachmentRemove; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AttachmentRemove
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ComponentAdd s_params_ComponentAdd = new ActionParamsClass_ComponentAdd();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ComponentAdd ComponentAddParams { get { return s_params_ComponentAdd; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ComponentAdd
        {
            public readonly string id = "id";
            public readonly string Description = "Description";
            public readonly string Cost = "Cost";
        }
        static readonly ActionParamsClass_ComponentUpdate s_params_ComponentUpdate = new ActionParamsClass_ComponentUpdate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ComponentUpdate ComponentUpdateParams { get { return s_params_ComponentUpdate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ComponentUpdate
        {
            public readonly string id = "id";
            public readonly string Description = "Description";
            public readonly string Cost = "Cost";
        }
        static readonly ActionParamsClass_ComponentRemove s_params_ComponentRemove = new ActionParamsClass_ComponentRemove();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ComponentRemove ComponentRemoveParams { get { return s_params_ComponentRemove; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ComponentRemove
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GeneratePdf s_params_GeneratePdf = new ActionParamsClass_GeneratePdf();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GeneratePdf GeneratePdfParams { get { return s_params_GeneratePdf; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GeneratePdf
        {
            public readonly string id = "id";
            public readonly string DocumentTemplateId = "DocumentTemplateId";
        }
        static readonly ActionParamsClass_GeneratePdfPackage s_params_GeneratePdfPackage = new ActionParamsClass_GeneratePdfPackage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GeneratePdfPackage GeneratePdfPackageParams { get { return s_params_GeneratePdfPackage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GeneratePdfPackage
        {
            public readonly string id = "id";
            public readonly string DocumentTemplatePackageId = "DocumentTemplatePackageId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_JobController : Disco.Web.Areas.API.Controllers.JobController
    {
        public T4MVC_JobController() : base(Dummy.Instance) { }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string key, string value, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(int id, string key, string value, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateOverride(callInfo, id, key, value, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateExpectedClosedDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ExpectedClosedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateExpectedClosedDate(int id, string ExpectedClosedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateExpectedClosedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ExpectedClosedDate", ExpectedClosedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateExpectedClosedDateOverride(callInfo, id, ExpectedClosedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDeviceHeldLocationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string DeviceHeldLocation, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDeviceHeldLocation(int id, string DeviceHeldLocation, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDeviceHeldLocation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DeviceHeldLocation", DeviceHeldLocation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateDeviceHeldLocationOverride(callInfo, id, DeviceHeldLocation, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateFlagsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Flags, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateFlags(int id, string Flags, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFlags);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Flags", Flags);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateFlagsOverride(callInfo, id, Flags, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyAccountingChargeRequiredOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string AccountingChargeRequiredDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyAccountingChargeRequired(int id, string AccountingChargeRequiredDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyAccountingChargeRequired);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AccountingChargeRequiredDate", AccountingChargeRequiredDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyAccountingChargeRequiredOverride(callInfo, id, AccountingChargeRequiredDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyAccountingChargeAddedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string AccountingChargeAddedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyAccountingChargeAdded(int id, string AccountingChargeAddedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyAccountingChargeAdded);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AccountingChargeAddedDate", AccountingChargeAddedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyAccountingChargeAddedOverride(callInfo, id, AccountingChargeAddedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyAccountingChargePaidOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string AccountingChargePaidDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyAccountingChargePaid(int id, string AccountingChargePaidDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyAccountingChargePaid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AccountingChargePaidDate", AccountingChargePaidDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyAccountingChargePaidOverride(callInfo, id, AccountingChargePaidDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyPurchaseOrderRaisedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PurchaseOrderRaisedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyPurchaseOrderRaised(int id, string PurchaseOrderRaisedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyPurchaseOrderRaised);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PurchaseOrderRaisedDate", PurchaseOrderRaisedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyPurchaseOrderRaisedOverride(callInfo, id, PurchaseOrderRaisedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyPurchaseOrderReferenceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PurchaseOrderReference, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyPurchaseOrderReference(int id, string PurchaseOrderReference, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyPurchaseOrderReference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PurchaseOrderReference", PurchaseOrderReference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyPurchaseOrderReferenceOverride(callInfo, id, PurchaseOrderReference, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyPurchaseOrderSentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PurchaseOrderSentDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyPurchaseOrderSent(int id, string PurchaseOrderSentDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyPurchaseOrderSent);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PurchaseOrderSentDate", PurchaseOrderSentDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyPurchaseOrderSentOverride(callInfo, id, PurchaseOrderSentDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyInvoiceReceivedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string InvoiceReceivedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyInvoiceReceived(int id, string InvoiceReceivedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyInvoiceReceived);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InvoiceReceivedDate", InvoiceReceivedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyInvoiceReceivedOverride(callInfo, id, InvoiceReceivedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyRepairerNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string RepairerName, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerName(int id, string RepairerName, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "RepairerName", RepairerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyRepairerNameOverride(callInfo, id, RepairerName, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyRepairerLoggedDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string RepairerLoggedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerLoggedDate(int id, string RepairerLoggedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerLoggedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "RepairerLoggedDate", RepairerLoggedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyRepairerLoggedDateOverride(callInfo, id, RepairerLoggedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyRepairerReferenceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string RepairerReference, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerReference(int id, string RepairerReference, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerReference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "RepairerReference", RepairerReference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyRepairerReferenceOverride(callInfo, id, RepairerReference, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyRepairerCompletedDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string RepairerCompletedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyRepairerCompletedDate(int id, string RepairerCompletedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyRepairerCompletedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "RepairerCompletedDate", RepairerCompletedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyRepairerCompletedDateOverride(callInfo, id, RepairerCompletedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNonWarrantyIsInsuranceClaimOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool IsInsuranceClaim, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateNonWarrantyIsInsuranceClaim(int id, bool IsInsuranceClaim, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateNonWarrantyIsInsuranceClaim);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "IsInsuranceClaim", IsInsuranceClaim);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNonWarrantyIsInsuranceClaimOverride(callInfo, id, IsInsuranceClaim, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceLossOrDamageDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string LossOrDamageDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceLossOrDamageDate(int id, string LossOrDamageDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceLossOrDamageDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "LossOrDamageDate", LossOrDamageDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceLossOrDamageDateOverride(callInfo, id, LossOrDamageDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceEventLocationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string EventLocation, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceEventLocation(int id, string EventLocation, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceEventLocation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EventLocation", EventLocation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceEventLocationOverride(callInfo, id, EventLocation, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceDescriptionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Description, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceDescription(int id, string Description, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceDescription);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Description", Description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceDescriptionOverride(callInfo, id, Description, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceThirdPartyCausedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ThirdPartyCaused, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceThirdPartyCaused(int id, string ThirdPartyCaused, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceThirdPartyCaused);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ThirdPartyCaused", ThirdPartyCaused);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceThirdPartyCausedOverride(callInfo, id, ThirdPartyCaused, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceThirdPartyCausedNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ThirdPartyCausedName, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceThirdPartyCausedName(int id, string ThirdPartyCausedName, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceThirdPartyCausedName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ThirdPartyCausedName", ThirdPartyCausedName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceThirdPartyCausedNameOverride(callInfo, id, ThirdPartyCausedName, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceThirdPartyCausedWhyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ThirdPartyCausedWhy, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceThirdPartyCausedWhy(int id, string ThirdPartyCausedWhy, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceThirdPartyCausedWhy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ThirdPartyCausedWhy", ThirdPartyCausedWhy);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceThirdPartyCausedWhyOverride(callInfo, id, ThirdPartyCausedWhy, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceWitnessesNamesAddressesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string WitnessesNamesAddresses, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceWitnessesNamesAddresses(int id, string WitnessesNamesAddresses, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceWitnessesNamesAddresses);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "WitnessesNamesAddresses", WitnessesNamesAddresses);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceWitnessesNamesAddressesOverride(callInfo, id, WitnessesNamesAddresses, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceBurglaryTheftMethodOfEntryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string BurglaryTheftMethodOfEntry, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceBurglaryTheftMethodOfEntry(int id, string BurglaryTheftMethodOfEntry, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceBurglaryTheftMethodOfEntry);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "BurglaryTheftMethodOfEntry", BurglaryTheftMethodOfEntry);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceBurglaryTheftMethodOfEntryOverride(callInfo, id, BurglaryTheftMethodOfEntry, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsurancePropertyLastSeenDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PropertyLastSeenDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsurancePropertyLastSeenDate(int id, string PropertyLastSeenDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePropertyLastSeenDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PropertyLastSeenDate", PropertyLastSeenDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsurancePropertyLastSeenDateOverride(callInfo, id, PropertyLastSeenDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsurancePoliceNotifiedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PoliceNotified, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsurancePoliceNotified(int id, string PoliceNotified, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotified);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PoliceNotified", PoliceNotified);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsurancePoliceNotifiedOverride(callInfo, id, PoliceNotified, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsurancePoliceNotifiedStationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PoliceNotifiedStation, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsurancePoliceNotifiedStation(int id, string PoliceNotifiedStation, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotifiedStation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PoliceNotifiedStation", PoliceNotifiedStation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsurancePoliceNotifiedStationOverride(callInfo, id, PoliceNotifiedStation, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsurancePoliceNotifiedDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PoliceNotifiedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsurancePoliceNotifiedDate(int id, string PoliceNotifiedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotifiedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PoliceNotifiedDate", PoliceNotifiedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsurancePoliceNotifiedDateOverride(callInfo, id, PoliceNotifiedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsurancePoliceNotifiedCrimeReportNoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PoliceNotifiedCrimeReportNo, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsurancePoliceNotifiedCrimeReportNo(int id, string PoliceNotifiedCrimeReportNo, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsurancePoliceNotifiedCrimeReportNo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PoliceNotifiedCrimeReportNo", PoliceNotifiedCrimeReportNo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsurancePoliceNotifiedCrimeReportNoOverride(callInfo, id, PoliceNotifiedCrimeReportNo, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceRecoverReduceActionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string RecoverReduceAction, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceRecoverReduceAction(int id, string RecoverReduceAction, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceRecoverReduceAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "RecoverReduceAction", RecoverReduceAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceRecoverReduceActionOverride(callInfo, id, RecoverReduceAction, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceOtherInterestedPartiesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string OtherInterestedParties, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceOtherInterestedParties(int id, string OtherInterestedParties, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceOtherInterestedParties);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "OtherInterestedParties", OtherInterestedParties);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceOtherInterestedPartiesOverride(callInfo, id, OtherInterestedParties, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceDateOfPurchaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string DateOfPurchase, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceDateOfPurchase(int id, string DateOfPurchase, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceDateOfPurchase);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DateOfPurchase", DateOfPurchase);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceDateOfPurchaseOverride(callInfo, id, DateOfPurchase, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceClaimFormSentDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ClaimFormSentDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceClaimFormSentDate(int id, string ClaimFormSentDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceClaimFormSentDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ClaimFormSentDate", ClaimFormSentDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceClaimFormSentDateOverride(callInfo, id, ClaimFormSentDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceClaimFormSentUserIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ClaimFormSentUserId, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceClaimFormSentUserId(int id, string ClaimFormSentUserId, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceClaimFormSentUserId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ClaimFormSentUserId", ClaimFormSentUserId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceClaimFormSentUserIdOverride(callInfo, id, ClaimFormSentUserId, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateWarrantyExternalNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ExternalName, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateWarrantyExternalName(int id, string ExternalName, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ExternalName", ExternalName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateWarrantyExternalNameOverride(callInfo, id, ExternalName, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateWarrantyExternalLoggedDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ExternalLoggedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateWarrantyExternalLoggedDate(int id, string ExternalLoggedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalLoggedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ExternalLoggedDate", ExternalLoggedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateWarrantyExternalLoggedDateOverride(callInfo, id, ExternalLoggedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateWarrantyExternalReferenceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ExternalReference, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateWarrantyExternalReference(int id, string ExternalReference, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalReference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ExternalReference", ExternalReference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateWarrantyExternalReferenceOverride(callInfo, id, ExternalReference, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateWarrantyExternalCompletedDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string ExternalCompletedDate, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateWarrantyExternalCompletedDate(int id, string ExternalCompletedDate, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyExternalCompletedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ExternalCompletedDate", ExternalCompletedDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateWarrantyExternalCompletedDateOverride(callInfo, id, ExternalCompletedDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateSubTypesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, System.Collections.Generic.List<string> SubTypes, bool? AddComponents, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateSubTypes(int id, System.Collections.Generic.List<string> SubTypes, bool? AddComponents, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSubTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "SubTypes", SubTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "AddComponents", AddComponents);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateSubTypesOverride(callInfo, id, SubTypes, AddComponents, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateFlagOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, long? Flag, string Reason, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateFlag(int id, long? Flag, string Reason, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFlag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Flag", Flag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Reason", Reason);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateFlagOverride(callInfo, id, Flag, Reason, redirect);
            return callInfo;
        }

        [NonAction]
        partial void WaitingForUserActionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Reason, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult WaitingForUserAction(int id, string Reason, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WaitingForUserAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Reason", Reason);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            WaitingForUserActionOverride(callInfo, id, Reason, redirect);
            return callInfo;
        }

        [NonAction]
        partial void NotWaitingForUserActionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Resolution, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult NotWaitingForUserAction(int id, string Resolution, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NotWaitingForUserAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Resolution", Resolution);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            NotWaitingForUserActionOverride(callInfo, id, Resolution, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DeviceReadyForReturnOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeviceReadyForReturn(int id, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeviceReadyForReturn);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DeviceReadyForReturnOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DeviceHeldOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeviceHeld(int id, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeviceHeld);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DeviceHeldOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DeviceReturnedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeviceReturned(int id, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeviceReturned);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DeviceReturnedOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void ForceCloseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Reason, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForceClose(int id, string Reason, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForceClose);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Reason", Reason);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            ForceCloseOverride(callInfo, id, Reason, redirect);
            return callInfo;
        }

        [NonAction]
        partial void CloseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Close(int id, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Close);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            CloseOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void ReopenOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Reopen(int id, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Reopen);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            ReopenOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(int id, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DeleteOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void ConvertHWarToHNWarOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult ConvertHWarToHNWar(int id, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ConvertHWarToHNWar);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            ConvertHWarToHNWarOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void CommentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Comments(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Comments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CommentsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Comment(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Comment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CommentOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CommentPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        [NonAction]
        public override System.Web.Mvc.ActionResult CommentPost(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CommentPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            CommentPostOverride(callInfo, id, comment);
            return callInfo;
        }

        [NonAction]
        partial void CommentRemoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult CommentRemove(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CommentRemove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CommentRemoveOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentDownloadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AttachmentDownload(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentDownload);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AttachmentDownloadOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentThumbnailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AttachmentThumbnail(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentThumbnail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AttachmentThumbnailOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentUploadOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Comments);

        [NonAction]
        public override System.Web.Mvc.ActionResult AttachmentUpload(int id, string Comments)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentUpload);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Comments", Comments);
            AttachmentUploadOverride(callInfo, id, Comments);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Attachment(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AttachmentOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Attachments(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attachments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AttachmentsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AttachmentRemoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AttachmentRemove(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentRemove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AttachmentRemoveOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ComponentAddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Description, string Cost);

        [NonAction]
        public override System.Web.Mvc.ActionResult ComponentAdd(int id, string Description, string Cost)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ComponentAdd);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Description", Description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Cost", Cost);
            ComponentAddOverride(callInfo, id, Description, Cost);
            return callInfo;
        }

        [NonAction]
        partial void ComponentUpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Description, string Cost);

        [NonAction]
        public override System.Web.Mvc.ActionResult ComponentUpdate(int id, string Description, string Cost)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ComponentUpdate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Description", Description);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Cost", Cost);
            ComponentUpdateOverride(callInfo, id, Description, Cost);
            return callInfo;
        }

        [NonAction]
        partial void ComponentRemoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ComponentRemove(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ComponentRemove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ComponentRemoveOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void StatisticsDailyOpenedClosedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult StatisticsDailyOpenedClosed()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StatisticsDailyOpenedClosed);
            StatisticsDailyOpenedClosedOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GeneratePdfOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string DocumentTemplateId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GeneratePdf(int id, string DocumentTemplateId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GeneratePdf);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DocumentTemplateId", DocumentTemplateId);
            GeneratePdfOverride(callInfo, id, DocumentTemplateId);
            return callInfo;
        }

        [NonAction]
        partial void GeneratePdfPackageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string DocumentTemplatePackageId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GeneratePdfPackage(int id, string DocumentTemplatePackageId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GeneratePdfPackage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DocumentTemplatePackageId", DocumentTemplatePackageId);
            GeneratePdfPackageOverride(callInfo, id, DocumentTemplatePackageId);
            return callInfo;
        }

        [NonAction]
        partial void DeviceHeldLocationsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeviceHeldLocations()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeviceHeldLocations);
            DeviceHeldLocationsOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
