// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Disco.Web.Controllers
{
    public partial class InitialConfigController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InitialConfigController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected InitialConfigController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FileStoreBranch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileStoreBranch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AdministratorsSearch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdministratorsSearch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AdministratorsSubject()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdministratorsSubject);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InitialConfigController Actions { get { return MVC.InitialConfig; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "InitialConfig";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "InitialConfig";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Welcome = "Welcome";
            public readonly string Database = "Database";
            public readonly string FileStore = "FileStore";
            public readonly string FileStoreBranch = "FileStoreBranch";
            public readonly string Administrators = "Administrators";
            public readonly string AdministratorsSearch = "AdministratorsSearch";
            public readonly string AdministratorsSubject = "AdministratorsSubject";
            public readonly string Complete = "Complete";
            public readonly string RestartWebApp = "RestartWebApp";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Welcome = "Welcome";
            public const string Database = "Database";
            public const string FileStore = "FileStore";
            public const string FileStoreBranch = "FileStoreBranch";
            public const string Administrators = "Administrators";
            public const string AdministratorsSearch = "AdministratorsSearch";
            public const string AdministratorsSubject = "AdministratorsSubject";
            public const string Complete = "Complete";
            public const string RestartWebApp = "RestartWebApp";
        }


        static readonly ActionParamsClass_Welcome s_params_Welcome = new ActionParamsClass_Welcome();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Welcome WelcomeParams { get { return s_params_Welcome; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Welcome
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Database s_params_Database = new ActionParamsClass_Database();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Database DatabaseParams { get { return s_params_Database; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Database
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_FileStore s_params_FileStore = new ActionParamsClass_FileStore();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FileStore FileStoreParams { get { return s_params_FileStore; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FileStore
        {
            public readonly string m = "m";
        }
        static readonly ActionParamsClass_FileStoreBranch s_params_FileStoreBranch = new ActionParamsClass_FileStoreBranch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FileStoreBranch FileStoreBranchParams { get { return s_params_FileStoreBranch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FileStoreBranch
        {
            public readonly string Path = "Path";
        }
        static readonly ActionParamsClass_AdministratorsSearch s_params_AdministratorsSearch = new ActionParamsClass_AdministratorsSearch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AdministratorsSearch AdministratorsSearchParams { get { return s_params_AdministratorsSearch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AdministratorsSearch
        {
            public readonly string term = "term";
        }
        static readonly ActionParamsClass_AdministratorsSubject s_params_AdministratorsSubject = new ActionParamsClass_AdministratorsSubject();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AdministratorsSubject AdministratorsSubjectParams { get { return s_params_AdministratorsSubject; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AdministratorsSubject
        {
            public readonly string Id = "Id";
        }
        static readonly ActionParamsClass_Administrators s_params_Administrators = new ActionParamsClass_Administrators();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Administrators AdministratorsParams { get { return s_params_Administrators; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Administrators
        {
            public readonly string Subjects = "Subjects";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ViewStart = "_ViewStart";
                public readonly string Administrators = "Administrators";
                public readonly string Complete = "Complete";
                public readonly string Database = "Database";
                public readonly string FileStore = "FileStore";
                public readonly string RestartWebApp = "RestartWebApp";
                public readonly string Welcome = "Welcome";
            }
            public readonly string _ViewStart = "~/Views/InitialConfig/_ViewStart.cshtml";
            public readonly string Administrators = "~/Views/InitialConfig/Administrators.cshtml";
            public readonly string Complete = "~/Views/InitialConfig/Complete.cshtml";
            public readonly string Database = "~/Views/InitialConfig/Database.cshtml";
            public readonly string FileStore = "~/Views/InitialConfig/FileStore.cshtml";
            public readonly string RestartWebApp = "~/Views/InitialConfig/RestartWebApp.cshtml";
            public readonly string Welcome = "~/Views/InitialConfig/Welcome.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_InitialConfigController : Disco.Web.Controllers.InitialConfigController
    {
        public T4MVC_InitialConfigController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void WelcomeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Welcome()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Welcome);
            WelcomeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void WelcomeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Disco.Web.Models.InitialConfig.WelcomeModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Welcome(Disco.Web.Models.InitialConfig.WelcomeModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Welcome);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            WelcomeOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DatabaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Database()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Database);
            DatabaseOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DatabaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Disco.Web.Models.InitialConfig.DatabaseModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Database(Disco.Web.Models.InitialConfig.DatabaseModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Database);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            DatabaseOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void FileStoreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileStore()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileStore);
            FileStoreOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FileStoreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Disco.Web.Models.InitialConfig.FileStoreModel m);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileStore(Disco.Web.Models.InitialConfig.FileStoreModel m)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileStore);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "m", m);
            FileStoreOverride(callInfo, m);
            return callInfo;
        }

        [NonAction]
        partial void FileStoreBranchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string Path);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileStoreBranch(string Path)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileStoreBranch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Path", Path);
            FileStoreBranchOverride(callInfo, Path);
            return callInfo;
        }

        [NonAction]
        partial void AdministratorsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Administrators()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Administrators);
            AdministratorsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AdministratorsSearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string term);

        [NonAction]
        public override System.Web.Mvc.ActionResult AdministratorsSearch(string term)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdministratorsSearch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            AdministratorsSearchOverride(callInfo, term);
            return callInfo;
        }

        [NonAction]
        partial void AdministratorsSubjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AdministratorsSubject(string Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdministratorsSubject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            AdministratorsSubjectOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void AdministratorsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string[] Subjects);

        [NonAction]
        public override System.Web.Mvc.ActionResult Administrators(string[] Subjects)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Administrators);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Subjects", Subjects);
            AdministratorsOverride(callInfo, Subjects);
            return callInfo;
        }

        [NonAction]
        partial void CompleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Complete()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Complete);
            CompleteOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RestartWebAppOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult RestartWebApp()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RestartWebApp);
            RestartWebAppOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
